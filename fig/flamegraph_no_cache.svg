<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="646" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="629.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="629.00"> </text><svg id="frames" x="10" width="1180" total_samples="9255"><g><title>gb-rs:disk$0 (6 samples, 0.06%)</title><rect x="0.0000%" y="581" width="0.0648%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="6"/><text x="0.2500%" y="591.50"></text></g><g><title>__clone3 (6 samples, 0.06%)</title><rect x="0.0000%" y="565" width="0.0648%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="6"/><text x="0.2500%" y="575.50"></text></g><g><title>start_thread (6 samples, 0.06%)</title><rect x="0.0000%" y="549" width="0.0648%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="6"/><text x="0.2500%" y="559.50"></text></g><g><title>impl_thrd_routine (6 samples, 0.06%)</title><rect x="0.0000%" y="533" width="0.0648%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="6"/><text x="0.2500%" y="543.50"></text></g><g><title>util_queue_thread_func (6 samples, 0.06%)</title><rect x="0.0000%" y="517" width="0.0648%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="6"/><text x="0.2500%" y="527.50"></text></g><g><title>cnd_wait (6 samples, 0.06%)</title><rect x="0.0000%" y="501" width="0.0648%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="6"/><text x="0.2500%" y="511.50"></text></g><g><title>__GI___pthread_cond_wait (5 samples, 0.05%)</title><rect x="0.0108%" y="485" width="0.0540%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="5"/><text x="0.2608%" y="495.50"></text></g><g><title>__futex_abstimed_wait_common (5 samples, 0.05%)</title><rect x="0.0108%" y="469" width="0.0540%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="5"/><text x="0.2608%" y="479.50"></text></g><g><title>gb-rs:sh0 (1 samples, 0.01%)</title><rect x="0.0648%" y="581" width="0.0108%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="1"/><text x="0.3148%" y="591.50"></text></g><g><title>__clone3 (1 samples, 0.01%)</title><rect x="0.0648%" y="565" width="0.0108%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="1"/><text x="0.3148%" y="575.50"></text></g><g><title>start_thread (1 samples, 0.01%)</title><rect x="0.0648%" y="549" width="0.0108%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="1"/><text x="0.3148%" y="559.50"></text></g><g><title>impl_thrd_routine (1 samples, 0.01%)</title><rect x="0.0648%" y="533" width="0.0108%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="1"/><text x="0.3148%" y="543.50"></text></g><g><title>util_queue_thread_func (1 samples, 0.01%)</title><rect x="0.0648%" y="517" width="0.0108%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="1"/><text x="0.3148%" y="527.50"></text></g><g><title>cnd_wait (1 samples, 0.01%)</title><rect x="0.0648%" y="501" width="0.0108%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="1"/><text x="0.3148%" y="511.50"></text></g><g><title>__GI___pthread_cond_wait (1 samples, 0.01%)</title><rect x="0.0648%" y="485" width="0.0108%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="1"/><text x="0.3148%" y="495.50"></text></g><g><title>gb-rs:sh2 (1 samples, 0.01%)</title><rect x="0.0756%" y="581" width="0.0108%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="1"/><text x="0.3256%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.0756%" y="565" width="0.0108%" height="15" fill="rgb(225,20,46)" fg:x="7" fg:w="1"/><text x="0.3256%" y="575.50"></text></g><g><title>__futex_abstimed_wait_common (1 samples, 0.01%)</title><rect x="0.0756%" y="549" width="0.0108%" height="15" fill="rgb(210,31,41)" fg:x="7" fg:w="1"/><text x="0.3256%" y="559.50"></text></g><g><title>__GI___pthread_cleanup_push (1 samples, 0.01%)</title><rect x="0.0864%" y="469" width="0.0108%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="1"/><text x="0.3364%" y="479.50"></text></g><g><title>gb-rs:traceq0 (6 samples, 0.06%)</title><rect x="0.0864%" y="581" width="0.0648%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="6"/><text x="0.3364%" y="591.50"></text></g><g><title>__clone3 (6 samples, 0.06%)</title><rect x="0.0864%" y="565" width="0.0648%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="6"/><text x="0.3364%" y="575.50"></text></g><g><title>start_thread (6 samples, 0.06%)</title><rect x="0.0864%" y="549" width="0.0648%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="6"/><text x="0.3364%" y="559.50"></text></g><g><title>impl_thrd_routine (6 samples, 0.06%)</title><rect x="0.0864%" y="533" width="0.0648%" height="15" fill="rgb(221,5,38)" fg:x="8" fg:w="6"/><text x="0.3364%" y="543.50"></text></g><g><title>util_queue_thread_func (6 samples, 0.06%)</title><rect x="0.0864%" y="517" width="0.0648%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="6"/><text x="0.3364%" y="527.50"></text></g><g><title>cnd_wait (6 samples, 0.06%)</title><rect x="0.0864%" y="501" width="0.0648%" height="15" fill="rgb(241,131,45)" fg:x="8" fg:w="6"/><text x="0.3364%" y="511.50"></text></g><g><title>__GI___pthread_cond_wait (6 samples, 0.06%)</title><rect x="0.0864%" y="485" width="0.0648%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="6"/><text x="0.3364%" y="495.50"></text></g><g><title>__futex_abstimed_wait_common (5 samples, 0.05%)</title><rect x="0.0972%" y="469" width="0.0540%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="5"/><text x="0.3472%" y="479.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="0.1513%" y="565" width="0.0108%" height="15" fill="rgb(238,160,17)" fg:x="14" fg:w="1"/><text x="0.4013%" y="575.50"></text></g><g><title>CheckFork (1 samples, 0.01%)</title><rect x="0.1621%" y="549" width="0.0108%" height="15" fill="rgb(214,148,48)" fg:x="15" fg:w="1"/><text x="0.4121%" y="559.50"></text></g><g><title>GL_CreateTexture (1 samples, 0.01%)</title><rect x="0.1729%" y="549" width="0.0108%" height="15" fill="rgb(232,36,49)" fg:x="16" fg:w="1"/><text x="0.4229%" y="559.50"></text></g><g><title>GL_RenderPresent (1 samples, 0.01%)</title><rect x="0.1837%" y="549" width="0.0108%" height="15" fill="rgb(209,103,24)" fg:x="17" fg:w="1"/><text x="0.4337%" y="559.50"></text></g><g><title>GL_RunCommandQueue (1 samples, 0.01%)</title><rect x="0.1945%" y="549" width="0.0108%" height="15" fill="rgb(229,88,8)" fg:x="18" fg:w="1"/><text x="0.4445%" y="559.50"></text></g><g><title>GL_UpdateTexture (1 samples, 0.01%)</title><rect x="0.2053%" y="549" width="0.0108%" height="15" fill="rgb(213,181,19)" fg:x="19" fg:w="1"/><text x="0.4553%" y="559.50"></text></g><g><title>SDL_AllocateRenderVertices (2 samples, 0.02%)</title><rect x="0.2161%" y="549" width="0.0216%" height="15" fill="rgb(254,191,54)" fg:x="20" fg:w="2"/><text x="0.4661%" y="559.50"></text></g><g><title>SDL_CalculateBlitN (1 samples, 0.01%)</title><rect x="0.2377%" y="549" width="0.0108%" height="15" fill="rgb(241,83,37)" fg:x="22" fg:w="1"/><text x="0.4877%" y="559.50"></text></g><g><title>SDL_GetWindowSizeInPixels_REAL (1 samples, 0.01%)</title><rect x="0.2485%" y="549" width="0.0108%" height="15" fill="rgb(233,36,39)" fg:x="23" fg:w="1"/><text x="0.4985%" y="559.50"></text></g><g><title>XextFindDisplay (1 samples, 0.01%)</title><rect x="0.2593%" y="549" width="0.0108%" height="15" fill="rgb(226,3,54)" fg:x="24" fg:w="1"/><text x="0.5093%" y="559.50"></text></g><g><title>_XInternalLockDisplay (1 samples, 0.01%)</title><rect x="0.2701%" y="549" width="0.0108%" height="15" fill="rgb(245,192,40)" fg:x="25" fg:w="1"/><text x="0.5201%" y="559.50"></text></g><g><title>_XStoreEventCookie (1 samples, 0.01%)</title><rect x="0.2809%" y="549" width="0.0108%" height="15" fill="rgb(238,167,29)" fg:x="26" fg:w="1"/><text x="0.5309%" y="559.50"></text></g><g><title>__GI___pthread_cond_signal (1 samples, 0.01%)</title><rect x="0.2917%" y="549" width="0.0108%" height="15" fill="rgb(232,182,51)" fg:x="27" fg:w="1"/><text x="0.5417%" y="559.50"></text></g><g><title>___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="0.3025%" y="549" width="0.0108%" height="15" fill="rgb(231,60,39)" fg:x="28" fg:w="1"/><text x="0.5525%" y="559.50"></text></g><g><title>__clone3 (10 samples, 0.11%)</title><rect x="0.3133%" y="549" width="0.1080%" height="15" fill="rgb(208,69,12)" fg:x="29" fg:w="10"/><text x="0.5633%" y="559.50"></text></g><g><title>__glXInitialize (1 samples, 0.01%)</title><rect x="0.4214%" y="549" width="0.0108%" height="15" fill="rgb(235,93,37)" fg:x="39" fg:w="1"/><text x="0.6714%" y="559.50"></text></g><g><title>__glXLookupDisplay (1 samples, 0.01%)</title><rect x="0.4322%" y="549" width="0.0108%" height="15" fill="rgb(213,116,39)" fg:x="40" fg:w="1"/><text x="0.6822%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="0.4430%" y="549" width="0.0108%" height="15" fill="rgb(222,207,29)" fg:x="41" fg:w="1"/><text x="0.6930%" y="559.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="0.4538%" y="549" width="0.0108%" height="15" fill="rgb(206,96,30)" fg:x="42" fg:w="1"/><text x="0.7038%" y="559.50"></text></g><g><title>_int_free_create_chunk (1 samples, 0.01%)</title><rect x="0.4646%" y="549" width="0.0108%" height="15" fill="rgb(218,138,4)" fg:x="43" fg:w="1"/><text x="0.7146%" y="559.50"></text></g><g><title>_mesa_ActiveTexture (1 samples, 0.01%)</title><rect x="0.4754%" y="549" width="0.0108%" height="15" fill="rgb(250,191,14)" fg:x="44" fg:w="1"/><text x="0.7254%" y="559.50"></text></g><g><title>_mesa_HashFindFreeKeyBlock (1 samples, 0.01%)</title><rect x="0.4862%" y="549" width="0.0108%" height="15" fill="rgb(239,60,40)" fg:x="45" fg:w="1"/><text x="0.7362%" y="559.50"></text></g><g><title>blorp_blit (1 samples, 0.01%)</title><rect x="0.4970%" y="549" width="0.0108%" height="15" fill="rgb(206,27,48)" fg:x="46" fg:w="1"/><text x="0.7470%" y="559.50"></text></g><g><title>default_bindings.isra.0 (1 samples, 0.01%)</title><rect x="0.5078%" y="549" width="0.0108%" height="15" fill="rgb(225,35,8)" fg:x="47" fg:w="1"/><text x="0.7578%" y="559.50"></text></g><g><title>dri2_flush_frontbuffer (1 samples, 0.01%)</title><rect x="0.5186%" y="549" width="0.0108%" height="15" fill="rgb(250,213,24)" fg:x="48" fg:w="1"/><text x="0.7686%" y="559.50"></text></g><g><title>driConvertConfigs (1 samples, 0.01%)</title><rect x="0.5294%" y="549" width="0.0108%" height="15" fill="rgb(247,123,22)" fg:x="49" fg:w="1"/><text x="0.7794%" y="559.50"></text></g><g><title>gb_rs::cpu::SizedInstruction::decode (2 samples, 0.02%)</title><rect x="0.5402%" y="549" width="0.0216%" height="15" fill="rgb(231,138,38)" fg:x="50" fg:w="2"/><text x="0.7902%" y="559.50"></text></g><g><title>gfx9_toggle_preemption (3 samples, 0.03%)</title><rect x="0.5619%" y="549" width="0.0324%" height="15" fill="rgb(231,145,46)" fg:x="52" fg:w="3"/><text x="0.8119%" y="559.50"></text></g><g><title>handle_response (1 samples, 0.01%)</title><rect x="0.5943%" y="549" width="0.0108%" height="15" fill="rgb(251,118,11)" fg:x="55" fg:w="1"/><text x="0.8443%" y="559.50"></text></g><g><title>hash_table_search (1 samples, 0.01%)</title><rect x="0.6051%" y="549" width="0.0108%" height="15" fill="rgb(217,147,25)" fg:x="56" fg:w="1"/><text x="0.8551%" y="559.50"></text></g><g><title>iris_bo_wait_syncobj (1 samples, 0.01%)</title><rect x="0.6159%" y="549" width="0.0108%" height="15" fill="rgb(247,81,37)" fg:x="57" fg:w="1"/><text x="0.8659%" y="559.50"></text></g><g><title>iris_fence_finish (1 samples, 0.01%)</title><rect x="0.6267%" y="549" width="0.0108%" height="15" fill="rgb(209,12,38)" fg:x="58" fg:w="1"/><text x="0.8767%" y="559.50"></text></g><g><title>iris_fence_reference (1 samples, 0.01%)</title><rect x="0.6375%" y="549" width="0.0108%" height="15" fill="rgb(227,1,9)" fg:x="59" fg:w="1"/><text x="0.8875%" y="559.50"></text></g><g><title>iris_flush_resource (2 samples, 0.02%)</title><rect x="0.6483%" y="549" width="0.0216%" height="15" fill="rgb(248,47,43)" fg:x="60" fg:w="2"/><text x="0.8983%" y="559.50"></text></g><g><title>iris_resource_render_aux_usage (1 samples, 0.01%)</title><rect x="0.6699%" y="549" width="0.0108%" height="15" fill="rgb(221,10,30)" fg:x="62" fg:w="1"/><text x="0.9199%" y="559.50"></text></g><g><title>iris_transfer_unmap (2 samples, 0.02%)</title><rect x="0.6807%" y="549" width="0.0216%" height="15" fill="rgb(210,229,1)" fg:x="63" fg:w="2"/><text x="0.9307%" y="559.50"></text></g><g><title>isl_gfx9_choose_image_alignment_el (1 samples, 0.01%)</title><rect x="0.7023%" y="549" width="0.0108%" height="15" fill="rgb(222,148,37)" fg:x="65" fg:w="1"/><text x="0.9523%" y="559.50"></text></g><g><title>os_time_get_absolute_timeout (1 samples, 0.01%)</title><rect x="0.7131%" y="549" width="0.0108%" height="15" fill="rgb(234,67,33)" fg:x="66" fg:w="1"/><text x="0.9631%" y="559.50"></text></g><g><title>prep_teximage (1 samples, 0.01%)</title><rect x="0.7239%" y="549" width="0.0108%" height="15" fill="rgb(247,98,35)" fg:x="67" fg:w="1"/><text x="0.9739%" y="559.50"></text></g><g><title>prepare_draw.constprop.0 (3 samples, 0.03%)</title><rect x="0.7347%" y="549" width="0.0324%" height="15" fill="rgb(247,138,52)" fg:x="68" fg:w="3"/><text x="0.9847%" y="559.50"></text></g><g><title>st_TexSubImage (1 samples, 0.01%)</title><rect x="0.7672%" y="549" width="0.0108%" height="15" fill="rgb(213,79,30)" fg:x="71" fg:w="1"/><text x="1.0172%" y="559.50"></text></g><g><title>st_mesa_format_to_pipe_format (1 samples, 0.01%)</title><rect x="0.7780%" y="549" width="0.0108%" height="15" fill="rgb(246,177,23)" fg:x="72" fg:w="1"/><text x="1.0280%" y="559.50"></text></g><g><title>st_update_single_texture (1 samples, 0.01%)</title><rect x="0.7888%" y="549" width="0.0108%" height="15" fill="rgb(230,62,27)" fg:x="73" fg:w="1"/><text x="1.0388%" y="559.50"></text></g><g><title>tc_blit (2 samples, 0.02%)</title><rect x="0.7996%" y="549" width="0.0216%" height="15" fill="rgb(216,154,8)" fg:x="74" fg:w="2"/><text x="1.0496%" y="559.50"></text></g><g><title>tc_call_flush_resource (2 samples, 0.02%)</title><rect x="0.8212%" y="549" width="0.0216%" height="15" fill="rgb(244,35,45)" fg:x="76" fg:w="2"/><text x="1.0712%" y="559.50"></text></g><g><title>teximage_err (1 samples, 0.01%)</title><rect x="0.8428%" y="549" width="0.0108%" height="15" fill="rgb(251,115,12)" fg:x="78" fg:w="1"/><text x="1.0928%" y="559.50"></text></g><g><title>texture_formats_agree (1 samples, 0.01%)</title><rect x="0.8536%" y="549" width="0.0108%" height="15" fill="rgb(240,54,50)" fg:x="79" fg:w="1"/><text x="1.1036%" y="559.50"></text></g><g><title>trace_framebuffer_state (1 samples, 0.01%)</title><rect x="0.8644%" y="549" width="0.0108%" height="15" fill="rgb(233,84,52)" fg:x="80" fg:w="1"/><text x="1.1144%" y="559.50"></text></g><g><title>u_trace_context_process (1 samples, 0.01%)</title><rect x="0.8752%" y="549" width="0.0108%" height="15" fill="rgb(207,117,47)" fg:x="81" fg:w="1"/><text x="1.1252%" y="559.50"></text></g><g><title>u_upload_alloc (1 samples, 0.01%)</title><rect x="0.8860%" y="549" width="0.0108%" height="15" fill="rgb(249,43,39)" fg:x="82" fg:w="1"/><text x="1.1360%" y="559.50"></text></g><g><title>u_vbuf_set_vertex_elements (1 samples, 0.01%)</title><rect x="0.8968%" y="549" width="0.0108%" height="15" fill="rgb(209,38,44)" fg:x="83" fg:w="1"/><text x="1.1468%" y="559.50"></text></g><g><title>validate_array_and_format.isra.0 (1 samples, 0.01%)</title><rect x="0.9076%" y="549" width="0.0108%" height="15" fill="rgb(236,212,23)" fg:x="84" fg:w="1"/><text x="1.1576%" y="559.50"></text></g><g><title>vbo_exec_copy_to_current (1 samples, 0.01%)</title><rect x="0.9184%" y="549" width="0.0108%" height="15" fill="rgb(242,79,21)" fg:x="85" fg:w="1"/><text x="1.1684%" y="559.50"></text></g><g><title>[[heap]] (72 samples, 0.78%)</title><rect x="0.1621%" y="565" width="0.7780%" height="15" fill="rgb(211,96,35)" fg:x="15" fg:w="72"/><text x="0.4121%" y="575.50"></text></g><g><title>xcb_send_request (1 samples, 0.01%)</title><rect x="0.9292%" y="549" width="0.0108%" height="15" fill="rgb(253,215,40)" fg:x="86" fg:w="1"/><text x="1.1792%" y="559.50"></text></g><g><title>&lt;gb_rs::graphics::BgFIFO as gb_rs::graphics::FIFO&gt;::pop (34 samples, 0.37%)</title><rect x="0.9400%" y="549" width="0.3674%" height="15" fill="rgb(211,81,21)" fg:x="87" fg:w="34"/><text x="1.1900%" y="559.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="1.3074%" y="549" width="0.0108%" height="15" fill="rgb(208,190,38)" fg:x="121" fg:w="1"/><text x="1.5574%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="1.3074%" y="533" width="0.0108%" height="15" fill="rgb(235,213,38)" fg:x="121" fg:w="1"/><text x="1.5574%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="1.3074%" y="517" width="0.0108%" height="15" fill="rgb(237,122,38)" fg:x="121" fg:w="1"/><text x="1.5574%" y="527.50"></text></g><g><title>SDL_PixelFormatEnumToMasks_REAL (1 samples, 0.01%)</title><rect x="1.3182%" y="549" width="0.0108%" height="15" fill="rgb(244,218,35)" fg:x="122" fg:w="1"/><text x="1.5682%" y="559.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="1.3290%" y="549" width="0.0108%" height="15" fill="rgb(240,68,47)" fg:x="123" fg:w="1"/><text x="1.5790%" y="559.50"></text></g><g><title>__glXVendorFromDrawable (2 samples, 0.02%)</title><rect x="1.3398%" y="549" width="0.0216%" height="15" fill="rgb(210,16,53)" fg:x="124" fg:w="2"/><text x="1.5898%" y="559.50"></text></g><g><title>__vdso_clock_gettime (39 samples, 0.42%)</title><rect x="1.3614%" y="549" width="0.4214%" height="15" fill="rgb(235,124,12)" fg:x="126" fg:w="39"/><text x="1.6114%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="1.7828%" y="549" width="0.0108%" height="15" fill="rgb(224,169,11)" fg:x="165" fg:w="1"/><text x="2.0328%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="1.7828%" y="533" width="0.0108%" height="15" fill="rgb(250,166,2)" fg:x="165" fg:w="1"/><text x="2.0328%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="1.7828%" y="517" width="0.0108%" height="15" fill="rgb(242,216,29)" fg:x="165" fg:w="1"/><text x="2.0328%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="1.7828%" y="501" width="0.0108%" height="15" fill="rgb(230,116,27)" fg:x="165" fg:w="1"/><text x="2.0328%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.03%)</title><rect x="1.7936%" y="549" width="0.0324%" height="15" fill="rgb(228,99,48)" fg:x="166" fg:w="3"/><text x="2.0436%" y="559.50"></text></g><g><title>error_check_subtexture_negative_dimensions (1 samples, 0.01%)</title><rect x="1.8260%" y="549" width="0.0108%" height="15" fill="rgb(253,11,6)" fg:x="169" fg:w="1"/><text x="2.0760%" y="559.50"></text></g><g><title>gb_rs::cpu::CPU::display_registers (40 samples, 0.43%)</title><rect x="1.8368%" y="549" width="0.4322%" height="15" fill="rgb(247,143,39)" fg:x="170" fg:w="40"/><text x="2.0868%" y="559.50"></text></g><g><title>gb_rs::cpu::CPU::execute (96 samples, 1.04%)</title><rect x="2.2690%" y="549" width="1.0373%" height="15" fill="rgb(236,97,10)" fg:x="210" fg:w="96"/><text x="2.5190%" y="559.50"></text></g><g><title>gb_rs::cpu::CPU::handle_interrupts (52 samples, 0.56%)</title><rect x="3.3063%" y="549" width="0.5619%" height="15" fill="rgb(233,208,19)" fg:x="306" fg:w="52"/><text x="3.5563%" y="559.50"></text></g><g><title>gb_rs::memory::Memory::read_byte (52 samples, 0.56%)</title><rect x="3.3063%" y="533" width="0.5619%" height="15" fill="rgb(216,164,2)" fg:x="306" fg:w="52"/><text x="3.5563%" y="543.50"></text></g><g><title>gb_rs::cpu::SizedInstruction::decode (54 samples, 0.58%)</title><rect x="3.8682%" y="549" width="0.5835%" height="15" fill="rgb(220,129,5)" fg:x="358" fg:w="54"/><text x="4.1182%" y="559.50"></text></g><g><title>gb_rs::cpu::SizedInstruction::decode_cb (1 samples, 0.01%)</title><rect x="4.4516%" y="549" width="0.0108%" height="15" fill="rgb(242,17,10)" fg:x="412" fg:w="1"/><text x="4.7016%" y="559.50"></text></g><g><title>gb_rs::graphics::Graphics::draw_scanline (34 samples, 0.37%)</title><rect x="4.9163%" y="533" width="0.3674%" height="15" fill="rgb(242,107,0)" fg:x="455" fg:w="34"/><text x="5.1663%" y="543.50"></text></g><g><title>&lt;gb_rs::graphics::BgFIFO as gb_rs::graphics::FIFO&gt;::next_line (1 samples, 0.01%)</title><rect x="5.2728%" y="517" width="0.0108%" height="15" fill="rgb(251,28,31)" fg:x="488" fg:w="1"/><text x="5.5228%" y="527.50"></text></g><g><title>sdl2::render::Canvas&lt;T&gt;::copy (1 samples, 0.01%)</title><rect x="5.2836%" y="533" width="0.0108%" height="15" fill="rgb(233,223,10)" fg:x="489" fg:w="1"/><text x="5.5336%" y="543.50"></text></g><g><title>gb_rs::graphics::Graphics::render (78 samples, 0.84%)</title><rect x="4.4625%" y="549" width="0.8428%" height="15" fill="rgb(215,21,27)" fg:x="413" fg:w="78"/><text x="4.7125%" y="559.50"></text></g><g><title>sdl2::render::Canvas&lt;T&gt;::present (1 samples, 0.01%)</title><rect x="5.2944%" y="533" width="0.0108%" height="15" fill="rgb(232,23,21)" fg:x="490" fg:w="1"/><text x="5.5444%" y="543.50"></text></g><g><title>gb_rs::joypad::Joypad::update (40 samples, 0.43%)</title><rect x="5.3052%" y="549" width="0.4322%" height="15" fill="rgb(244,5,23)" fg:x="491" fg:w="40"/><text x="5.5552%" y="559.50"></text></g><g><title>gb_rs::memory::Memory::write_byte (2 samples, 0.02%)</title><rect x="5.7374%" y="549" width="0.0216%" height="15" fill="rgb(226,81,46)" fg:x="531" fg:w="2"/><text x="5.9874%" y="559.50"></text></g><g><title>glXSwapBuffers (2 samples, 0.02%)</title><rect x="5.7590%" y="549" width="0.0216%" height="15" fill="rgb(247,70,30)" fg:x="533" fg:w="2"/><text x="6.0090%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="5.7807%" y="549" width="0.0108%" height="15" fill="rgb(212,68,19)" fg:x="535" fg:w="1"/><text x="6.0307%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="5.7807%" y="533" width="0.0108%" height="15" fill="rgb(240,187,13)" fg:x="535" fg:w="1"/><text x="6.0307%" y="543.50"></text></g><g><title>std::sys::unix::time::Timespec::now (24 samples, 0.26%)</title><rect x="5.7915%" y="549" width="0.2593%" height="15" fill="rgb(223,113,26)" fg:x="536" fg:w="24"/><text x="6.0415%" y="559.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.01%)</title><rect x="6.0508%" y="549" width="0.0108%" height="15" fill="rgb(206,192,2)" fg:x="560" fg:w="1"/><text x="6.3008%" y="559.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (3 samples, 0.03%)</title><rect x="6.2777%" y="533" width="0.0324%" height="15" fill="rgb(241,108,4)" fg:x="581" fg:w="3"/><text x="6.5277%" y="543.50"></text></g><g><title>std::time::Instant::duration_since (3 samples, 0.03%)</title><rect x="6.2777%" y="517" width="0.0324%" height="15" fill="rgb(247,173,49)" fg:x="581" fg:w="3"/><text x="6.5277%" y="527.50"></text></g><g><title>std::time::Instant::checked_duration_since (3 samples, 0.03%)</title><rect x="6.2777%" y="501" width="0.0324%" height="15" fill="rgb(224,114,35)" fg:x="581" fg:w="3"/><text x="6.5277%" y="511.50"></text></g><g><title>std::sys::unix::time::Instant::checked_sub_instant (3 samples, 0.03%)</title><rect x="6.2777%" y="485" width="0.0324%" height="15" fill="rgb(245,159,27)" fg:x="581" fg:w="3"/><text x="6.5277%" y="495.50"></text></g><g><title>[[stack]] (511 samples, 5.52%)</title><rect x="0.9400%" y="565" width="5.5213%" height="15" fill="rgb(245,172,44)" fg:x="87" fg:w="511"/><text x="1.1900%" y="575.50">[[stack..</text></g><g><title>std::time::Instant::elapsed (37 samples, 0.40%)</title><rect x="6.0616%" y="549" width="0.3998%" height="15" fill="rgb(236,23,11)" fg:x="561" fg:w="37"/><text x="6.3116%" y="559.50"></text></g><g><title>std::time::Instant::now (14 samples, 0.15%)</title><rect x="6.3101%" y="533" width="0.1513%" height="15" fill="rgb(205,117,38)" fg:x="584" fg:w="14"/><text x="6.5601%" y="543.50"></text></g><g><title>std::sys::unix::time::Instant::now (14 samples, 0.15%)</title><rect x="6.3101%" y="517" width="0.1513%" height="15" fill="rgb(237,72,25)" fg:x="584" fg:w="14"/><text x="6.5601%" y="527.50"></text></g><g><title>[anon] (1 samples, 0.01%)</title><rect x="6.4614%" y="565" width="0.0108%" height="15" fill="rgb(244,70,9)" fg:x="598" fg:w="1"/><text x="6.7114%" y="575.50"></text></g><g><title>__GI___pthread_self (1 samples, 0.01%)</title><rect x="6.4614%" y="549" width="0.0108%" height="15" fill="rgb(217,125,39)" fg:x="598" fg:w="1"/><text x="6.7114%" y="559.50"></text></g><g><title>[anon_inode:i915.gem] (1 samples, 0.01%)</title><rect x="6.4722%" y="565" width="0.0108%" height="15" fill="rgb(235,36,10)" fg:x="599" fg:w="1"/><text x="6.7222%" y="575.50"></text></g><g><title>_mesa_image_offset (1 samples, 0.01%)</title><rect x="6.4722%" y="549" width="0.0108%" height="15" fill="rgb(251,123,47)" fg:x="599" fg:w="1"/><text x="6.7222%" y="559.50"></text></g><g><title>[crocus_dri.so] (1 samples, 0.01%)</title><rect x="6.4830%" y="565" width="0.0108%" height="15" fill="rgb(221,13,13)" fg:x="600" fg:w="1"/><text x="6.7330%" y="575.50"></text></g><g><title>iris_transfer_flush_region (1 samples, 0.01%)</title><rect x="6.4830%" y="549" width="0.0108%" height="15" fill="rgb(238,131,9)" fg:x="600" fg:w="1"/><text x="6.7330%" y="559.50"></text></g><g><title>[gb-rs] (1 samples, 0.01%)</title><rect x="6.4938%" y="565" width="0.0108%" height="15" fill="rgb(211,50,8)" fg:x="601" fg:w="1"/><text x="6.7438%" y="575.50"></text></g><g><title>SDL_Delay_REAL (1 samples, 0.01%)</title><rect x="6.4938%" y="549" width="0.0108%" height="15" fill="rgb(245,182,24)" fg:x="601" fg:w="1"/><text x="6.7438%" y="559.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (30 samples, 0.32%)</title><rect x="6.5046%" y="549" width="0.3241%" height="15" fill="rgb(242,14,37)" fg:x="602" fg:w="30"/><text x="6.7546%" y="559.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::copy_slice (4 samples, 0.04%)</title><rect x="6.7855%" y="533" width="0.0432%" height="15" fill="rgb(246,228,12)" fg:x="628" fg:w="4"/><text x="7.0355%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="6.7855%" y="517" width="0.0432%" height="15" fill="rgb(213,55,15)" fg:x="628" fg:w="4"/><text x="7.0355%" y="527.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="6.8287%" y="549" width="0.0108%" height="15" fill="rgb(209,9,3)" fg:x="632" fg:w="1"/><text x="7.0787%" y="559.50"></text></g><g><title>&lt;gb_rs::graphics::BgFIFO as gb_rs::graphics::FIFO&gt;::pop (79 samples, 0.85%)</title><rect x="6.8395%" y="549" width="0.8536%" height="15" fill="rgb(230,59,30)" fg:x="633" fg:w="79"/><text x="7.0895%" y="559.50"></text></g><g><title>&lt;gb_rs::graphics::ObjFIFO as gb_rs::graphics::FIFO&gt;::next_line (1 samples, 0.01%)</title><rect x="7.6931%" y="549" width="0.0108%" height="15" fill="rgb(209,121,21)" fg:x="712" fg:w="1"/><text x="7.9431%" y="559.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="7.7039%" y="549" width="0.0324%" height="15" fill="rgb(220,109,13)" fg:x="713" fg:w="3"/><text x="7.9539%" y="559.50"></text></g><g><title>GL_DestroyTexture (1 samples, 0.01%)</title><rect x="7.7364%" y="549" width="0.0108%" height="15" fill="rgb(232,18,1)" fg:x="716" fg:w="1"/><text x="7.9864%" y="559.50"></text></g><g><title>SDL_DestroyTexture_REAL.part.0 (1 samples, 0.01%)</title><rect x="7.7472%" y="549" width="0.0108%" height="15" fill="rgb(215,41,42)" fg:x="717" fg:w="1"/><text x="7.9972%" y="559.50"></text></g><g><title>SDL_IntersectRect_REAL (1 samples, 0.01%)</title><rect x="7.7580%" y="549" width="0.0108%" height="15" fill="rgb(224,123,36)" fg:x="718" fg:w="1"/><text x="8.0080%" y="559.50"></text></g><g><title>SDL_RenderPresent_REAL (1 samples, 0.01%)</title><rect x="7.7688%" y="549" width="0.0108%" height="15" fill="rgb(240,125,3)" fg:x="719" fg:w="1"/><text x="8.0188%" y="559.50"></text></g><g><title>_XInternalLockDisplay (1 samples, 0.01%)</title><rect x="7.7796%" y="549" width="0.0108%" height="15" fill="rgb(205,98,50)" fg:x="720" fg:w="1"/><text x="8.0296%" y="559.50"></text></g><g><title>__GI___nanosleep (1 samples, 0.01%)</title><rect x="7.7904%" y="549" width="0.0108%" height="15" fill="rgb(205,185,37)" fg:x="721" fg:w="1"/><text x="8.0404%" y="559.50"></text></g><g><title>__clock_gettime_2 (15 samples, 0.16%)</title><rect x="7.8012%" y="549" width="0.1621%" height="15" fill="rgb(238,207,15)" fg:x="722" fg:w="15"/><text x="8.0512%" y="559.50"></text></g><g><title>__clock_nanosleep (2 samples, 0.02%)</title><rect x="7.9633%" y="549" width="0.0216%" height="15" fill="rgb(213,199,42)" fg:x="737" fg:w="2"/><text x="8.2133%" y="559.50"></text></g><g><title>__vdso_clock_gettime (12 samples, 0.13%)</title><rect x="7.9849%" y="549" width="0.1297%" height="15" fill="rgb(235,201,11)" fg:x="739" fg:w="12"/><text x="8.2349%" y="559.50"></text></g><g><title>_mesa_draw_arrays.part.0 (1 samples, 0.01%)</title><rect x="8.1145%" y="549" width="0.0108%" height="15" fill="rgb(207,46,11)" fg:x="751" fg:w="1"/><text x="8.3645%" y="559.50"></text></g><g><title>_mesa_format_from_format_and_type (1 samples, 0.01%)</title><rect x="8.1253%" y="549" width="0.0108%" height="15" fill="rgb(241,35,35)" fg:x="752" fg:w="1"/><text x="8.3753%" y="559.50"></text></g><g><title>_mesa_image_address (1 samples, 0.01%)</title><rect x="8.1361%" y="549" width="0.0108%" height="15" fill="rgb(243,32,47)" fg:x="753" fg:w="1"/><text x="8.3861%" y="559.50"></text></g><g><title>_mesa_init_teximage_fields_ms (1 samples, 0.01%)</title><rect x="8.1469%" y="549" width="0.0108%" height="15" fill="rgb(247,202,23)" fg:x="754" fg:w="1"/><text x="8.3969%" y="559.50"></text></g><g><title>_mesa_update_vao_derived_arrays (1 samples, 0.01%)</title><rect x="8.1578%" y="549" width="0.0108%" height="15" fill="rgb(219,102,11)" fg:x="755" fg:w="1"/><text x="8.4078%" y="559.50"></text></g><g><title>brw_blorp_surface_info_init (1 samples, 0.01%)</title><rect x="8.1686%" y="549" width="0.0108%" height="15" fill="rgb(243,110,44)" fg:x="756" fg:w="1"/><text x="8.4186%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (1 samples, 0.01%)</title><rect x="8.2550%" y="517" width="0.0108%" height="15" fill="rgb(222,74,54)" fg:x="764" fg:w="1"/><text x="8.5050%" y="527.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="8.2550%" y="501" width="0.0108%" height="15" fill="rgb(216,99,12)" fg:x="764" fg:w="1"/><text x="8.5050%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.12%)</title><rect x="8.1794%" y="549" width="0.1189%" height="15" fill="rgb(226,22,26)" fg:x="757" fg:w="11"/><text x="8.4294%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.04%)</title><rect x="8.2550%" y="533" width="0.0432%" height="15" fill="rgb(217,163,10)" fg:x="764" fg:w="4"/><text x="8.5050%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.03%)</title><rect x="8.2658%" y="517" width="0.0324%" height="15" fill="rgb(213,25,53)" fg:x="765" fg:w="3"/><text x="8.5158%" y="527.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.03%)</title><rect x="8.2658%" y="501" width="0.0324%" height="15" fill="rgb(252,105,26)" fg:x="765" fg:w="3"/><text x="8.5158%" y="511.50"></text></g><g><title>dri2Flush (1 samples, 0.01%)</title><rect x="8.2982%" y="549" width="0.0108%" height="15" fill="rgb(220,39,43)" fg:x="768" fg:w="1"/><text x="8.5482%" y="559.50"></text></g><g><title>dri_flush (2 samples, 0.02%)</title><rect x="8.3090%" y="549" width="0.0216%" height="15" fill="rgb(229,68,48)" fg:x="769" fg:w="2"/><text x="8.5590%" y="559.50"></text></g><g><title>ensure_exec_obj_space (1 samples, 0.01%)</title><rect x="8.3306%" y="549" width="0.0108%" height="15" fill="rgb(252,8,32)" fg:x="771" fg:w="1"/><text x="8.5806%" y="559.50"></text></g><g><title>gb_rs::clock::Clock::tick (8 samples, 0.09%)</title><rect x="8.3414%" y="549" width="0.0864%" height="15" fill="rgb(223,20,43)" fg:x="772" fg:w="8"/><text x="8.5914%" y="559.50"></text></g><g><title>gb_rs::cpu::CPU::display_registers (37 samples, 0.40%)</title><rect x="8.4279%" y="549" width="0.3998%" height="15" fill="rgb(229,81,49)" fg:x="780" fg:w="37"/><text x="8.6779%" y="559.50"></text></g><g><title>gb_rs::cpu::CPU::execute (40 samples, 0.43%)</title><rect x="8.8277%" y="549" width="0.4322%" height="15" fill="rgb(236,28,36)" fg:x="817" fg:w="40"/><text x="9.0777%" y="559.50"></text></g><g><title>gb_rs::cpu::CPU::get_register (1 samples, 0.01%)</title><rect x="9.2599%" y="549" width="0.0108%" height="15" fill="rgb(249,185,26)" fg:x="857" fg:w="1"/><text x="9.5099%" y="559.50"></text></g><g><title>gb_rs::cpu::CPU::handle_interrupts (24 samples, 0.26%)</title><rect x="9.2707%" y="549" width="0.2593%" height="15" fill="rgb(249,174,33)" fg:x="858" fg:w="24"/><text x="9.5207%" y="559.50"></text></g><g><title>gb_rs::cpu::CPU::push_pc_stack (2 samples, 0.02%)</title><rect x="9.5300%" y="549" width="0.0216%" height="15" fill="rgb(233,201,37)" fg:x="882" fg:w="2"/><text x="9.7800%" y="559.50"></text></g><g><title>gb_rs::cpu::CPU::set_register (1 samples, 0.01%)</title><rect x="9.5516%" y="549" width="0.0108%" height="15" fill="rgb(221,78,26)" fg:x="884" fg:w="1"/><text x="9.8016%" y="559.50"></text></g><g><title>gb_rs::cpu::CPU::set_register16 (2 samples, 0.02%)</title><rect x="9.5624%" y="549" width="0.0216%" height="15" fill="rgb(250,127,30)" fg:x="885" fg:w="2"/><text x="9.8124%" y="559.50"></text></g><g><title>gb_rs::cpu::SizedInstruction::decode (45 samples, 0.49%)</title><rect x="9.5840%" y="549" width="0.4862%" height="15" fill="rgb(230,49,44)" fg:x="887" fg:w="45"/><text x="9.8340%" y="559.50"></text></g><g><title>ir_builder::assign (1 samples, 0.01%)</title><rect x="10.0702%" y="405" width="0.0108%" height="15" fill="rgb(229,67,23)" fg:x="932" fg:w="1"/><text x="10.3202%" y="415.50"></text></g><g><title>rzalloc_size (1 samples, 0.01%)</title><rect x="10.0702%" y="389" width="0.0108%" height="15" fill="rgb(249,83,47)" fg:x="932" fg:w="1"/><text x="10.3202%" y="399.50"></text></g><g><title>ralloc_size (1 samples, 0.01%)</title><rect x="10.0702%" y="373" width="0.0108%" height="15" fill="rgb(215,43,3)" fg:x="932" fg:w="1"/><text x="10.3202%" y="383.50"></text></g><g><title>ir_builder::swizzle (1 samples, 0.01%)</title><rect x="10.0810%" y="405" width="0.0108%" height="15" fill="rgb(238,154,13)" fg:x="933" fg:w="1"/><text x="10.3310%" y="415.50"></text></g><g><title>rzalloc_size (1 samples, 0.01%)</title><rect x="10.0810%" y="389" width="0.0108%" height="15" fill="rgb(219,56,2)" fg:x="933" fg:w="1"/><text x="10.3310%" y="399.50"></text></g><g><title>ralloc_size (1 samples, 0.01%)</title><rect x="10.0810%" y="373" width="0.0108%" height="15" fill="rgb(233,0,4)" fg:x="933" fg:w="1"/><text x="10.3310%" y="383.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="10.0810%" y="357" width="0.0108%" height="15" fill="rgb(235,30,7)" fg:x="933" fg:w="1"/><text x="10.3310%" y="367.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="10.0810%" y="341" width="0.0108%" height="15" fill="rgb(250,79,13)" fg:x="933" fg:w="1"/><text x="10.3310%" y="351.50"></text></g><g><title>CompileShader (3 samples, 0.03%)</title><rect x="10.0702%" y="453" width="0.0324%" height="15" fill="rgb(211,146,34)" fg:x="932" fg:w="3"/><text x="10.3202%" y="463.50"></text></g><g><title>_mesa_compile_shader.part.0 (3 samples, 0.03%)</title><rect x="10.0702%" y="437" width="0.0324%" height="15" fill="rgb(228,22,38)" fg:x="932" fg:w="3"/><text x="10.3202%" y="447.50"></text></g><g><title>_mesa_glsl_builtin_functions_init_or_ref (3 samples, 0.03%)</title><rect x="10.0702%" y="421" width="0.0324%" height="15" fill="rgb(235,168,5)" fg:x="932" fg:w="3"/><text x="10.3202%" y="431.50"></text></g><g><title>rzalloc_size (1 samples, 0.01%)</title><rect x="10.0918%" y="405" width="0.0108%" height="15" fill="rgb(221,155,16)" fg:x="934" fg:w="1"/><text x="10.3418%" y="415.50"></text></g><g><title>ralloc_size (1 samples, 0.01%)</title><rect x="10.0918%" y="389" width="0.0108%" height="15" fill="rgb(215,215,53)" fg:x="934" fg:w="1"/><text x="10.3418%" y="399.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="10.0918%" y="373" width="0.0108%" height="15" fill="rgb(223,4,10)" fg:x="934" fg:w="1"/><text x="10.3418%" y="383.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="10.0918%" y="357" width="0.0108%" height="15" fill="rgb(234,103,6)" fg:x="934" fg:w="1"/><text x="10.3418%" y="367.50"></text></g><g><title>SDL_GL_ExtensionSupported_REAL (1 samples, 0.01%)</title><rect x="10.1026%" y="453" width="0.0108%" height="15" fill="rgb(227,97,0)" fg:x="935" fg:w="1"/><text x="10.3526%" y="463.50"></text></g><g><title>_mesa_get_enabled_extension (1 samples, 0.01%)</title><rect x="10.1026%" y="437" width="0.0108%" height="15" fill="rgb(234,150,53)" fg:x="935" fg:w="1"/><text x="10.3526%" y="447.50"></text></g><g><title>link_shaders (1 samples, 0.01%)</title><rect x="10.1135%" y="421" width="0.0108%" height="15" fill="rgb(228,201,54)" fg:x="936" fg:w="1"/><text x="10.3635%" y="431.50"></text></g><g><title>shader_cache_read_program_metadata (1 samples, 0.01%)</title><rect x="10.1135%" y="405" width="0.0108%" height="15" fill="rgb(222,22,37)" fg:x="936" fg:w="1"/><text x="10.3635%" y="415.50"></text></g><g><title>disk_cache_get (1 samples, 0.01%)</title><rect x="10.1135%" y="389" width="0.0108%" height="15" fill="rgb(237,53,32)" fg:x="936" fg:w="1"/><text x="10.3635%" y="399.50"></text></g><g><title>disk_cache_load_item (1 samples, 0.01%)</title><rect x="10.1135%" y="373" width="0.0108%" height="15" fill="rgb(233,25,53)" fg:x="936" fg:w="1"/><text x="10.3635%" y="383.50"></text></g><g><title>parse_and_validate_cache_item (1 samples, 0.01%)</title><rect x="10.1135%" y="357" width="0.0108%" height="15" fill="rgb(210,40,34)" fg:x="936" fg:w="1"/><text x="10.3635%" y="367.50"></text></g><g><title>util_compress_inflate (1 samples, 0.01%)</title><rect x="10.1135%" y="341" width="0.0108%" height="15" fill="rgb(241,220,44)" fg:x="936" fg:w="1"/><text x="10.3635%" y="351.50"></text></g><g><title>ZSTD_decompress (1 samples, 0.01%)</title><rect x="10.1135%" y="325" width="0.0108%" height="15" fill="rgb(235,28,35)" fg:x="936" fg:w="1"/><text x="10.3635%" y="335.50"></text></g><g><title>ZSTD_decompress_usingDDict (1 samples, 0.01%)</title><rect x="10.1135%" y="309" width="0.0108%" height="15" fill="rgb(210,56,17)" fg:x="936" fg:w="1"/><text x="10.3635%" y="319.50"></text></g><g><title>ZSTD_decompressMultiFrame (1 samples, 0.01%)</title><rect x="10.1135%" y="293" width="0.0108%" height="15" fill="rgb(224,130,29)" fg:x="936" fg:w="1"/><text x="10.3635%" y="303.50"></text></g><g><title>ZSTD_decompressBlock_internal (1 samples, 0.01%)</title><rect x="10.1135%" y="277" width="0.0108%" height="15" fill="rgb(235,212,8)" fg:x="936" fg:w="1"/><text x="10.3635%" y="287.50"></text></g><g><title>ZSTD_decodeSeqHeaders (1 samples, 0.01%)</title><rect x="10.1135%" y="261" width="0.0108%" height="15" fill="rgb(223,33,50)" fg:x="936" fg:w="1"/><text x="10.3635%" y="271.50"></text></g><g><title>FSE_readNCount_bmi2 (1 samples, 0.01%)</title><rect x="10.1135%" y="245" width="0.0108%" height="15" fill="rgb(219,149,13)" fg:x="936" fg:w="1"/><text x="10.3635%" y="255.50"></text></g><g><title>nir_opt_cse (1 samples, 0.01%)</title><rect x="10.1243%" y="277" width="0.0108%" height="15" fill="rgb(250,156,29)" fg:x="937" fg:w="1"/><text x="10.3743%" y="287.50"></text></g><g><title>nir_instr_set_add_or_rewrite (1 samples, 0.01%)</title><rect x="10.1243%" y="261" width="0.0108%" height="15" fill="rgb(216,193,19)" fg:x="937" fg:w="1"/><text x="10.3743%" y="271.50"></text></g><g><title>_mesa_set_search_or_add (1 samples, 0.01%)</title><rect x="10.1243%" y="245" width="0.0108%" height="15" fill="rgb(216,135,14)" fg:x="937" fg:w="1"/><text x="10.3743%" y="255.50"></text></g><g><title>hash_instr (1 samples, 0.01%)</title><rect x="10.1243%" y="229" width="0.0108%" height="15" fill="rgb(241,47,5)" fg:x="937" fg:w="1"/><text x="10.3743%" y="239.50"></text></g><g><title>hash_alu_src (1 samples, 0.01%)</title><rect x="10.1243%" y="213" width="0.0108%" height="15" fill="rgb(233,42,35)" fg:x="937" fg:w="1"/><text x="10.3743%" y="223.50"></text></g><g><title>st_get_common_variant (2 samples, 0.02%)</title><rect x="10.1243%" y="357" width="0.0216%" height="15" fill="rgb(231,13,6)" fg:x="937" fg:w="2"/><text x="10.3743%" y="367.50"></text></g><g><title>st_create_common_variant (2 samples, 0.02%)</title><rect x="10.1243%" y="341" width="0.0216%" height="15" fill="rgb(207,181,40)" fg:x="937" fg:w="2"/><text x="10.3743%" y="351.50"></text></g><g><title>iris_finalize_nir (2 samples, 0.02%)</title><rect x="10.1243%" y="325" width="0.0216%" height="15" fill="rgb(254,173,49)" fg:x="937" fg:w="2"/><text x="10.3743%" y="335.50"></text></g><g><title>brw_preprocess_nir (2 samples, 0.02%)</title><rect x="10.1243%" y="309" width="0.0216%" height="15" fill="rgb(221,1,38)" fg:x="937" fg:w="2"/><text x="10.3743%" y="319.50"></text></g><g><title>brw_nir_optimize (2 samples, 0.02%)</title><rect x="10.1243%" y="293" width="0.0216%" height="15" fill="rgb(206,124,46)" fg:x="937" fg:w="2"/><text x="10.3743%" y="303.50"></text></g><g><title>nir_opt_gcm (1 samples, 0.01%)</title><rect x="10.1351%" y="277" width="0.0108%" height="15" fill="rgb(249,21,11)" fg:x="938" fg:w="1"/><text x="10.3851%" y="287.50"></text></g><g><title>nir_instr_set_add_or_rewrite (1 samples, 0.01%)</title><rect x="10.1351%" y="261" width="0.0108%" height="15" fill="rgb(222,201,40)" fg:x="938" fg:w="1"/><text x="10.3851%" y="271.50"></text></g><g><title>_mesa_set_search_or_add (1 samples, 0.01%)</title><rect x="10.1351%" y="245" width="0.0108%" height="15" fill="rgb(235,61,29)" fg:x="938" fg:w="1"/><text x="10.3851%" y="255.50"></text></g><g><title>hash_instr (1 samples, 0.01%)</title><rect x="10.1351%" y="229" width="0.0108%" height="15" fill="rgb(219,207,3)" fg:x="938" fg:w="1"/><text x="10.3851%" y="239.50"></text></g><g><title>hash_alu_src (1 samples, 0.01%)</title><rect x="10.1351%" y="213" width="0.0108%" height="15" fill="rgb(222,56,46)" fg:x="938" fg:w="1"/><text x="10.3851%" y="223.50"></text></g><g><title>GL_CreateShaderContext (8 samples, 0.09%)</title><rect x="10.0702%" y="469" width="0.0864%" height="15" fill="rgb(239,76,54)" fg:x="932" fg:w="8"/><text x="10.3202%" y="479.50"></text></g><g><title>link_program_error.part.0 (4 samples, 0.04%)</title><rect x="10.1135%" y="453" width="0.0432%" height="15" fill="rgb(231,124,27)" fg:x="936" fg:w="4"/><text x="10.3635%" y="463.50"></text></g><g><title>_mesa_glsl_link_shader (4 samples, 0.04%)</title><rect x="10.1135%" y="437" width="0.0432%" height="15" fill="rgb(249,195,6)" fg:x="936" fg:w="4"/><text x="10.3635%" y="447.50"></text></g><g><title>st_link_shader (3 samples, 0.03%)</title><rect x="10.1243%" y="421" width="0.0324%" height="15" fill="rgb(237,174,47)" fg:x="937" fg:w="3"/><text x="10.3743%" y="431.50"></text></g><g><title>st_load_nir_from_disk_cache (3 samples, 0.03%)</title><rect x="10.1243%" y="405" width="0.0324%" height="15" fill="rgb(206,201,31)" fg:x="937" fg:w="3"/><text x="10.3743%" y="415.50"></text></g><g><title>st_deserialise_nir_program (3 samples, 0.03%)</title><rect x="10.1243%" y="389" width="0.0324%" height="15" fill="rgb(231,57,52)" fg:x="937" fg:w="3"/><text x="10.3743%" y="399.50"></text></g><g><title>st_finalize_program (3 samples, 0.03%)</title><rect x="10.1243%" y="373" width="0.0324%" height="15" fill="rgb(248,177,22)" fg:x="937" fg:w="3"/><text x="10.3743%" y="383.50"></text></g><g><title>st_get_fp_variant (1 samples, 0.01%)</title><rect x="10.1459%" y="357" width="0.0108%" height="15" fill="rgb(215,211,37)" fg:x="939" fg:w="1"/><text x="10.3959%" y="367.50"></text></g><g><title>st_create_fp_variant (1 samples, 0.01%)</title><rect x="10.1459%" y="341" width="0.0108%" height="15" fill="rgb(241,128,51)" fg:x="939" fg:w="1"/><text x="10.3959%" y="351.50"></text></g><g><title>st_create_nir_shader (1 samples, 0.01%)</title><rect x="10.1459%" y="325" width="0.0108%" height="15" fill="rgb(227,165,31)" fg:x="939" fg:w="1"/><text x="10.3959%" y="335.50"></text></g><g><title>iris_create_shader_state (1 samples, 0.01%)</title><rect x="10.1459%" y="309" width="0.0108%" height="15" fill="rgb(228,167,24)" fg:x="939" fg:w="1"/><text x="10.3959%" y="319.50"></text></g><g><title>iris_create_uncompiled_shader (1 samples, 0.01%)</title><rect x="10.1459%" y="293" width="0.0108%" height="15" fill="rgb(228,143,12)" fg:x="939" fg:w="1"/><text x="10.3959%" y="303.50"></text></g><g><title>nir_serialize (1 samples, 0.01%)</title><rect x="10.1459%" y="277" width="0.0108%" height="15" fill="rgb(249,149,8)" fg:x="939" fg:w="1"/><text x="10.3959%" y="287.50"></text></g><g><title>write_cf_list (1 samples, 0.01%)</title><rect x="10.1459%" y="261" width="0.0108%" height="15" fill="rgb(243,35,44)" fg:x="939" fg:w="1"/><text x="10.3959%" y="271.50"></text></g><g><title>_mesa_hash_table_search (1 samples, 0.01%)</title><rect x="10.1459%" y="245" width="0.0108%" height="15" fill="rgb(246,89,9)" fg:x="939" fg:w="1"/><text x="10.3959%" y="255.50"></text></g><g><title>_mesa_hash_pointer (1 samples, 0.01%)</title><rect x="10.1459%" y="229" width="0.0108%" height="15" fill="rgb(233,213,13)" fg:x="939" fg:w="1"/><text x="10.3959%" y="239.50"></text></g><g><title>CommonMakeCurrent (2 samples, 0.02%)</title><rect x="10.1567%" y="421" width="0.0216%" height="15" fill="rgb(233,141,41)" fg:x="940" fg:w="2"/><text x="10.4067%" y="431.50"></text></g><g><title>InternalMakeCurrentDispatch (2 samples, 0.02%)</title><rect x="10.1567%" y="405" width="0.0216%" height="15" fill="rgb(239,167,4)" fg:x="940" fg:w="2"/><text x="10.4067%" y="415.50"></text></g><g><title>__glDispatchMakeCurrent (2 samples, 0.02%)</title><rect x="10.1567%" y="389" width="0.0216%" height="15" fill="rgb(209,217,16)" fg:x="940" fg:w="2"/><text x="10.4067%" y="399.50"></text></g><g><title>FixupDispatchTable (2 samples, 0.02%)</title><rect x="10.1567%" y="373" width="0.0216%" height="15" fill="rgb(219,88,35)" fg:x="940" fg:w="2"/><text x="10.4067%" y="383.50"></text></g><g><title>_glapi_get_proc_address (2 samples, 0.02%)</title><rect x="10.1567%" y="357" width="0.0216%" height="15" fill="rgb(220,193,23)" fg:x="940" fg:w="2"/><text x="10.4067%" y="367.50"></text></g><g><title>stub_find_dynamic (2 samples, 0.02%)</title><rect x="10.1567%" y="341" width="0.0216%" height="15" fill="rgb(230,90,52)" fg:x="940" fg:w="2"/><text x="10.4067%" y="351.50"></text></g><g><title>__strcmp_avx2 (2 samples, 0.02%)</title><rect x="10.1567%" y="325" width="0.0216%" height="15" fill="rgb(252,106,19)" fg:x="940" fg:w="2"/><text x="10.4067%" y="335.50"></text></g><g><title>driConvertConfigs (23 samples, 0.25%)</title><rect x="10.1783%" y="357" width="0.2485%" height="15" fill="rgb(206,74,20)" fg:x="942" fg:w="23"/><text x="10.4283%" y="367.50"></text></g><g><title>driIndexConfigAttrib (4 samples, 0.04%)</title><rect x="10.3836%" y="341" width="0.0432%" height="15" fill="rgb(230,138,44)" fg:x="961" fg:w="4"/><text x="10.6336%" y="351.50"></text></g><g><title>driGetConfigAttribIndex (3 samples, 0.03%)</title><rect x="10.3944%" y="325" width="0.0324%" height="15" fill="rgb(235,182,43)" fg:x="962" fg:w="3"/><text x="10.6444%" y="335.50"></text></g><g><title>dri2_init_screen (1 samples, 0.01%)</title><rect x="10.4268%" y="341" width="0.0108%" height="15" fill="rgb(242,16,51)" fg:x="965" fg:w="1"/><text x="10.6768%" y="351.50"></text></g><g><title>pipe_loader_create_screen_vk (1 samples, 0.01%)</title><rect x="10.4268%" y="325" width="0.0108%" height="15" fill="rgb(248,9,4)" fg:x="965" fg:w="1"/><text x="10.6768%" y="335.50"></text></g><g><title>pipe_iris_create_screen (1 samples, 0.01%)</title><rect x="10.4268%" y="309" width="0.0108%" height="15" fill="rgb(210,31,22)" fg:x="965" fg:w="1"/><text x="10.6768%" y="319.50"></text></g><g><title>iris_screen_create (1 samples, 0.01%)</title><rect x="10.4268%" y="293" width="0.0108%" height="15" fill="rgb(239,54,39)" fg:x="965" fg:w="1"/><text x="10.6768%" y="303.50"></text></g><g><title>driParseConfigFiles (1 samples, 0.01%)</title><rect x="10.4268%" y="277" width="0.0108%" height="15" fill="rgb(230,99,41)" fg:x="965" fg:w="1"/><text x="10.6768%" y="287.50"></text></g><g><title>parseOneConfigFile (1 samples, 0.01%)</title><rect x="10.4268%" y="261" width="0.0108%" height="15" fill="rgb(253,106,12)" fg:x="965" fg:w="1"/><text x="10.6768%" y="271.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.01%)</title><rect x="10.4268%" y="245" width="0.0108%" height="15" fill="rgb(213,46,41)" fg:x="965" fg:w="1"/><text x="10.6768%" y="255.50"></text></g><g><title>callProcessor.constprop.0 (1 samples, 0.01%)</title><rect x="10.4268%" y="229" width="0.0108%" height="15" fill="rgb(215,133,35)" fg:x="965" fg:w="1"/><text x="10.6768%" y="239.50"></text></g><g><title>contentProcessor (1 samples, 0.01%)</title><rect x="10.4268%" y="213" width="0.0108%" height="15" fill="rgb(213,28,5)" fg:x="965" fg:w="1"/><text x="10.6768%" y="223.50"></text></g><g><title>doContent (1 samples, 0.01%)</title><rect x="10.4268%" y="197" width="0.0108%" height="15" fill="rgb(215,77,49)" fg:x="965" fg:w="1"/><text x="10.6768%" y="207.50"></text></g><g><title>normal_contentTok (1 samples, 0.01%)</title><rect x="10.4268%" y="181" width="0.0108%" height="15" fill="rgb(248,100,22)" fg:x="965" fg:w="1"/><text x="10.6768%" y="191.50"></text></g><g><title>driCreateNewScreen2 (2 samples, 0.02%)</title><rect x="10.4268%" y="357" width="0.0216%" height="15" fill="rgb(208,67,9)" fg:x="965" fg:w="2"/><text x="10.6768%" y="367.50"></text></g><g><title>driParseConfigFiles (1 samples, 0.01%)</title><rect x="10.4376%" y="341" width="0.0108%" height="15" fill="rgb(219,133,21)" fg:x="966" fg:w="1"/><text x="10.6876%" y="351.50"></text></g><g><title>parseOneConfigFile (1 samples, 0.01%)</title><rect x="10.4376%" y="325" width="0.0108%" height="15" fill="rgb(246,46,29)" fg:x="966" fg:w="1"/><text x="10.6876%" y="335.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.01%)</title><rect x="10.4376%" y="309" width="0.0108%" height="15" fill="rgb(246,185,52)" fg:x="966" fg:w="1"/><text x="10.6876%" y="319.50"></text></g><g><title>callProcessor.constprop.0 (1 samples, 0.01%)</title><rect x="10.4376%" y="293" width="0.0108%" height="15" fill="rgb(252,136,11)" fg:x="966" fg:w="1"/><text x="10.6876%" y="303.50"></text></g><g><title>contentProcessor (1 samples, 0.01%)</title><rect x="10.4376%" y="277" width="0.0108%" height="15" fill="rgb(219,138,53)" fg:x="966" fg:w="1"/><text x="10.6876%" y="287.50"></text></g><g><title>doContent (1 samples, 0.01%)</title><rect x="10.4376%" y="261" width="0.0108%" height="15" fill="rgb(211,51,23)" fg:x="966" fg:w="1"/><text x="10.6876%" y="271.50"></text></g><g><title>storeAtts (1 samples, 0.01%)</title><rect x="10.4376%" y="245" width="0.0108%" height="15" fill="rgb(247,221,28)" fg:x="966" fg:w="1"/><text x="10.6876%" y="255.50"></text></g><g><title>_dl_init (1 samples, 0.01%)</title><rect x="10.4484%" y="165" width="0.0108%" height="15" fill="rgb(251,222,45)" fg:x="967" fg:w="1"/><text x="10.6984%" y="175.50"></text></g><g><title>call_init (1 samples, 0.01%)</title><rect x="10.4484%" y="149" width="0.0108%" height="15" fill="rgb(217,162,53)" fg:x="967" fg:w="1"/><text x="10.6984%" y="159.50"></text></g><g><title>polly::initializePollyPasses (1 samples, 0.01%)</title><rect x="10.4484%" y="133" width="0.0108%" height="15" fill="rgb(229,93,14)" fg:x="967" fg:w="1"/><text x="10.6984%" y="143.50"></text></g><g><title>llvm::initializeSimplifyWrapperPassPass (1 samples, 0.01%)</title><rect x="10.4484%" y="117" width="0.0108%" height="15" fill="rgb(209,67,49)" fg:x="967" fg:w="1"/><text x="10.6984%" y="127.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.01%)</title><rect x="10.4484%" y="101" width="0.0108%" height="15" fill="rgb(213,87,29)" fg:x="967" fg:w="1"/><text x="10.6984%" y="111.50"></text></g><g><title>initializeSimplifyWrapperPassPassOnce (1 samples, 0.01%)</title><rect x="10.4484%" y="85" width="0.0108%" height="15" fill="rgb(205,151,52)" fg:x="967" fg:w="1"/><text x="10.6984%" y="95.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.01%)</title><rect x="10.4592%" y="149" width="0.0108%" height="15" fill="rgb(253,215,39)" fg:x="968" fg:w="1"/><text x="10.7092%" y="159.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="10.4592%" y="133" width="0.0108%" height="15" fill="rgb(221,220,41)" fg:x="968" fg:w="1"/><text x="10.7092%" y="143.50"></text></g><g><title>openaux (1 samples, 0.01%)</title><rect x="10.4592%" y="117" width="0.0108%" height="15" fill="rgb(218,133,21)" fg:x="968" fg:w="1"/><text x="10.7092%" y="127.50"></text></g><g><title>_dl_map_object (1 samples, 0.01%)</title><rect x="10.4592%" y="101" width="0.0108%" height="15" fill="rgb(221,193,43)" fg:x="968" fg:w="1"/><text x="10.7092%" y="111.50"></text></g><g><title>decompose_rpath (1 samples, 0.01%)</title><rect x="10.4592%" y="85" width="0.0108%" height="15" fill="rgb(240,128,52)" fg:x="968" fg:w="1"/><text x="10.7092%" y="95.50"></text></g><g><title>fillin_rpath.isra.0 (1 samples, 0.01%)</title><rect x="10.4592%" y="69" width="0.0108%" height="15" fill="rgb(253,114,12)" fg:x="968" fg:w="1"/><text x="10.7092%" y="79.50"></text></g><g><title>driOpenDriver (23 samples, 0.25%)</title><rect x="10.4484%" y="357" width="0.2485%" height="15" fill="rgb(215,223,47)" fg:x="967" fg:w="23"/><text x="10.6984%" y="367.50"></text></g><g><title>loader_open_driver (23 samples, 0.25%)</title><rect x="10.4484%" y="341" width="0.2485%" height="15" fill="rgb(248,225,23)" fg:x="967" fg:w="23"/><text x="10.6984%" y="351.50"></text></g><g><title>loader_open_driver_lib (23 samples, 0.25%)</title><rect x="10.4484%" y="325" width="0.2485%" height="15" fill="rgb(250,108,0)" fg:x="967" fg:w="23"/><text x="10.6984%" y="335.50"></text></g><g><title>___dlopen (23 samples, 0.25%)</title><rect x="10.4484%" y="309" width="0.2485%" height="15" fill="rgb(228,208,7)" fg:x="967" fg:w="23"/><text x="10.6984%" y="319.50"></text></g><g><title>_dlerror_run (23 samples, 0.25%)</title><rect x="10.4484%" y="293" width="0.2485%" height="15" fill="rgb(244,45,10)" fg:x="967" fg:w="23"/><text x="10.6984%" y="303.50"></text></g><g><title>_dl_catch_error (23 samples, 0.25%)</title><rect x="10.4484%" y="277" width="0.2485%" height="15" fill="rgb(207,125,25)" fg:x="967" fg:w="23"/><text x="10.6984%" y="287.50"></text></g><g><title>__GI__dl_catch_exception (23 samples, 0.25%)</title><rect x="10.4484%" y="261" width="0.2485%" height="15" fill="rgb(210,195,18)" fg:x="967" fg:w="23"/><text x="10.6984%" y="271.50"></text></g><g><title>dlopen_doit (23 samples, 0.25%)</title><rect x="10.4484%" y="245" width="0.2485%" height="15" fill="rgb(249,80,12)" fg:x="967" fg:w="23"/><text x="10.6984%" y="255.50"></text></g><g><title>_dl_open (23 samples, 0.25%)</title><rect x="10.4484%" y="229" width="0.2485%" height="15" fill="rgb(221,65,9)" fg:x="967" fg:w="23"/><text x="10.6984%" y="239.50"></text></g><g><title>__GI__dl_catch_exception (23 samples, 0.25%)</title><rect x="10.4484%" y="213" width="0.2485%" height="15" fill="rgb(235,49,36)" fg:x="967" fg:w="23"/><text x="10.6984%" y="223.50"></text></g><g><title>dl_open_worker (23 samples, 0.25%)</title><rect x="10.4484%" y="197" width="0.2485%" height="15" fill="rgb(225,32,20)" fg:x="967" fg:w="23"/><text x="10.6984%" y="207.50"></text></g><g><title>__GI__dl_catch_exception (23 samples, 0.25%)</title><rect x="10.4484%" y="181" width="0.2485%" height="15" fill="rgb(215,141,46)" fg:x="967" fg:w="23"/><text x="10.6984%" y="191.50"></text></g><g><title>dl_open_worker_begin (22 samples, 0.24%)</title><rect x="10.4592%" y="165" width="0.2377%" height="15" fill="rgb(250,160,47)" fg:x="968" fg:w="22"/><text x="10.7092%" y="175.50"></text></g><g><title>_dl_relocate_object (21 samples, 0.23%)</title><rect x="10.4700%" y="149" width="0.2269%" height="15" fill="rgb(216,222,40)" fg:x="969" fg:w="21"/><text x="10.7200%" y="159.50"></text></g><g><title>_dl_lookup_symbol_x (12 samples, 0.13%)</title><rect x="10.5673%" y="133" width="0.1297%" height="15" fill="rgb(234,217,39)" fg:x="978" fg:w="12"/><text x="10.8173%" y="143.50"></text></g><g><title>do_lookup_x (12 samples, 0.13%)</title><rect x="10.5673%" y="117" width="0.1297%" height="15" fill="rgb(207,178,40)" fg:x="978" fg:w="12"/><text x="10.8173%" y="127.50"></text></g><g><title>glx_config_destroy_list (1 samples, 0.01%)</title><rect x="10.6969%" y="357" width="0.0108%" height="15" fill="rgb(221,136,13)" fg:x="990" fg:w="1"/><text x="10.9469%" y="367.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="10.6969%" y="341" width="0.0108%" height="15" fill="rgb(249,199,10)" fg:x="990" fg:w="1"/><text x="10.9469%" y="351.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="10.6969%" y="325" width="0.0108%" height="15" fill="rgb(249,222,13)" fg:x="990" fg:w="1"/><text x="10.9469%" y="335.50"></text></g><g><title>_int_free_merge_chunk (1 samples, 0.01%)</title><rect x="10.6969%" y="309" width="0.0108%" height="15" fill="rgb(244,185,38)" fg:x="990" fg:w="1"/><text x="10.9469%" y="319.50"></text></g><g><title>_int_free_create_chunk (1 samples, 0.01%)</title><rect x="10.6969%" y="293" width="0.0108%" height="15" fill="rgb(236,202,9)" fg:x="990" fg:w="1"/><text x="10.9469%" y="303.50"></text></g><g><title>__glXInitializeVisualConfigFromTags (1 samples, 0.01%)</title><rect x="10.7077%" y="325" width="0.0108%" height="15" fill="rgb(250,229,37)" fg:x="991" fg:w="1"/><text x="10.9577%" y="335.50"></text></g><g><title>glx_screen_init (2 samples, 0.02%)</title><rect x="10.7077%" y="357" width="0.0216%" height="15" fill="rgb(206,174,23)" fg:x="991" fg:w="2"/><text x="10.9577%" y="367.50"></text></g><g><title>createConfigsFromProperties (2 samples, 0.02%)</title><rect x="10.7077%" y="341" width="0.0216%" height="15" fill="rgb(211,33,43)" fg:x="991" fg:w="2"/><text x="10.9577%" y="351.50"></text></g><g><title>glx_config_create_list (1 samples, 0.01%)</title><rect x="10.7185%" y="325" width="0.0108%" height="15" fill="rgb(245,58,50)" fg:x="992" fg:w="1"/><text x="10.9685%" y="335.50"></text></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="10.7185%" y="309" width="0.0108%" height="15" fill="rgb(244,68,36)" fg:x="992" fg:w="1"/><text x="10.9685%" y="319.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="10.7185%" y="293" width="0.0108%" height="15" fill="rgb(232,229,15)" fg:x="992" fg:w="1"/><text x="10.9685%" y="303.50"></text></g><g><title>accountingDiffTolerated.part.0 (1 samples, 0.01%)</title><rect x="10.7293%" y="245" width="0.0108%" height="15" fill="rgb(254,30,23)" fg:x="993" fg:w="1"/><text x="10.9793%" y="255.50"></text></g><g><title>normal_contentTok (1 samples, 0.01%)</title><rect x="10.7401%" y="245" width="0.0108%" height="15" fill="rgb(235,160,14)" fg:x="994" fg:w="1"/><text x="10.9901%" y="255.50"></text></g><g><title>X11_GL_GetVisual (54 samples, 0.58%)</title><rect x="10.1783%" y="421" width="0.5835%" height="15" fill="rgb(212,155,44)" fg:x="942" fg:w="54"/><text x="10.4283%" y="431.50"></text></g><g><title>glXChooseVisual (54 samples, 0.58%)</title><rect x="10.1783%" y="405" width="0.5835%" height="15" fill="rgb(226,2,50)" fg:x="942" fg:w="54"/><text x="10.4283%" y="415.50"></text></g><g><title>__glXInitialize (54 samples, 0.58%)</title><rect x="10.1783%" y="389" width="0.5835%" height="15" fill="rgb(234,177,6)" fg:x="942" fg:w="54"/><text x="10.4283%" y="399.50"></text></g><g><title>dri2CreateScreen (54 samples, 0.58%)</title><rect x="10.1783%" y="373" width="0.5835%" height="15" fill="rgb(217,24,9)" fg:x="942" fg:w="54"/><text x="10.4283%" y="383.50"></text></g><g><title>loader_get_driver_for_fd (3 samples, 0.03%)</title><rect x="10.7293%" y="357" width="0.0324%" height="15" fill="rgb(220,13,46)" fg:x="993" fg:w="3"/><text x="10.9793%" y="367.50"></text></g><g><title>driParseConfigFiles (3 samples, 0.03%)</title><rect x="10.7293%" y="341" width="0.0324%" height="15" fill="rgb(239,221,27)" fg:x="993" fg:w="3"/><text x="10.9793%" y="351.50"></text></g><g><title>parseOneConfigFile (3 samples, 0.03%)</title><rect x="10.7293%" y="325" width="0.0324%" height="15" fill="rgb(222,198,25)" fg:x="993" fg:w="3"/><text x="10.9793%" y="335.50"></text></g><g><title>XML_ParseBuffer (3 samples, 0.03%)</title><rect x="10.7293%" y="309" width="0.0324%" height="15" fill="rgb(211,99,13)" fg:x="993" fg:w="3"/><text x="10.9793%" y="319.50"></text></g><g><title>callProcessor.constprop.0 (3 samples, 0.03%)</title><rect x="10.7293%" y="293" width="0.0324%" height="15" fill="rgb(232,111,31)" fg:x="993" fg:w="3"/><text x="10.9793%" y="303.50"></text></g><g><title>contentProcessor (3 samples, 0.03%)</title><rect x="10.7293%" y="277" width="0.0324%" height="15" fill="rgb(245,82,37)" fg:x="993" fg:w="3"/><text x="10.9793%" y="287.50"></text></g><g><title>doContent (3 samples, 0.03%)</title><rect x="10.7293%" y="261" width="0.0324%" height="15" fill="rgb(227,149,46)" fg:x="993" fg:w="3"/><text x="10.9793%" y="271.50"></text></g><g><title>optConfEndElem (1 samples, 0.01%)</title><rect x="10.7509%" y="245" width="0.0108%" height="15" fill="rgb(218,36,50)" fg:x="995" fg:w="1"/><text x="11.0009%" y="255.50"></text></g><g><title>bsearchStr.constprop.0 (1 samples, 0.01%)</title><rect x="10.7509%" y="229" width="0.0108%" height="15" fill="rgb(226,80,48)" fg:x="995" fg:w="1"/><text x="11.0009%" y="239.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.01%)</title><rect x="10.7509%" y="213" width="0.0108%" height="15" fill="rgb(238,224,15)" fg:x="995" fg:w="1"/><text x="11.0009%" y="223.50"></text></g><g><title>_dl_init (1 samples, 0.01%)</title><rect x="10.7618%" y="277" width="0.0108%" height="15" fill="rgb(241,136,10)" fg:x="996" fg:w="1"/><text x="11.0118%" y="287.50"></text></g><g><title>call_init (1 samples, 0.01%)</title><rect x="10.7618%" y="261" width="0.0108%" height="15" fill="rgb(208,32,45)" fg:x="996" fg:w="1"/><text x="11.0118%" y="271.50"></text></g><g><title>__glDispatchOnLoadInit (1 samples, 0.01%)</title><rect x="10.7618%" y="245" width="0.0108%" height="15" fill="rgb(207,135,9)" fg:x="996" fg:w="1"/><text x="11.0118%" y="255.50"></text></g><g><title>glvndSetupPthreads (1 samples, 0.01%)</title><rect x="10.7618%" y="229" width="0.0108%" height="15" fill="rgb(206,86,44)" fg:x="996" fg:w="1"/><text x="11.0118%" y="239.50"></text></g><g><title>__GI_getenv (1 samples, 0.01%)</title><rect x="10.7618%" y="213" width="0.0108%" height="15" fill="rgb(245,177,15)" fg:x="996" fg:w="1"/><text x="11.0118%" y="223.50"></text></g><g><title>SDL_RecreateWindow (58 samples, 0.63%)</title><rect x="10.1567%" y="469" width="0.6267%" height="15" fill="rgb(206,64,50)" fg:x="940" fg:w="58"/><text x="10.4067%" y="479.50"></text></g><g><title>SDL_GL_LoadLibrary_REAL (58 samples, 0.63%)</title><rect x="10.1567%" y="453" width="0.6267%" height="15" fill="rgb(234,36,40)" fg:x="940" fg:w="58"/><text x="10.4067%" y="463.50"></text></g><g><title>X11_GL_LoadLibrary (58 samples, 0.63%)</title><rect x="10.1567%" y="437" width="0.6267%" height="15" fill="rgb(213,64,8)" fg:x="940" fg:w="58"/><text x="10.4067%" y="447.50"></text></g><g><title>___dlopen (2 samples, 0.02%)</title><rect x="10.7618%" y="421" width="0.0216%" height="15" fill="rgb(210,75,36)" fg:x="996" fg:w="2"/><text x="11.0118%" y="431.50"></text></g><g><title>_dlerror_run (2 samples, 0.02%)</title><rect x="10.7618%" y="405" width="0.0216%" height="15" fill="rgb(229,88,21)" fg:x="996" fg:w="2"/><text x="11.0118%" y="415.50"></text></g><g><title>_dl_catch_error (2 samples, 0.02%)</title><rect x="10.7618%" y="389" width="0.0216%" height="15" fill="rgb(252,204,47)" fg:x="996" fg:w="2"/><text x="11.0118%" y="399.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.02%)</title><rect x="10.7618%" y="373" width="0.0216%" height="15" fill="rgb(208,77,27)" fg:x="996" fg:w="2"/><text x="11.0118%" y="383.50"></text></g><g><title>dlopen_doit (2 samples, 0.02%)</title><rect x="10.7618%" y="357" width="0.0216%" height="15" fill="rgb(221,76,26)" fg:x="996" fg:w="2"/><text x="11.0118%" y="367.50"></text></g><g><title>_dl_open (2 samples, 0.02%)</title><rect x="10.7618%" y="341" width="0.0216%" height="15" fill="rgb(225,139,18)" fg:x="996" fg:w="2"/><text x="11.0118%" y="351.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.02%)</title><rect x="10.7618%" y="325" width="0.0216%" height="15" fill="rgb(230,137,11)" fg:x="996" fg:w="2"/><text x="11.0118%" y="335.50"></text></g><g><title>dl_open_worker (2 samples, 0.02%)</title><rect x="10.7618%" y="309" width="0.0216%" height="15" fill="rgb(212,28,1)" fg:x="996" fg:w="2"/><text x="11.0118%" y="319.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.02%)</title><rect x="10.7618%" y="293" width="0.0216%" height="15" fill="rgb(248,164,17)" fg:x="996" fg:w="2"/><text x="11.0118%" y="303.50"></text></g><g><title>dl_open_worker_begin (1 samples, 0.01%)</title><rect x="10.7726%" y="277" width="0.0108%" height="15" fill="rgb(222,171,42)" fg:x="997" fg:w="1"/><text x="11.0226%" y="287.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="10.7726%" y="261" width="0.0108%" height="15" fill="rgb(243,84,45)" fg:x="997" fg:w="1"/><text x="11.0226%" y="271.50"></text></g><g><title>sdl2::render::CanvasBuilder::build (67 samples, 0.72%)</title><rect x="10.0702%" y="517" width="0.7239%" height="15" fill="rgb(252,49,23)" fg:x="932" fg:w="67"/><text x="10.3202%" y="527.50"></text></g><g><title>SDL_CreateRenderer_REAL (67 samples, 0.72%)</title><rect x="10.0702%" y="501" width="0.7239%" height="15" fill="rgb(215,19,7)" fg:x="932" fg:w="67"/><text x="10.3202%" y="511.50"></text></g><g><title>GL_CreateRenderer (67 samples, 0.72%)</title><rect x="10.0702%" y="485" width="0.7239%" height="15" fill="rgb(238,81,41)" fg:x="932" fg:w="67"/><text x="10.3202%" y="495.50"></text></g><g><title>_mesa_Color4ub (1 samples, 0.01%)</title><rect x="10.7834%" y="469" width="0.0108%" height="15" fill="rgb(210,199,37)" fg:x="998" fg:w="1"/><text x="11.0334%" y="479.50"></text></g><g><title>vbo_exec_wrap_upgrade_vertex (1 samples, 0.01%)</title><rect x="10.7834%" y="453" width="0.0108%" height="15" fill="rgb(244,192,49)" fg:x="998" fg:w="1"/><text x="11.0334%" y="463.50"></text></g><g><title>_XOpenLC (1 samples, 0.01%)</title><rect x="10.7942%" y="405" width="0.0108%" height="15" fill="rgb(226,211,11)" fg:x="999" fg:w="1"/><text x="11.0442%" y="415.50"></text></g><g><title>_XlcUtf8Loader (1 samples, 0.01%)</title><rect x="10.7942%" y="389" width="0.0108%" height="15" fill="rgb(236,162,54)" fg:x="999" fg:w="1"/><text x="11.0442%" y="399.50"></text></g><g><title>_XlcCreateLC (1 samples, 0.01%)</title><rect x="10.7942%" y="373" width="0.0108%" height="15" fill="rgb(220,229,9)" fg:x="999" fg:w="1"/><text x="11.0442%" y="383.50"></text></g><g><title>initialize (1 samples, 0.01%)</title><rect x="10.7942%" y="357" width="0.0108%" height="15" fill="rgb(250,87,22)" fg:x="999" fg:w="1"/><text x="11.0442%" y="367.50"></text></g><g><title>initialize (1 samples, 0.01%)</title><rect x="10.7942%" y="341" width="0.0108%" height="15" fill="rgb(239,43,17)" fg:x="999" fg:w="1"/><text x="11.0442%" y="351.50"></text></g><g><title>_XlcResolveLocaleName (1 samples, 0.01%)</title><rect x="10.7942%" y="325" width="0.0108%" height="15" fill="rgb(231,177,25)" fg:x="999" fg:w="1"/><text x="11.0442%" y="335.50"></text></g><g><title>resolve_name (1 samples, 0.01%)</title><rect x="10.7942%" y="309" width="0.0108%" height="15" fill="rgb(219,179,1)" fg:x="999" fg:w="1"/><text x="11.0442%" y="319.50"></text></g><g><title>sdl2::sdl::Sdl::video (2 samples, 0.02%)</title><rect x="10.7942%" y="517" width="0.0216%" height="15" fill="rgb(238,219,53)" fg:x="999" fg:w="2"/><text x="11.0442%" y="527.50"></text></g><g><title>sdl2::sdl::VideoSubsystem::new (2 samples, 0.02%)</title><rect x="10.7942%" y="501" width="0.0216%" height="15" fill="rgb(232,167,36)" fg:x="999" fg:w="2"/><text x="11.0442%" y="511.50"></text></g><g><title>SDL_InitSubSystem_REAL.part.0 (2 samples, 0.02%)</title><rect x="10.7942%" y="485" width="0.0216%" height="15" fill="rgb(244,19,51)" fg:x="999" fg:w="2"/><text x="11.0442%" y="495.50"></text></g><g><title>SDL_VideoInit_REAL (2 samples, 0.02%)</title><rect x="10.7942%" y="469" width="0.0216%" height="15" fill="rgb(224,6,22)" fg:x="999" fg:w="2"/><text x="11.0442%" y="479.50"></text></g><g><title>X11_VideoInit (2 samples, 0.02%)</title><rect x="10.7942%" y="453" width="0.0216%" height="15" fill="rgb(224,145,5)" fg:x="999" fg:w="2"/><text x="11.0442%" y="463.50"></text></g><g><title>X11_InitKeyboard (2 samples, 0.02%)</title><rect x="10.7942%" y="437" width="0.0216%" height="15" fill="rgb(234,130,49)" fg:x="999" fg:w="2"/><text x="11.0442%" y="447.50"></text></g><g><title>XSetLocaleModifiers (2 samples, 0.02%)</title><rect x="10.7942%" y="421" width="0.0216%" height="15" fill="rgb(254,6,2)" fg:x="999" fg:w="2"/><text x="11.0442%" y="431.50"></text></g><g><title>_XOpenLC@plt (1 samples, 0.01%)</title><rect x="10.8050%" y="405" width="0.0108%" height="15" fill="rgb(208,96,46)" fg:x="1000" fg:w="1"/><text x="11.0550%" y="415.50"></text></g><g><title>SDL_FinishWindowCreation (5 samples, 0.05%)</title><rect x="10.8158%" y="485" width="0.0540%" height="15" fill="rgb(239,3,39)" fg:x="1001" fg:w="5"/><text x="11.0658%" y="495.50"></text></g><g><title>X11_ShowWindow (5 samples, 0.05%)</title><rect x="10.8158%" y="469" width="0.0540%" height="15" fill="rgb(233,210,1)" fg:x="1001" fg:w="5"/><text x="11.0658%" y="479.50"></text></g><g><title>XIfEvent (5 samples, 0.05%)</title><rect x="10.8158%" y="453" width="0.0540%" height="15" fill="rgb(244,137,37)" fg:x="1001" fg:w="5"/><text x="11.0658%" y="463.50"></text></g><g><title>_XReadEvents (5 samples, 0.05%)</title><rect x="10.8158%" y="437" width="0.0540%" height="15" fill="rgb(240,136,2)" fg:x="1001" fg:w="5"/><text x="11.0658%" y="447.50"></text></g><g><title>xcb_wait_for_event (5 samples, 0.05%)</title><rect x="10.8158%" y="421" width="0.0540%" height="15" fill="rgb(239,18,37)" fg:x="1001" fg:w="5"/><text x="11.0658%" y="431.50"></text></g><g><title>_xcb_conn_wait (5 samples, 0.05%)</title><rect x="10.8158%" y="405" width="0.0540%" height="15" fill="rgb(218,185,22)" fg:x="1001" fg:w="5"/><text x="11.0658%" y="415.50"></text></g><g><title>__libc_poll (4 samples, 0.04%)</title><rect x="10.8266%" y="389" width="0.0432%" height="15" fill="rgb(225,218,4)" fg:x="1002" fg:w="4"/><text x="11.0766%" y="399.50"></text></g><g><title>gb_rs::gb::GameBoy::new (75 samples, 0.81%)</title><rect x="10.0702%" y="549" width="0.8104%" height="15" fill="rgb(230,182,32)" fg:x="932" fg:w="75"/><text x="10.3202%" y="559.50"></text></g><g><title>gb_rs::graphics::Graphics::new (75 samples, 0.81%)</title><rect x="10.0702%" y="533" width="0.8104%" height="15" fill="rgb(242,56,43)" fg:x="932" fg:w="75"/><text x="10.3202%" y="543.50"></text></g><g><title>sdl2::video::WindowBuilder::build (6 samples, 0.06%)</title><rect x="10.8158%" y="517" width="0.0648%" height="15" fill="rgb(233,99,24)" fg:x="1001" fg:w="6"/><text x="11.0658%" y="527.50"></text></g><g><title>SDL_CreateWindow_REAL (6 samples, 0.06%)</title><rect x="10.8158%" y="501" width="0.0648%" height="15" fill="rgb(234,209,42)" fg:x="1001" fg:w="6"/><text x="11.0658%" y="511.50"></text></g><g><title>X11_CreateWindow (1 samples, 0.01%)</title><rect x="10.8698%" y="485" width="0.0108%" height="15" fill="rgb(227,7,12)" fg:x="1006" fg:w="1"/><text x="11.1198%" y="495.50"></text></g><g><title>SetupWindowData (1 samples, 0.01%)</title><rect x="10.8698%" y="469" width="0.0108%" height="15" fill="rgb(245,203,43)" fg:x="1006" fg:w="1"/><text x="11.1198%" y="479.50"></text></g><g><title>XCreateIC (1 samples, 0.01%)</title><rect x="10.8698%" y="453" width="0.0108%" height="15" fill="rgb(238,205,33)" fg:x="1006" fg:w="1"/><text x="11.1198%" y="463.50"></text></g><g><title>_XimLocalCreateIC (1 samples, 0.01%)</title><rect x="10.8698%" y="437" width="0.0108%" height="15" fill="rgb(231,56,7)" fg:x="1006" fg:w="1"/><text x="11.1198%" y="447.50"></text></g><g><title>_dl_runtime_resolve_xsavec (1 samples, 0.01%)</title><rect x="10.8698%" y="421" width="0.0108%" height="15" fill="rgb(244,186,29)" fg:x="1006" fg:w="1"/><text x="11.1198%" y="431.50"></text></g><g><title>_dl_fixup (1 samples, 0.01%)</title><rect x="10.8698%" y="405" width="0.0108%" height="15" fill="rgb(234,111,31)" fg:x="1006" fg:w="1"/><text x="11.1198%" y="415.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="10.8698%" y="389" width="0.0108%" height="15" fill="rgb(241,149,10)" fg:x="1006" fg:w="1"/><text x="11.1198%" y="399.50"></text></g><g><title>do_lookup_x (1 samples, 0.01%)</title><rect x="10.8698%" y="373" width="0.0108%" height="15" fill="rgb(249,206,44)" fg:x="1006" fg:w="1"/><text x="11.1198%" y="383.50"></text></g><g><title>gb_rs::gb::GameBoy::run (45 samples, 0.49%)</title><rect x="10.8806%" y="549" width="0.4862%" height="15" fill="rgb(251,153,30)" fg:x="1007" fg:w="45"/><text x="11.1306%" y="559.50"></text></g><g><title>gb_rs::graphics::Graphics::render (3 samples, 0.03%)</title><rect x="11.3344%" y="533" width="0.0324%" height="15" fill="rgb(239,152,38)" fg:x="1049" fg:w="3"/><text x="11.5844%" y="543.50"></text></g><g><title>gb_rs::graphics::Graphics::draw_scanline (3 samples, 0.03%)</title><rect x="11.3344%" y="517" width="0.0324%" height="15" fill="rgb(249,139,47)" fg:x="1049" fg:w="3"/><text x="11.5844%" y="527.50"></text></g><g><title>&lt;gb_rs::graphics::ObjFIFO as gb_rs::graphics::FIFO&gt;::next_line (3 samples, 0.03%)</title><rect x="11.3344%" y="501" width="0.0324%" height="15" fill="rgb(244,64,35)" fg:x="1049" fg:w="3"/><text x="11.5844%" y="511.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.03%)</title><rect x="11.3344%" y="485" width="0.0324%" height="15" fill="rgb(216,46,15)" fg:x="1049" fg:w="3"/><text x="11.5844%" y="495.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.03%)</title><rect x="11.3344%" y="469" width="0.0324%" height="15" fill="rgb(250,74,19)" fg:x="1049" fg:w="3"/><text x="11.5844%" y="479.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="11.3344%" y="453" width="0.0324%" height="15" fill="rgb(249,42,33)" fg:x="1049" fg:w="3"/><text x="11.5844%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="11.3344%" y="437" width="0.0324%" height="15" fill="rgb(242,149,17)" fg:x="1049" fg:w="3"/><text x="11.5844%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="11.3344%" y="421" width="0.0324%" height="15" fill="rgb(244,29,21)" fg:x="1049" fg:w="3"/><text x="11.5844%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.03%)</title><rect x="11.3344%" y="405" width="0.0324%" height="15" fill="rgb(220,130,37)" fg:x="1049" fg:w="3"/><text x="11.5844%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="11.3344%" y="389" width="0.0324%" height="15" fill="rgb(211,67,2)" fg:x="1049" fg:w="3"/><text x="11.5844%" y="399.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="11.3344%" y="373" width="0.0324%" height="15" fill="rgb(235,68,52)" fg:x="1049" fg:w="3"/><text x="11.5844%" y="383.50"></text></g><g><title>_int_malloc (3 samples, 0.03%)</title><rect x="11.3344%" y="357" width="0.0324%" height="15" fill="rgb(246,142,3)" fg:x="1049" fg:w="3"/><text x="11.5844%" y="367.50"></text></g><g><title>malloc_consolidate (2 samples, 0.02%)</title><rect x="11.3452%" y="341" width="0.0216%" height="15" fill="rgb(241,25,7)" fg:x="1050" fg:w="2"/><text x="11.5952%" y="351.50"></text></g><g><title>gb_rs::graphics::BgFIFO::fetch (60 samples, 0.65%)</title><rect x="11.3668%" y="549" width="0.6483%" height="15" fill="rgb(242,119,39)" fg:x="1052" fg:w="60"/><text x="11.6168%" y="559.50"></text></g><g><title>gb_rs::graphics::Graphics::render (33 samples, 0.36%)</title><rect x="12.0151%" y="549" width="0.3566%" height="15" fill="rgb(241,98,45)" fg:x="1112" fg:w="33"/><text x="12.2651%" y="559.50"></text></g><g><title>gb_rs::graphics::Tile::fetch_tile (12 samples, 0.13%)</title><rect x="12.3717%" y="549" width="0.1297%" height="15" fill="rgb(254,28,30)" fg:x="1145" fg:w="12"/><text x="12.6217%" y="559.50"></text></g><g><title>gb_rs::joypad::Joypad::update (20 samples, 0.22%)</title><rect x="12.5014%" y="549" width="0.2161%" height="15" fill="rgb(241,142,54)" fg:x="1157" fg:w="20"/><text x="12.7514%" y="559.50"></text></g><g><title>SDL_GetVideoDevice (1 samples, 0.01%)</title><rect x="14.8136%" y="469" width="0.0108%" height="15" fill="rgb(222,85,15)" fg:x="1371" fg:w="1"/><text x="15.0636%" y="479.50"></text></g><g><title>SDL_PeepEventsInternal.constprop.0 (1 samples, 0.01%)</title><rect x="14.8244%" y="469" width="0.0108%" height="15" fill="rgb(210,85,47)" fg:x="1372" fg:w="1"/><text x="15.0744%" y="479.50"></text></g><g><title>SDL_AtomicAdd_REAL (1 samples, 0.01%)</title><rect x="14.8244%" y="453" width="0.0108%" height="15" fill="rgb(224,206,25)" fg:x="1372" fg:w="1"/><text x="15.0744%" y="463.50"></text></g><g><title>XPending (1 samples, 0.01%)</title><rect x="14.8352%" y="421" width="0.0108%" height="15" fill="rgb(243,201,19)" fg:x="1373" fg:w="1"/><text x="15.0852%" y="431.50"></text></g><g><title>_XEventsQueued (1 samples, 0.01%)</title><rect x="14.8352%" y="405" width="0.0108%" height="15" fill="rgb(236,59,4)" fg:x="1373" fg:w="1"/><text x="15.0852%" y="415.50"></text></g><g><title>poll_for_response (1 samples, 0.01%)</title><rect x="14.8352%" y="389" width="0.0108%" height="15" fill="rgb(254,179,45)" fg:x="1373" fg:w="1"/><text x="15.0852%" y="399.50"></text></g><g><title>poll_for_event (1 samples, 0.01%)</title><rect x="14.8352%" y="373" width="0.0108%" height="15" fill="rgb(226,14,10)" fg:x="1373" fg:w="1"/><text x="15.0852%" y="383.50"></text></g><g><title>xcb_poll_for_event (1 samples, 0.01%)</title><rect x="14.8352%" y="357" width="0.0108%" height="15" fill="rgb(244,27,41)" fg:x="1373" fg:w="1"/><text x="15.0852%" y="367.50"></text></g><g><title>X11_DispatchEvent (2 samples, 0.02%)</title><rect x="14.8352%" y="437" width="0.0216%" height="15" fill="rgb(235,35,32)" fg:x="1373" fg:w="2"/><text x="15.0852%" y="447.50"></text></g><g><title>_XimLocalFilter (1 samples, 0.01%)</title><rect x="14.8460%" y="421" width="0.0108%" height="15" fill="rgb(218,68,31)" fg:x="1374" fg:w="1"/><text x="15.0960%" y="431.50"></text></g><g><title>_XEventsQueued@plt (1 samples, 0.01%)</title><rect x="14.8568%" y="421" width="0.0108%" height="15" fill="rgb(207,120,37)" fg:x="1375" fg:w="1"/><text x="15.1068%" y="431.50"></text></g><g><title>&lt;sdl2::event::EventPollIterator as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="14.8136%" y="517" width="0.0648%" height="15" fill="rgb(227,98,0)" fg:x="1371" fg:w="6"/><text x="15.0636%" y="527.50"></text></g><g><title>sdl2::event::poll_event (6 samples, 0.06%)</title><rect x="14.8136%" y="501" width="0.0648%" height="15" fill="rgb(207,7,3)" fg:x="1371" fg:w="6"/><text x="15.0636%" y="511.50"></text></g><g><title>SDL_PollEvent_REAL (6 samples, 0.06%)</title><rect x="14.8136%" y="485" width="0.0648%" height="15" fill="rgb(206,98,19)" fg:x="1371" fg:w="6"/><text x="15.0636%" y="495.50"></text></g><g><title>SDL_PumpEventsInternal.constprop.0 (4 samples, 0.04%)</title><rect x="14.8352%" y="469" width="0.0432%" height="15" fill="rgb(217,5,26)" fg:x="1373" fg:w="4"/><text x="15.0852%" y="479.50"></text></g><g><title>X11_PumpEvents (4 samples, 0.04%)</title><rect x="14.8352%" y="453" width="0.0432%" height="15" fill="rgb(235,190,38)" fg:x="1373" fg:w="4"/><text x="15.0852%" y="463.50"></text></g><g><title>XCheckIfEvent (2 samples, 0.02%)</title><rect x="14.8568%" y="437" width="0.0216%" height="15" fill="rgb(247,86,24)" fg:x="1375" fg:w="2"/><text x="15.1068%" y="447.50"></text></g><g><title>_XFlush (1 samples, 0.01%)</title><rect x="14.8676%" y="421" width="0.0108%" height="15" fill="rgb(205,101,16)" fg:x="1376" fg:w="1"/><text x="15.1176%" y="431.50"></text></g><g><title>_XSend@plt (1 samples, 0.01%)</title><rect x="14.8676%" y="405" width="0.0108%" height="15" fill="rgb(246,168,33)" fg:x="1376" fg:w="1"/><text x="15.1176%" y="415.50"></text></g><g><title>SDL_Delay (10 samples, 0.11%)</title><rect x="14.8784%" y="517" width="0.1080%" height="15" fill="rgb(231,114,1)" fg:x="1377" fg:w="10"/><text x="15.1284%" y="527.50"></text></g><g><title>__GI___errno_location (6 samples, 0.06%)</title><rect x="15.0837%" y="501" width="0.0648%" height="15" fill="rgb(207,184,53)" fg:x="1396" fg:w="6"/><text x="15.3337%" y="511.50"></text></g><g><title>__GI___nanosleep (48 samples, 0.52%)</title><rect x="15.1486%" y="501" width="0.5186%" height="15" fill="rgb(224,95,51)" fg:x="1402" fg:w="48"/><text x="15.3986%" y="511.50"></text></g><g><title>__clock_nanosleep (43 samples, 0.46%)</title><rect x="15.2026%" y="485" width="0.4646%" height="15" fill="rgb(212,188,45)" fg:x="1407" fg:w="43"/><text x="15.4526%" y="495.50"></text></g><g><title>__GI___pthread_disable_asynccancel (4 samples, 0.04%)</title><rect x="15.6240%" y="469" width="0.0432%" height="15" fill="rgb(223,154,38)" fg:x="1446" fg:w="4"/><text x="15.8740%" y="479.50"></text></g><g><title>SDL_Delay_REAL (66 samples, 0.71%)</title><rect x="14.9865%" y="517" width="0.7131%" height="15" fill="rgb(251,22,52)" fg:x="1387" fg:w="66"/><text x="15.2365%" y="527.50"></text></g><g><title>__errno_location@plt (3 samples, 0.03%)</title><rect x="15.6672%" y="501" width="0.0324%" height="15" fill="rgb(229,209,22)" fg:x="1450" fg:w="3"/><text x="15.9172%" y="511.50"></text></g><g><title>[gb-rs] (1 samples, 0.01%)</title><rect x="15.6996%" y="517" width="0.0108%" height="15" fill="rgb(234,138,34)" fg:x="1453" fg:w="1"/><text x="15.9496%" y="527.50"></text></g><g><title>SDL_Delay_REAL (1 samples, 0.01%)</title><rect x="15.6996%" y="501" width="0.0108%" height="15" fill="rgb(212,95,11)" fg:x="1453" fg:w="1"/><text x="15.9496%" y="511.50"></text></g><g><title>GL_DestroyShaderContext (1 samples, 0.01%)</title><rect x="15.7104%" y="373" width="0.0108%" height="15" fill="rgb(240,179,47)" fg:x="1454" fg:w="1"/><text x="15.9604%" y="383.50"></text></g><g><title>_mesa_DeleteObjectARB (1 samples, 0.01%)</title><rect x="15.7104%" y="357" width="0.0108%" height="15" fill="rgb(240,163,11)" fg:x="1454" fg:w="1"/><text x="15.9604%" y="367.50"></text></g><g><title>_mesa_reference_shader_program_ (1 samples, 0.01%)</title><rect x="15.7104%" y="341" width="0.0108%" height="15" fill="rgb(236,37,12)" fg:x="1454" fg:w="1"/><text x="15.9604%" y="351.50"></text></g><g><title>_mesa_free_shader_program_data (1 samples, 0.01%)</title><rect x="15.7104%" y="325" width="0.0108%" height="15" fill="rgb(232,164,16)" fg:x="1454" fg:w="1"/><text x="15.9604%" y="335.50"></text></g><g><title>_mesa_clear_shader_program_data (1 samples, 0.01%)</title><rect x="15.7104%" y="309" width="0.0108%" height="15" fill="rgb(244,205,15)" fg:x="1454" fg:w="1"/><text x="15.9604%" y="319.50"></text></g><g><title>string_to_uint_map_dtor (1 samples, 0.01%)</title><rect x="15.7104%" y="293" width="0.0108%" height="15" fill="rgb(223,117,47)" fg:x="1454" fg:w="1"/><text x="15.9604%" y="303.50"></text></g><g><title>ralloc_free (1 samples, 0.01%)</title><rect x="15.7104%" y="277" width="0.0108%" height="15" fill="rgb(244,107,35)" fg:x="1454" fg:w="1"/><text x="15.9604%" y="287.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="15.7104%" y="261" width="0.0108%" height="15" fill="rgb(205,140,8)" fg:x="1454" fg:w="1"/><text x="15.9604%" y="271.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="15.7320%" y="245" width="0.0108%" height="15" fill="rgb(228,84,46)" fg:x="1456" fg:w="1"/><text x="15.9820%" y="255.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.7320%" y="229" width="0.0108%" height="15" fill="rgb(254,188,9)" fg:x="1456" fg:w="1"/><text x="15.9820%" y="239.50"></text></g><g><title>_mesa_free_context_data (3 samples, 0.03%)</title><rect x="15.7212%" y="293" width="0.0324%" height="15" fill="rgb(206,112,54)" fg:x="1455" fg:w="3"/><text x="15.9712%" y="303.50"></text></g><g><title>_mesa_glsl_builtin_functions_decref (3 samples, 0.03%)</title><rect x="15.7212%" y="277" width="0.0324%" height="15" fill="rgb(216,84,49)" fg:x="1455" fg:w="3"/><text x="15.9712%" y="287.50"></text></g><g><title>ralloc_free (3 samples, 0.03%)</title><rect x="15.7212%" y="261" width="0.0324%" height="15" fill="rgb(214,194,35)" fg:x="1455" fg:w="3"/><text x="15.9712%" y="271.50"></text></g><g><title>unsafe_free (1 samples, 0.01%)</title><rect x="15.7428%" y="245" width="0.0108%" height="15" fill="rgb(249,28,3)" fg:x="1457" fg:w="1"/><text x="15.9928%" y="255.50"></text></g><g><title>glsl_symbol_table::~glsl_symbol_table (1 samples, 0.01%)</title><rect x="15.7428%" y="229" width="0.0108%" height="15" fill="rgb(222,56,52)" fg:x="1457" fg:w="1"/><text x="15.9928%" y="239.50"></text></g><g><title>_mesa_symbol_table_dtor (1 samples, 0.01%)</title><rect x="15.7428%" y="213" width="0.0108%" height="15" fill="rgb(245,217,50)" fg:x="1457" fg:w="1"/><text x="15.9928%" y="223.50"></text></g><g><title>_mesa_symbol_table_pop_scope (1 samples, 0.01%)</title><rect x="15.7428%" y="197" width="0.0108%" height="15" fill="rgb(213,201,24)" fg:x="1457" fg:w="1"/><text x="15.9928%" y="207.50"></text></g><g><title>&lt;sdl2::render::RendererContext&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="15.7104%" y="405" width="0.0648%" height="15" fill="rgb(248,116,28)" fg:x="1454" fg:w="6"/><text x="15.9604%" y="415.50"></text></g><g><title>GL_DestroyRenderer (6 samples, 0.06%)</title><rect x="15.7104%" y="389" width="0.0648%" height="15" fill="rgb(219,72,43)" fg:x="1454" fg:w="6"/><text x="15.9604%" y="399.50"></text></g><g><title>X11_GL_DeleteContext (5 samples, 0.05%)</title><rect x="15.7212%" y="373" width="0.0540%" height="15" fill="rgb(209,138,14)" fg:x="1455" fg:w="5"/><text x="15.9712%" y="383.50"></text></g><g><title>glXDestroyContext (5 samples, 0.05%)</title><rect x="15.7212%" y="357" width="0.0540%" height="15" fill="rgb(222,18,33)" fg:x="1455" fg:w="5"/><text x="15.9712%" y="367.50"></text></g><g><title>dri2_destroy_context (5 samples, 0.05%)</title><rect x="15.7212%" y="341" width="0.0540%" height="15" fill="rgb(213,199,7)" fg:x="1455" fg:w="5"/><text x="15.9712%" y="351.50"></text></g><g><title>dri_destroy_context (5 samples, 0.05%)</title><rect x="15.7212%" y="325" width="0.0540%" height="15" fill="rgb(250,110,10)" fg:x="1455" fg:w="5"/><text x="15.9712%" y="335.50"></text></g><g><title>st_destroy_context (5 samples, 0.05%)</title><rect x="15.7212%" y="309" width="0.0540%" height="15" fill="rgb(248,123,6)" fg:x="1455" fg:w="5"/><text x="15.9712%" y="319.50"></text></g><g><title>st_destroy_context_priv (2 samples, 0.02%)</title><rect x="15.7536%" y="293" width="0.0216%" height="15" fill="rgb(206,91,31)" fg:x="1458" fg:w="2"/><text x="16.0036%" y="303.50"></text></g><g><title>tc_destroy (2 samples, 0.02%)</title><rect x="15.7536%" y="277" width="0.0216%" height="15" fill="rgb(211,154,13)" fg:x="1458" fg:w="2"/><text x="16.0036%" y="287.50"></text></g><g><title>iris_destroy_context (2 samples, 0.02%)</title><rect x="15.7536%" y="261" width="0.0216%" height="15" fill="rgb(225,148,7)" fg:x="1458" fg:w="2"/><text x="16.0036%" y="271.50"></text></g><g><title>iris_destroy_program_cache (2 samples, 0.02%)</title><rect x="15.7536%" y="245" width="0.0216%" height="15" fill="rgb(220,160,43)" fg:x="1458" fg:w="2"/><text x="16.0036%" y="255.50"></text></g><g><title>__free (2 samples, 0.02%)</title><rect x="15.7536%" y="229" width="0.0216%" height="15" fill="rgb(213,52,39)" fg:x="1458" fg:w="2"/><text x="16.0036%" y="239.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="15.7536%" y="213" width="0.0216%" height="15" fill="rgb(243,137,7)" fg:x="1458" fg:w="2"/><text x="16.0036%" y="223.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (2 samples, 0.02%)</title><rect x="15.7536%" y="197" width="0.0216%" height="15" fill="rgb(230,79,13)" fg:x="1458" fg:w="2"/><text x="16.0036%" y="207.50"></text></g><g><title>malloc_consolidate (2 samples, 0.02%)</title><rect x="15.7536%" y="181" width="0.0216%" height="15" fill="rgb(247,105,23)" fg:x="1458" fg:w="2"/><text x="16.0036%" y="191.50"></text></g><g><title>_XFreeDisplayStructure (1 samples, 0.01%)</title><rect x="15.7753%" y="245" width="0.0108%" height="15" fill="rgb(223,179,41)" fg:x="1460" fg:w="1"/><text x="16.0253%" y="255.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="15.7753%" y="229" width="0.0108%" height="15" fill="rgb(218,9,34)" fg:x="1460" fg:w="1"/><text x="16.0253%" y="239.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.7753%" y="213" width="0.0108%" height="15" fill="rgb(222,106,8)" fg:x="1460" fg:w="1"/><text x="16.0253%" y="223.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (1 samples, 0.01%)</title><rect x="15.7753%" y="197" width="0.0108%" height="15" fill="rgb(211,220,0)" fg:x="1460" fg:w="1"/><text x="16.0253%" y="207.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="15.7753%" y="181" width="0.0108%" height="15" fill="rgb(229,52,16)" fg:x="1460" fg:w="1"/><text x="16.0253%" y="191.50"></text></g><g><title>disk_cache_destroy (5 samples, 0.05%)</title><rect x="15.7861%" y="165" width="0.0540%" height="15" fill="rgb(212,155,18)" fg:x="1461" fg:w="5"/><text x="16.0361%" y="175.50"></text></g><g><title>util_queue_destroy (5 samples, 0.05%)</title><rect x="15.7861%" y="149" width="0.0540%" height="15" fill="rgb(242,21,14)" fg:x="1461" fg:w="5"/><text x="16.0361%" y="159.50"></text></g><g><title>util_queue_kill_threads (5 samples, 0.05%)</title><rect x="15.7861%" y="133" width="0.0540%" height="15" fill="rgb(222,19,48)" fg:x="1461" fg:w="5"/><text x="16.0361%" y="143.50"></text></g><g><title>thrd_join (5 samples, 0.05%)</title><rect x="15.7861%" y="117" width="0.0540%" height="15" fill="rgb(232,45,27)" fg:x="1461" fg:w="5"/><text x="16.0361%" y="127.50"></text></g><g><title>__pthread_clockjoin_ex (5 samples, 0.05%)</title><rect x="15.7861%" y="101" width="0.0540%" height="15" fill="rgb(249,103,42)" fg:x="1461" fg:w="5"/><text x="16.0361%" y="111.50"></text></g><g><title>__futex_abstimed_wait_common (4 samples, 0.04%)</title><rect x="15.7969%" y="85" width="0.0432%" height="15" fill="rgb(246,81,33)" fg:x="1462" fg:w="4"/><text x="16.0469%" y="95.50"></text></g><g><title>__GI___nptl_deallocate_stack (2 samples, 0.02%)</title><rect x="15.8401%" y="101" width="0.0216%" height="15" fill="rgb(252,33,42)" fg:x="1466" fg:w="2"/><text x="16.0901%" y="111.50"></text></g><g><title>__nptl_free_stacks (1 samples, 0.01%)</title><rect x="15.8509%" y="85" width="0.0108%" height="15" fill="rgb(209,212,41)" fg:x="1467" fg:w="1"/><text x="16.1009%" y="95.50"></text></g><g><title>__GI__dl_deallocate_tls (1 samples, 0.01%)</title><rect x="15.8509%" y="69" width="0.0108%" height="15" fill="rgb(207,154,6)" fg:x="1467" fg:w="1"/><text x="16.1009%" y="79.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="15.8509%" y="53" width="0.0108%" height="15" fill="rgb(223,64,47)" fg:x="1467" fg:w="1"/><text x="16.1009%" y="63.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.8509%" y="37" width="0.0108%" height="15" fill="rgb(211,161,38)" fg:x="1467" fg:w="1"/><text x="16.1009%" y="47.50"></text></g><g><title>iris_screen_destroy (16 samples, 0.17%)</title><rect x="15.7861%" y="181" width="0.1729%" height="15" fill="rgb(219,138,40)" fg:x="1461" fg:w="16"/><text x="16.0361%" y="191.50"></text></g><g><title>util_queue_destroy (11 samples, 0.12%)</title><rect x="15.8401%" y="165" width="0.1189%" height="15" fill="rgb(241,228,46)" fg:x="1466" fg:w="11"/><text x="16.0901%" y="175.50"></text></g><g><title>util_queue_kill_threads (11 samples, 0.12%)</title><rect x="15.8401%" y="149" width="0.1189%" height="15" fill="rgb(223,209,38)" fg:x="1466" fg:w="11"/><text x="16.0901%" y="159.50"></text></g><g><title>thrd_join (11 samples, 0.12%)</title><rect x="15.8401%" y="133" width="0.1189%" height="15" fill="rgb(236,164,45)" fg:x="1466" fg:w="11"/><text x="16.0901%" y="143.50"></text></g><g><title>__pthread_clockjoin_ex (11 samples, 0.12%)</title><rect x="15.8401%" y="117" width="0.1189%" height="15" fill="rgb(231,15,5)" fg:x="1466" fg:w="11"/><text x="16.0901%" y="127.50"></text></g><g><title>__futex_abstimed_wait_common (9 samples, 0.10%)</title><rect x="15.8617%" y="101" width="0.0972%" height="15" fill="rgb(252,35,15)" fg:x="1468" fg:w="9"/><text x="16.1117%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;sdl2::render::TextureCreator&lt;sdl2::video::WindowContext&gt;&gt; (24 samples, 0.26%)</title><rect x="15.7104%" y="469" width="0.2593%" height="15" fill="rgb(248,181,18)" fg:x="1454" fg:w="24"/><text x="15.9604%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;sdl2::render::RendererContext&lt;sdl2::video::WindowContext&gt;&gt;&gt; (24 samples, 0.26%)</title><rect x="15.7104%" y="453" width="0.2593%" height="15" fill="rgb(233,39,42)" fg:x="1454" fg:w="24"/><text x="15.9604%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.26%)</title><rect x="15.7104%" y="437" width="0.2593%" height="15" fill="rgb(238,110,33)" fg:x="1454" fg:w="24"/><text x="15.9604%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;sdl2::render::RendererContext&lt;sdl2::video::WindowContext&gt;&gt; (24 samples, 0.26%)</title><rect x="15.7104%" y="421" width="0.2593%" height="15" fill="rgb(233,195,10)" fg:x="1454" fg:w="24"/><text x="15.9604%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;sdl2::video::WindowContext&gt;&gt; (18 samples, 0.19%)</title><rect x="15.7753%" y="405" width="0.1945%" height="15" fill="rgb(254,105,3)" fg:x="1460" fg:w="18"/><text x="16.0253%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.19%)</title><rect x="15.7753%" y="389" width="0.1945%" height="15" fill="rgb(221,225,9)" fg:x="1460" fg:w="18"/><text x="16.0253%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;sdl2::video::WindowContext&gt; (18 samples, 0.19%)</title><rect x="15.7753%" y="373" width="0.1945%" height="15" fill="rgb(224,227,45)" fg:x="1460" fg:w="18"/><text x="16.0253%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;sdl2::sdl::VideoSubsystem&gt; (18 samples, 0.19%)</title><rect x="15.7753%" y="357" width="0.1945%" height="15" fill="rgb(229,198,43)" fg:x="1460" fg:w="18"/><text x="16.0253%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;sdl2::sdl::SubsystemDrop&gt; (18 samples, 0.19%)</title><rect x="15.7753%" y="341" width="0.1945%" height="15" fill="rgb(206,209,35)" fg:x="1460" fg:w="18"/><text x="16.0253%" y="351.50"></text></g><g><title>&lt;sdl2::sdl::SubsystemDrop as core::ops::drop::Drop&gt;::drop (18 samples, 0.19%)</title><rect x="15.7753%" y="325" width="0.1945%" height="15" fill="rgb(245,195,53)" fg:x="1460" fg:w="18"/><text x="16.0253%" y="335.50"></text></g><g><title>SDL_QuitSubSystem_REAL (18 samples, 0.19%)</title><rect x="15.7753%" y="309" width="0.1945%" height="15" fill="rgb(240,92,26)" fg:x="1460" fg:w="18"/><text x="16.0253%" y="319.50"></text></g><g><title>SDL_VideoQuit_REAL.part.0 (18 samples, 0.19%)</title><rect x="15.7753%" y="293" width="0.1945%" height="15" fill="rgb(207,40,23)" fg:x="1460" fg:w="18"/><text x="16.0253%" y="303.50"></text></g><g><title>X11_DeleteDevice (18 samples, 0.19%)</title><rect x="15.7753%" y="277" width="0.1945%" height="15" fill="rgb(223,111,35)" fg:x="1460" fg:w="18"/><text x="16.0253%" y="287.50"></text></g><g><title>XCloseDisplay (18 samples, 0.19%)</title><rect x="15.7753%" y="261" width="0.1945%" height="15" fill="rgb(229,147,28)" fg:x="1460" fg:w="18"/><text x="16.0253%" y="271.50"></text></g><g><title>__glXCloseDisplay (17 samples, 0.18%)</title><rect x="15.7861%" y="245" width="0.1837%" height="15" fill="rgb(211,29,28)" fg:x="1461" fg:w="17"/><text x="16.0361%" y="255.50"></text></g><g><title>glx_display_free (17 samples, 0.18%)</title><rect x="15.7861%" y="229" width="0.1837%" height="15" fill="rgb(228,72,33)" fg:x="1461" fg:w="17"/><text x="16.0361%" y="239.50"></text></g><g><title>dri2DestroyScreen (17 samples, 0.18%)</title><rect x="15.7861%" y="213" width="0.1837%" height="15" fill="rgb(205,214,31)" fg:x="1461" fg:w="17"/><text x="16.0361%" y="223.50"></text></g><g><title>dri_destroy_screen (17 samples, 0.18%)</title><rect x="15.7861%" y="197" width="0.1837%" height="15" fill="rgb(224,111,15)" fg:x="1461" fg:w="17"/><text x="16.0361%" y="207.50"></text></g><g><title>ralloc_free (1 samples, 0.01%)</title><rect x="15.9589%" y="181" width="0.0108%" height="15" fill="rgb(253,21,26)" fg:x="1477" fg:w="1"/><text x="16.2089%" y="191.50"></text></g><g><title>unsafe_free (1 samples, 0.01%)</title><rect x="15.9589%" y="165" width="0.0108%" height="15" fill="rgb(245,139,43)" fg:x="1477" fg:w="1"/><text x="16.2089%" y="175.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="15.9589%" y="149" width="0.0108%" height="15" fill="rgb(252,170,7)" fg:x="1477" fg:w="1"/><text x="16.2089%" y="159.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.9589%" y="133" width="0.0108%" height="15" fill="rgb(231,118,14)" fg:x="1477" fg:w="1"/><text x="16.2089%" y="143.50"></text></g><g><title>_int_free_merge_chunk (1 samples, 0.01%)</title><rect x="15.9589%" y="117" width="0.0108%" height="15" fill="rgb(238,83,0)" fg:x="1477" fg:w="1"/><text x="16.2089%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;gb_rs::gb::GameBoy&gt; (30 samples, 0.32%)</title><rect x="15.7104%" y="517" width="0.3241%" height="15" fill="rgb(221,39,39)" fg:x="1454" fg:w="30"/><text x="15.9604%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;gb_rs::graphics::Graphics&gt;&gt; (30 samples, 0.32%)</title><rect x="15.7104%" y="501" width="0.3241%" height="15" fill="rgb(222,119,46)" fg:x="1454" fg:w="30"/><text x="15.9604%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;gb_rs::graphics::Graphics&gt; (30 samples, 0.32%)</title><rect x="15.7104%" y="485" width="0.3241%" height="15" fill="rgb(222,165,49)" fg:x="1454" fg:w="30"/><text x="15.9604%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;sdl2::sdl::TimerSubsystem&gt; (6 samples, 0.06%)</title><rect x="15.9697%" y="469" width="0.0648%" height="15" fill="rgb(219,113,52)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;sdl2::sdl::SubsystemDrop&gt; (6 samples, 0.06%)</title><rect x="15.9697%" y="453" width="0.0648%" height="15" fill="rgb(214,7,15)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;sdl2::sdl::SdlDrop&gt; (6 samples, 0.06%)</title><rect x="15.9697%" y="437" width="0.0648%" height="15" fill="rgb(235,32,4)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="447.50"></text></g><g><title>&lt;sdl2::sdl::SdlDrop as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="15.9697%" y="421" width="0.0648%" height="15" fill="rgb(238,90,54)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="431.50"></text></g><g><title>SDL_Quit_REAL (6 samples, 0.06%)</title><rect x="15.9697%" y="405" width="0.0648%" height="15" fill="rgb(213,208,19)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="415.50"></text></g><g><title>SDL_DBus_Quit (6 samples, 0.06%)</title><rect x="15.9697%" y="389" width="0.0648%" height="15" fill="rgb(233,156,4)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="399.50"></text></g><g><title>__dlclose (6 samples, 0.06%)</title><rect x="15.9697%" y="373" width="0.0648%" height="15" fill="rgb(207,194,5)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="383.50"></text></g><g><title>_dlerror_run (6 samples, 0.06%)</title><rect x="15.9697%" y="357" width="0.0648%" height="15" fill="rgb(206,111,30)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="367.50"></text></g><g><title>_dl_catch_error (6 samples, 0.06%)</title><rect x="15.9697%" y="341" width="0.0648%" height="15" fill="rgb(243,70,54)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="351.50"></text></g><g><title>__GI__dl_catch_exception (6 samples, 0.06%)</title><rect x="15.9697%" y="325" width="0.0648%" height="15" fill="rgb(242,28,8)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="335.50"></text></g><g><title>_dl_close (6 samples, 0.06%)</title><rect x="15.9697%" y="309" width="0.0648%" height="15" fill="rgb(219,106,18)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="319.50"></text></g><g><title>_dl_close_worker (6 samples, 0.06%)</title><rect x="15.9697%" y="293" width="0.0648%" height="15" fill="rgb(244,222,10)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="303.50"></text></g><g><title>__GI__dl_catch_exception (6 samples, 0.06%)</title><rect x="15.9697%" y="277" width="0.0648%" height="15" fill="rgb(236,179,52)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="287.50"></text></g><g><title>_dl_call_fini (6 samples, 0.06%)</title><rect x="15.9697%" y="261" width="0.0648%" height="15" fill="rgb(213,23,39)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="271.50"></text></g><g><title>__do_global_dtors_aux (6 samples, 0.06%)</title><rect x="15.9697%" y="245" width="0.0648%" height="15" fill="rgb(238,48,10)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="255.50"></text></g><g><title>__cxa_finalize (6 samples, 0.06%)</title><rect x="15.9697%" y="229" width="0.0648%" height="15" fill="rgb(251,196,23)" fg:x="1478" fg:w="6"/><text x="16.2197%" y="239.50"></text></g><g><title>core::time::Duration::as_millis (75 samples, 0.81%)</title><rect x="16.0346%" y="517" width="0.8104%" height="15" fill="rgb(250,152,24)" fg:x="1484" fg:w="75"/><text x="16.2846%" y="527.50"></text></g><g><title>gb_rs::clock::Clock::get_timestamp (22 samples, 0.24%)</title><rect x="16.8449%" y="517" width="0.2377%" height="15" fill="rgb(209,150,17)" fg:x="1559" fg:w="22"/><text x="17.0949%" y="527.50"></text></g><g><title>&lt;u16 as gb_rs::utils::WordOP&gt;::get_high (1 samples, 0.01%)</title><rect x="19.7731%" y="501" width="0.0108%" height="15" fill="rgb(234,202,34)" fg:x="1830" fg:w="1"/><text x="20.0231%" y="511.50"></text></g><g><title>&lt;&amp;u16 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (1 samples, 0.01%)</title><rect x="19.7731%" y="485" width="0.0108%" height="15" fill="rgb(253,148,53)" fg:x="1830" fg:w="1"/><text x="20.0231%" y="495.50"></text></g><g><title>&lt;u16 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (1 samples, 0.01%)</title><rect x="19.7731%" y="469" width="0.0108%" height="15" fill="rgb(218,129,16)" fg:x="1830" fg:w="1"/><text x="20.0231%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::le (29 samples, 0.31%)</title><rect x="19.7839%" y="501" width="0.3133%" height="15" fill="rgb(216,85,19)" fg:x="1831" fg:w="29"/><text x="20.0339%" y="511.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (22 samples, 0.24%)</title><rect x="19.8595%" y="485" width="0.2377%" height="15" fill="rgb(235,228,7)" fg:x="1838" fg:w="22"/><text x="20.1095%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (22 samples, 0.24%)</title><rect x="19.8595%" y="469" width="0.2377%" height="15" fill="rgb(245,175,0)" fg:x="1838" fg:w="22"/><text x="20.1095%" y="479.50"></text></g><g><title>core::num::&lt;impl u16&gt;::wrapping_add_signed (1 samples, 0.01%)</title><rect x="20.0972%" y="501" width="0.0108%" height="15" fill="rgb(208,168,36)" fg:x="1860" fg:w="1"/><text x="20.3472%" y="511.50"></text></g><g><title>core::num::&lt;impl u16&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="20.0972%" y="485" width="0.0108%" height="15" fill="rgb(246,171,24)" fg:x="1860" fg:w="1"/><text x="20.3472%" y="495.50"></text></g><g><title>core::num::&lt;impl u8&gt;::overflowing_add (2 samples, 0.02%)</title><rect x="20.1080%" y="501" width="0.0216%" height="15" fill="rgb(215,142,24)" fg:x="1861" fg:w="2"/><text x="20.3580%" y="511.50"></text></g><g><title>gb_rs::clock::Clock::tick (89 samples, 0.96%)</title><rect x="20.1297%" y="501" width="0.9616%" height="15" fill="rgb(250,187,7)" fg:x="1863" fg:w="89"/><text x="20.3797%" y="511.50"></text></g><g><title>gb_rs::memory::Memory::read_byte (1 samples, 0.01%)</title><rect x="21.0805%" y="485" width="0.0108%" height="15" fill="rgb(228,66,33)" fg:x="1951" fg:w="1"/><text x="21.3305%" y="495.50"></text></g><g><title>core::cmp::PartialOrd::le (144 samples, 1.56%)</title><rect x="21.1453%" y="485" width="1.5559%" height="15" fill="rgb(234,215,21)" fg:x="1957" fg:w="144"/><text x="21.3953%" y="495.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (103 samples, 1.11%)</title><rect x="21.5883%" y="469" width="1.1129%" height="15" fill="rgb(222,191,20)" fg:x="1998" fg:w="103"/><text x="21.8383%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (103 samples, 1.11%)</title><rect x="21.5883%" y="453" width="1.1129%" height="15" fill="rgb(245,79,54)" fg:x="1998" fg:w="103"/><text x="21.8383%" y="463.50"></text></g><g><title>gb_rs::cpu::CPU::display_registers (168 samples, 1.82%)</title><rect x="21.0913%" y="501" width="1.8152%" height="15" fill="rgb(240,10,37)" fg:x="1952" fg:w="168"/><text x="21.3413%" y="511.50">g..</text></g><g><title>log::max_level (19 samples, 0.21%)</title><rect x="22.7012%" y="485" width="0.2053%" height="15" fill="rgb(214,192,32)" fg:x="2101" fg:w="19"/><text x="22.9512%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (19 samples, 0.21%)</title><rect x="22.7012%" y="469" width="0.2053%" height="15" fill="rgb(209,36,54)" fg:x="2101" fg:w="19"/><text x="22.9512%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.21%)</title><rect x="22.7012%" y="453" width="0.2053%" height="15" fill="rgb(220,10,11)" fg:x="2101" fg:w="19"/><text x="22.9512%" y="463.50"></text></g><g><title>gb_rs::cpu::CPU::get_condition (3 samples, 0.03%)</title><rect x="22.9065%" y="501" width="0.0324%" height="15" fill="rgb(221,106,17)" fg:x="2120" fg:w="3"/><text x="23.1565%" y="511.50"></text></g><g><title>gb_rs::cpu::CPU::get_flag (3 samples, 0.03%)</title><rect x="22.9065%" y="485" width="0.0324%" height="15" fill="rgb(251,142,44)" fg:x="2120" fg:w="3"/><text x="23.1565%" y="495.50"></text></g><g><title>gb_rs::cpu::CPU::get_hl (2 samples, 0.02%)</title><rect x="22.9390%" y="501" width="0.0216%" height="15" fill="rgb(238,13,15)" fg:x="2123" fg:w="2"/><text x="23.1890%" y="511.50"></text></g><g><title>gb_rs::cpu::CPU::get_register16 (2 samples, 0.02%)</title><rect x="22.9390%" y="485" width="0.0216%" height="15" fill="rgb(208,107,27)" fg:x="2123" fg:w="2"/><text x="23.1890%" y="495.50"></text></g><g><title>gb_rs::utils::bytes2word (2 samples, 0.02%)</title><rect x="22.9390%" y="469" width="0.0216%" height="15" fill="rgb(205,136,37)" fg:x="2123" fg:w="2"/><text x="23.1890%" y="479.50"></text></g><g><title>&lt;u16 as gb_rs::utils::WordOP&gt;::set_high (2 samples, 0.02%)</title><rect x="22.9390%" y="453" width="0.0216%" height="15" fill="rgb(250,205,27)" fg:x="2123" fg:w="2"/><text x="23.1890%" y="463.50"></text></g><g><title>gb_rs::cpu::CPU::get_register (32 samples, 0.35%)</title><rect x="22.9606%" y="501" width="0.3458%" height="15" fill="rgb(210,80,43)" fg:x="2125" fg:w="32"/><text x="23.2106%" y="511.50"></text></g><g><title>gb_rs::cpu::CPU::get_register16 (5 samples, 0.05%)</title><rect x="23.3063%" y="501" width="0.0540%" height="15" fill="rgb(247,160,36)" fg:x="2157" fg:w="5"/><text x="23.5563%" y="511.50"></text></g><g><title>gb_rs::utils::bytes2word (2 samples, 0.02%)</title><rect x="23.3387%" y="485" width="0.0216%" height="15" fill="rgb(234,13,49)" fg:x="2160" fg:w="2"/><text x="23.5887%" y="495.50"></text></g><g><title>&lt;u16 as gb_rs::utils::WordOP&gt;::set_high (2 samples, 0.02%)</title><rect x="23.3387%" y="469" width="0.0216%" height="15" fill="rgb(234,122,0)" fg:x="2160" fg:w="2"/><text x="23.5887%" y="479.50"></text></g><g><title>gb_rs::cpu::CPU::half_carry_flag_add (10 samples, 0.11%)</title><rect x="23.3603%" y="501" width="0.1080%" height="15" fill="rgb(207,146,38)" fg:x="2162" fg:w="10"/><text x="23.6103%" y="511.50"></text></g><g><title>gb_rs::cpu::CPU::half_carry_flag_add16 (2 samples, 0.02%)</title><rect x="23.4684%" y="501" width="0.0216%" height="15" fill="rgb(207,177,25)" fg:x="2172" fg:w="2"/><text x="23.7184%" y="511.50"></text></g><g><title>gb_rs::cpu::CPU::half_carry_flag_sub (2 samples, 0.02%)</title><rect x="23.4900%" y="501" width="0.0216%" height="15" fill="rgb(211,178,42)" fg:x="2174" fg:w="2"/><text x="23.7400%" y="511.50"></text></g><g><title>gb_rs::cpu::CPU::push_pc_stack (12 samples, 0.13%)</title><rect x="23.5116%" y="501" width="0.1297%" height="15" fill="rgb(230,69,54)" fg:x="2176" fg:w="12"/><text x="23.7616%" y="511.50"></text></g><g><title>gb_rs::memory::Memory::write_byte (2 samples, 0.02%)</title><rect x="23.6197%" y="485" width="0.0216%" height="15" fill="rgb(214,135,41)" fg:x="2186" fg:w="2"/><text x="23.8697%" y="495.50"></text></g><g><title>gb_rs::memory::Memory::get_cartridge_type (1 samples, 0.01%)</title><rect x="23.6305%" y="469" width="0.0108%" height="15" fill="rgb(237,67,25)" fg:x="2187" fg:w="1"/><text x="23.8805%" y="479.50"></text></g><g><title>gb_rs::cpu::CPU::reset_flag (2 samples, 0.02%)</title><rect x="23.6413%" y="501" width="0.0216%" height="15" fill="rgb(222,189,50)" fg:x="2188" fg:w="2"/><text x="23.8913%" y="511.50"></text></g><g><title>gb_rs::cpu::CPU::set_flag (4 samples, 0.04%)</title><rect x="23.6629%" y="501" width="0.0432%" height="15" fill="rgb(245,148,34)" fg:x="2190" fg:w="4"/><text x="23.9129%" y="511.50"></text></g><g><title>gb_rs::cpu::CPU::set_register (8 samples, 0.09%)</title><rect x="23.7061%" y="501" width="0.0864%" height="15" fill="rgb(222,29,6)" fg:x="2194" fg:w="8"/><text x="23.9561%" y="511.50"></text></g><g><title>gb_rs::cpu::CPU::set_register16 (3 samples, 0.03%)</title><rect x="23.7925%" y="501" width="0.0324%" height="15" fill="rgb(221,189,43)" fg:x="2202" fg:w="3"/><text x="24.0425%" y="511.50"></text></g><g><title>gb_rs::cpu::CPU::zero_flag (11 samples, 0.12%)</title><rect x="23.8250%" y="501" width="0.1189%" height="15" fill="rgb(207,36,27)" fg:x="2205" fg:w="11"/><text x="24.0750%" y="511.50"></text></g><g><title>gb_rs::cpu::CPU::reset_flag (3 samples, 0.03%)</title><rect x="23.9114%" y="485" width="0.0324%" height="15" fill="rgb(217,90,24)" fg:x="2213" fg:w="3"/><text x="24.1614%" y="495.50"></text></g><g><title>core::cmp::PartialOrd::le (31 samples, 0.33%)</title><rect x="25.8671%" y="485" width="0.3350%" height="15" fill="rgb(224,66,35)" fg:x="2394" fg:w="31"/><text x="26.1171%" y="495.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (19 samples, 0.21%)</title><rect x="25.9968%" y="469" width="0.2053%" height="15" fill="rgb(221,13,50)" fg:x="2406" fg:w="19"/><text x="26.2468%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (19 samples, 0.21%)</title><rect x="25.9968%" y="453" width="0.2053%" height="15" fill="rgb(236,68,49)" fg:x="2406" fg:w="19"/><text x="26.2468%" y="463.50"></text></g><g><title>gb_rs::cpu::OpCode::matches (10 samples, 0.11%)</title><rect x="26.2021%" y="485" width="0.1080%" height="15" fill="rgb(229,146,28)" fg:x="2425" fg:w="10"/><text x="26.4521%" y="495.50"></text></g><g><title>&lt;u8 as gb_rs::utils::ByteOP&gt;::mask (10 samples, 0.11%)</title><rect x="26.2021%" y="469" width="0.1080%" height="15" fill="rgb(225,31,38)" fg:x="2425" fg:w="10"/><text x="26.4521%" y="479.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::BitAnd&lt;u8&gt;&gt;::bitand (10 samples, 0.11%)</title><rect x="26.2021%" y="453" width="0.1080%" height="15" fill="rgb(250,208,3)" fg:x="2425" fg:w="10"/><text x="26.4521%" y="463.50"></text></g><g><title>&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (10 samples, 0.11%)</title><rect x="26.2021%" y="437" width="0.1080%" height="15" fill="rgb(246,54,23)" fg:x="2425" fg:w="10"/><text x="26.4521%" y="447.50"></text></g><g><title>gb_rs::cpu::Register16::get_rr (1 samples, 0.01%)</title><rect x="26.3101%" y="485" width="0.0108%" height="15" fill="rgb(243,76,11)" fg:x="2435" fg:w="1"/><text x="26.5601%" y="495.50"></text></g><g><title>gb_rs::cpu::Register::get_r (7 samples, 0.08%)</title><rect x="26.3209%" y="485" width="0.0756%" height="15" fill="rgb(245,21,50)" fg:x="2436" fg:w="7"/><text x="26.5709%" y="495.50"></text></g><g><title>gb_rs::cpu::Register::get_rr (6 samples, 0.06%)</title><rect x="26.3965%" y="485" width="0.0648%" height="15" fill="rgb(228,9,43)" fg:x="2443" fg:w="6"/><text x="26.6465%" y="495.50"></text></g><g><title>gb_rs::cpu::Register::get_r (5 samples, 0.05%)</title><rect x="26.4073%" y="469" width="0.0540%" height="15" fill="rgb(208,100,47)" fg:x="2444" fg:w="5"/><text x="26.6573%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.01%)</title><rect x="26.4722%" y="469" width="0.0108%" height="15" fill="rgb(232,26,8)" fg:x="2450" fg:w="1"/><text x="26.7222%" y="479.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="26.4722%" y="453" width="0.0108%" height="15" fill="rgb(216,166,38)" fg:x="2450" fg:w="1"/><text x="26.7222%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.01%)</title><rect x="26.4722%" y="437" width="0.0108%" height="15" fill="rgb(251,202,51)" fg:x="2450" fg:w="1"/><text x="26.7222%" y="447.50"></text></g><g><title>gb_rs::cpu::Register::get_r (2 samples, 0.02%)</title><rect x="26.4830%" y="469" width="0.0216%" height="15" fill="rgb(254,216,34)" fg:x="2451" fg:w="2"/><text x="26.7330%" y="479.50"></text></g><g><title>gb_rs::cpu::SizedInstruction::decode_cb (5 samples, 0.05%)</title><rect x="26.4614%" y="485" width="0.0540%" height="15" fill="rgb(251,32,27)" fg:x="2449" fg:w="5"/><text x="26.7114%" y="495.50"></text></g><g><title>gb_rs::memory::Memory::read_byte (1 samples, 0.01%)</title><rect x="26.5046%" y="469" width="0.0108%" height="15" fill="rgb(208,127,28)" fg:x="2453" fg:w="1"/><text x="26.7546%" y="479.50"></text></g><g><title>gb_rs::memory::Memory::read_byte (16 samples, 0.17%)</title><rect x="26.5154%" y="485" width="0.1729%" height="15" fill="rgb(224,137,22)" fg:x="2454" fg:w="16"/><text x="26.7654%" y="495.50"></text></g><g><title>gb_rs::cpu::SizedInstruction::decode (256 samples, 2.77%)</title><rect x="23.9438%" y="501" width="2.7661%" height="15" fill="rgb(254,70,32)" fg:x="2216" fg:w="256"/><text x="24.1938%" y="511.50">gb..</text></g><g><title>gb_rs::memory::Memory::read_word (2 samples, 0.02%)</title><rect x="26.6883%" y="485" width="0.0216%" height="15" fill="rgb(229,75,37)" fg:x="2470" fg:w="2"/><text x="26.9383%" y="495.50"></text></g><g><title>gb_rs::utils::bytes2word (1 samples, 0.01%)</title><rect x="26.6991%" y="469" width="0.0108%" height="15" fill="rgb(252,64,23)" fg:x="2471" fg:w="1"/><text x="26.9491%" y="479.50"></text></g><g><title>&lt;u16 as gb_rs::utils::WordOP&gt;::set_high (1 samples, 0.01%)</title><rect x="26.6991%" y="453" width="0.0108%" height="15" fill="rgb(232,162,48)" fg:x="2471" fg:w="1"/><text x="26.9491%" y="463.50"></text></g><g><title>gb_rs::memory::Memory::read_byte (7 samples, 0.08%)</title><rect x="26.7099%" y="501" width="0.0756%" height="15" fill="rgb(246,160,12)" fg:x="2472" fg:w="7"/><text x="26.9599%" y="511.50"></text></g><g><title>gb_rs::memory::Memory::write_byte (7 samples, 0.08%)</title><rect x="26.7855%" y="501" width="0.0756%" height="15" fill="rgb(247,166,0)" fg:x="2479" fg:w="7"/><text x="27.0355%" y="511.50"></text></g><g><title>gb_rs::memory::Memory::get_cartridge_type (4 samples, 0.04%)</title><rect x="26.8179%" y="485" width="0.0432%" height="15" fill="rgb(249,219,21)" fg:x="2482" fg:w="4"/><text x="27.0679%" y="495.50"></text></g><g><title>gb_rs::utils::bytes2word (8 samples, 0.09%)</title><rect x="26.8612%" y="501" width="0.0864%" height="15" fill="rgb(205,209,3)" fg:x="2486" fg:w="8"/><text x="27.1112%" y="511.50"></text></g><g><title>&lt;u16 as gb_rs::utils::WordOP&gt;::set_high (1 samples, 0.01%)</title><rect x="26.9368%" y="485" width="0.0108%" height="15" fill="rgb(243,44,1)" fg:x="2493" fg:w="1"/><text x="27.1868%" y="495.50"></text></g><g><title>gb_rs::cpu::CPU::execute (914 samples, 9.88%)</title><rect x="17.0827%" y="517" width="9.8757%" height="15" fill="rgb(206,159,16)" fg:x="1581" fg:w="914"/><text x="17.3327%" y="527.50">gb_rs::cpu::CP..</text></g><g><title>log::max_level (1 samples, 0.01%)</title><rect x="26.9476%" y="501" width="0.0108%" height="15" fill="rgb(244,77,30)" fg:x="2494" fg:w="1"/><text x="27.1976%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="26.9476%" y="485" width="0.0108%" height="15" fill="rgb(218,69,12)" fg:x="2494" fg:w="1"/><text x="27.1976%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="26.9476%" y="469" width="0.0108%" height="15" fill="rgb(212,87,7)" fg:x="2494" fg:w="1"/><text x="27.1976%" y="479.50"></text></g><g><title>gb_rs::cpu::CPU::push_pc_stack (1 samples, 0.01%)</title><rect x="27.3582%" y="501" width="0.0108%" height="15" fill="rgb(245,114,25)" fg:x="2532" fg:w="1"/><text x="27.6082%" y="511.50"></text></g><g><title>std::sys::unix::time::Timespec::now (1 samples, 0.01%)</title><rect x="27.3582%" y="485" width="0.0108%" height="15" fill="rgb(210,61,42)" fg:x="2532" fg:w="1"/><text x="27.6082%" y="495.50"></text></g><g><title>gb_rs::memory::Memory::read_byte (3 samples, 0.03%)</title><rect x="27.3690%" y="501" width="0.0324%" height="15" fill="rgb(211,52,33)" fg:x="2533" fg:w="3"/><text x="27.6190%" y="511.50"></text></g><g><title>gb_rs::cpu::CPU::handle_interrupts (48 samples, 0.52%)</title><rect x="26.9584%" y="517" width="0.5186%" height="15" fill="rgb(234,58,33)" fg:x="2495" fg:w="48"/><text x="27.2084%" y="527.50"></text></g><g><title>gb_rs::memory::Memory::write_byte (7 samples, 0.08%)</title><rect x="27.4014%" y="501" width="0.0756%" height="15" fill="rgb(220,115,36)" fg:x="2536" fg:w="7"/><text x="27.6514%" y="511.50"></text></g><g><title>gb_rs::cpu::CPU::ime_step (27 samples, 0.29%)</title><rect x="27.4770%" y="517" width="0.2917%" height="15" fill="rgb(243,153,54)" fg:x="2543" fg:w="27"/><text x="27.7270%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (4 samples, 0.04%)</title><rect x="28.4603%" y="485" width="0.0432%" height="15" fill="rgb(251,47,18)" fg:x="2634" fg:w="4"/><text x="28.7103%" y="495.50"></text></g><g><title>&lt;u8 as gb_rs::utils::ByteOP&gt;::get_high_nibble (2 samples, 0.02%)</title><rect x="30.6861%" y="469" width="0.0216%" height="15" fill="rgb(242,102,42)" fg:x="2840" fg:w="2"/><text x="30.9361%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::le (19 samples, 0.21%)</title><rect x="30.7077%" y="469" width="0.2053%" height="15" fill="rgb(234,31,38)" fg:x="2842" fg:w="19"/><text x="30.9577%" y="479.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (14 samples, 0.15%)</title><rect x="30.7618%" y="453" width="0.1513%" height="15" fill="rgb(221,117,51)" fg:x="2847" fg:w="14"/><text x="31.0118%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (14 samples, 0.15%)</title><rect x="30.7618%" y="437" width="0.1513%" height="15" fill="rgb(212,20,18)" fg:x="2847" fg:w="14"/><text x="31.0118%" y="447.50"></text></g><g><title>gb_rs::cpu::OpCode::matches (15 samples, 0.16%)</title><rect x="30.9130%" y="469" width="0.1621%" height="15" fill="rgb(245,133,36)" fg:x="2861" fg:w="15"/><text x="31.1630%" y="479.50"></text></g><g><title>&lt;u8 as gb_rs::utils::ByteOP&gt;::mask (15 samples, 0.16%)</title><rect x="30.9130%" y="453" width="0.1621%" height="15" fill="rgb(212,6,19)" fg:x="2861" fg:w="15"/><text x="31.1630%" y="463.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::BitAnd&lt;u8&gt;&gt;::bitand (15 samples, 0.16%)</title><rect x="30.9130%" y="437" width="0.1621%" height="15" fill="rgb(218,1,36)" fg:x="2861" fg:w="15"/><text x="31.1630%" y="447.50"></text></g><g><title>&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (15 samples, 0.16%)</title><rect x="30.9130%" y="421" width="0.1621%" height="15" fill="rgb(246,84,54)" fg:x="2861" fg:w="15"/><text x="31.1630%" y="431.50"></text></g><g><title>gb_rs::cpu::Register16::get_rr (6 samples, 0.06%)</title><rect x="31.0751%" y="469" width="0.0648%" height="15" fill="rgb(242,110,6)" fg:x="2876" fg:w="6"/><text x="31.3251%" y="479.50"></text></g><g><title>gb_rs::cpu::Register::get_r (16 samples, 0.17%)</title><rect x="31.1399%" y="469" width="0.1729%" height="15" fill="rgb(214,47,5)" fg:x="2882" fg:w="16"/><text x="31.3899%" y="479.50"></text></g><g><title>&lt;u8 as gb_rs::utils::ByteOP&gt;::mask (3 samples, 0.03%)</title><rect x="31.2804%" y="453" width="0.0324%" height="15" fill="rgb(218,159,25)" fg:x="2895" fg:w="3"/><text x="31.5304%" y="463.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::BitAnd&lt;u8&gt;&gt;::bitand (3 samples, 0.03%)</title><rect x="31.2804%" y="437" width="0.0324%" height="15" fill="rgb(215,211,28)" fg:x="2895" fg:w="3"/><text x="31.5304%" y="447.50"></text></g><g><title>&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (3 samples, 0.03%)</title><rect x="31.2804%" y="421" width="0.0324%" height="15" fill="rgb(238,59,32)" fg:x="2895" fg:w="3"/><text x="31.5304%" y="431.50"></text></g><g><title>gb_rs::cpu::Register::get_rr (6 samples, 0.06%)</title><rect x="31.3128%" y="469" width="0.0648%" height="15" fill="rgb(226,82,3)" fg:x="2898" fg:w="6"/><text x="31.5628%" y="479.50"></text></g><g><title>gb_rs::cpu::Register::get_r (3 samples, 0.03%)</title><rect x="31.3452%" y="453" width="0.0324%" height="15" fill="rgb(240,164,32)" fg:x="2901" fg:w="3"/><text x="31.5952%" y="463.50"></text></g><g><title>gb_rs::cpu::SizedInstruction::decode_cb (2 samples, 0.02%)</title><rect x="31.3776%" y="469" width="0.0216%" height="15" fill="rgb(232,46,7)" fg:x="2904" fg:w="2"/><text x="31.6276%" y="479.50"></text></g><g><title>gb_rs::memory::Memory::read_byte (17 samples, 0.18%)</title><rect x="31.3992%" y="469" width="0.1837%" height="15" fill="rgb(229,129,53)" fg:x="2906" fg:w="17"/><text x="31.6492%" y="479.50"></text></g><g><title>gb_rs::memory::Memory::read_word (2 samples, 0.02%)</title><rect x="31.5829%" y="469" width="0.0216%" height="15" fill="rgb(234,188,29)" fg:x="2923" fg:w="2"/><text x="31.8329%" y="479.50"></text></g><g><title>gb_rs::utils::bytes2word (1 samples, 0.01%)</title><rect x="31.5937%" y="453" width="0.0108%" height="15" fill="rgb(246,141,4)" fg:x="2924" fg:w="1"/><text x="31.8437%" y="463.50"></text></g><g><title>&lt;u16 as gb_rs::utils::WordOP&gt;::set_high (1 samples, 0.01%)</title><rect x="31.5937%" y="437" width="0.0108%" height="15" fill="rgb(229,23,39)" fg:x="2924" fg:w="1"/><text x="31.8437%" y="447.50"></text></g><g><title>gb_rs::cpu::SizedInstruction::decode (296 samples, 3.20%)</title><rect x="28.5035%" y="485" width="3.1983%" height="15" fill="rgb(206,12,3)" fg:x="2638" fg:w="296"/><text x="28.7535%" y="495.50">gb_..</text></g><g><title>log::max_level (9 samples, 0.10%)</title><rect x="31.6045%" y="469" width="0.0972%" height="15" fill="rgb(252,226,20)" fg:x="2925" fg:w="9"/><text x="31.8545%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (9 samples, 0.10%)</title><rect x="31.6045%" y="453" width="0.0972%" height="15" fill="rgb(216,123,35)" fg:x="2925" fg:w="9"/><text x="31.8545%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.10%)</title><rect x="31.6045%" y="437" width="0.0972%" height="15" fill="rgb(212,68,40)" fg:x="2925" fg:w="9"/><text x="31.8545%" y="447.50"></text></g><g><title>gb_rs::gb::Debugger::check_pause (372 samples, 4.02%)</title><rect x="27.7688%" y="517" width="4.0194%" height="15" fill="rgb(254,125,32)" fg:x="2570" fg:w="372"/><text x="28.0188%" y="527.50">gb_r..</text></g><g><title>gb_rs::gb::Debugger::check_breakpoints (346 samples, 3.74%)</title><rect x="28.0497%" y="501" width="3.7385%" height="15" fill="rgb(253,97,22)" fg:x="2596" fg:w="346"/><text x="28.2997%" y="511.50">gb_r..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (8 samples, 0.09%)</title><rect x="31.7018%" y="485" width="0.0864%" height="15" fill="rgb(241,101,14)" fg:x="2934" fg:w="8"/><text x="31.9518%" y="495.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (8 samples, 0.09%)</title><rect x="31.7018%" y="469" width="0.0864%" height="15" fill="rgb(238,103,29)" fg:x="2934" fg:w="8"/><text x="31.9518%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (8 samples, 0.09%)</title><rect x="31.7018%" y="453" width="0.0864%" height="15" fill="rgb(233,195,47)" fg:x="2934" fg:w="8"/><text x="31.9518%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.09%)</title><rect x="31.7018%" y="437" width="0.0864%" height="15" fill="rgb(246,218,30)" fg:x="2934" fg:w="8"/><text x="31.9518%" y="447.50"></text></g><g><title>core::cmp::PartialEq::ne (40 samples, 0.43%)</title><rect x="34.4354%" y="501" width="0.4322%" height="15" fill="rgb(219,145,47)" fg:x="3187" fg:w="40"/><text x="34.6854%" y="511.50"></text></g><g><title>&lt;gb_rs::graphics::PPUMode as core::cmp::PartialEq&gt;::eq (34 samples, 0.37%)</title><rect x="34.5003%" y="485" width="0.3674%" height="15" fill="rgb(243,12,26)" fg:x="3193" fg:w="34"/><text x="34.7503%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;gb_rs::graphics::BgFIFO&gt; (1 samples, 0.01%)</title><rect x="34.8676%" y="501" width="0.0108%" height="15" fill="rgb(214,87,16)" fg:x="3227" fg:w="1"/><text x="35.1176%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;gb_rs::graphics::Pixel&gt;&gt; (1 samples, 0.01%)</title><rect x="34.8676%" y="485" width="0.0108%" height="15" fill="rgb(208,99,42)" fg:x="3227" fg:w="1"/><text x="35.1176%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;gb_rs::graphics::Pixel&gt;&gt; (1 samples, 0.01%)</title><rect x="34.8676%" y="469" width="0.0108%" height="15" fill="rgb(253,99,2)" fg:x="3227" fg:w="1"/><text x="35.1176%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="34.8676%" y="453" width="0.0108%" height="15" fill="rgb(220,168,23)" fg:x="3227" fg:w="1"/><text x="35.1176%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="34.8676%" y="437" width="0.0108%" height="15" fill="rgb(242,38,24)" fg:x="3227" fg:w="1"/><text x="35.1176%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="34.8676%" y="421" width="0.0108%" height="15" fill="rgb(225,182,9)" fg:x="3227" fg:w="1"/><text x="35.1176%" y="431.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="34.8676%" y="405" width="0.0108%" height="15" fill="rgb(243,178,37)" fg:x="3227" fg:w="1"/><text x="35.1176%" y="415.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="34.8676%" y="389" width="0.0108%" height="15" fill="rgb(232,139,19)" fg:x="3227" fg:w="1"/><text x="35.1176%" y="399.50"></text></g><g><title>_int_free_merge_chunk (1 samples, 0.01%)</title><rect x="34.8676%" y="373" width="0.0108%" height="15" fill="rgb(225,201,24)" fg:x="3227" fg:w="1"/><text x="35.1176%" y="383.50"></text></g><g><title>_int_free_create_chunk (1 samples, 0.01%)</title><rect x="34.8676%" y="357" width="0.0108%" height="15" fill="rgb(221,47,46)" fg:x="3227" fg:w="1"/><text x="35.1176%" y="367.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="34.8676%" y="341" width="0.0108%" height="15" fill="rgb(249,23,13)" fg:x="3227" fg:w="1"/><text x="35.1176%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;gb_rs::graphics::ObjFIFO&gt; (2 samples, 0.02%)</title><rect x="34.8784%" y="501" width="0.0216%" height="15" fill="rgb(219,9,5)" fg:x="3228" fg:w="2"/><text x="35.1284%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;gb_rs::graphics::Pixel&gt;&gt; (2 samples, 0.02%)</title><rect x="34.8784%" y="485" width="0.0216%" height="15" fill="rgb(254,171,16)" fg:x="3228" fg:w="2"/><text x="35.1284%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;gb_rs::graphics::Pixel&gt;&gt; (2 samples, 0.02%)</title><rect x="34.8784%" y="469" width="0.0216%" height="15" fill="rgb(230,171,20)" fg:x="3228" fg:w="2"/><text x="35.1284%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="34.8784%" y="453" width="0.0216%" height="15" fill="rgb(210,71,41)" fg:x="3228" fg:w="2"/><text x="35.1284%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="34.8784%" y="437" width="0.0216%" height="15" fill="rgb(206,173,20)" fg:x="3228" fg:w="2"/><text x="35.1284%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="34.8784%" y="421" width="0.0216%" height="15" fill="rgb(233,88,34)" fg:x="3228" fg:w="2"/><text x="35.1284%" y="431.50"></text></g><g><title>__free (2 samples, 0.02%)</title><rect x="34.8784%" y="405" width="0.0216%" height="15" fill="rgb(223,209,46)" fg:x="3228" fg:w="2"/><text x="35.1284%" y="415.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="34.8784%" y="389" width="0.0216%" height="15" fill="rgb(250,43,18)" fg:x="3228" fg:w="2"/><text x="35.1284%" y="399.50"></text></g><g><title>_int_free_merge_chunk (2 samples, 0.02%)</title><rect x="34.8784%" y="373" width="0.0216%" height="15" fill="rgb(208,13,10)" fg:x="3228" fg:w="2"/><text x="35.1284%" y="383.50"></text></g><g><title>_int_free_create_chunk (1 samples, 0.01%)</title><rect x="34.8892%" y="357" width="0.0108%" height="15" fill="rgb(212,200,36)" fg:x="3229" fg:w="1"/><text x="35.1392%" y="367.50"></text></g><g><title>SDL_AtomicAdd_REAL (1 samples, 0.01%)</title><rect x="34.9001%" y="437" width="0.0108%" height="15" fill="rgb(225,90,30)" fg:x="3230" fg:w="1"/><text x="35.1501%" y="447.50"></text></g><g><title>_mesa_make_texture_handles_non_resident (1 samples, 0.01%)</title><rect x="34.9325%" y="421" width="0.0108%" height="15" fill="rgb(236,182,39)" fg:x="3233" fg:w="1"/><text x="35.1825%" y="431.50"></text></g><g><title>mtx_lock (1 samples, 0.01%)</title><rect x="34.9325%" y="405" width="0.0108%" height="15" fill="rgb(212,144,35)" fg:x="3233" fg:w="1"/><text x="35.1825%" y="415.50"></text></g><g><title>pthread_mutex_lock@plt (1 samples, 0.01%)</title><rect x="34.9325%" y="389" width="0.0108%" height="15" fill="rgb(228,63,44)" fg:x="3233" fg:w="1"/><text x="35.1825%" y="399.50"></text></g><g><title>GL_DestroyTexture (5 samples, 0.05%)</title><rect x="34.9001%" y="453" width="0.0540%" height="15" fill="rgb(228,109,6)" fg:x="3230" fg:w="5"/><text x="35.1501%" y="463.50"></text></g><g><title>delete_textures.part.0 (4 samples, 0.04%)</title><rect x="34.9109%" y="437" width="0.0432%" height="15" fill="rgb(238,117,24)" fg:x="3231" fg:w="4"/><text x="35.1609%" y="447.50"></text></g><g><title>st_texture_release_all_sampler_views.part.0 (1 samples, 0.01%)</title><rect x="34.9433%" y="421" width="0.0108%" height="15" fill="rgb(242,26,26)" fg:x="3234" fg:w="1"/><text x="35.1933%" y="431.50"></text></g><g><title>SDL_DestroyTexture_REAL.part.0 (6 samples, 0.06%)</title><rect x="34.9001%" y="469" width="0.0648%" height="15" fill="rgb(221,92,48)" fg:x="3230" fg:w="6"/><text x="35.1501%" y="479.50"></text></g><g><title>SDL_FreeSurface_REAL (1 samples, 0.01%)</title><rect x="34.9541%" y="453" width="0.0108%" height="15" fill="rgb(209,209,32)" fg:x="3235" fg:w="1"/><text x="35.2041%" y="463.50"></text></g><g><title>SDL_DestroyTexture_REAL.part.0 (7 samples, 0.08%)</title><rect x="34.9001%" y="485" width="0.0756%" height="15" fill="rgb(221,70,22)" fg:x="3230" fg:w="7"/><text x="35.1501%" y="495.50"></text></g><g><title>SDL_free_REAL (1 samples, 0.01%)</title><rect x="34.9649%" y="469" width="0.0108%" height="15" fill="rgb(248,145,5)" fg:x="3236" fg:w="1"/><text x="35.2149%" y="479.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="34.9649%" y="453" width="0.0108%" height="15" fill="rgb(226,116,26)" fg:x="3236" fg:w="1"/><text x="35.2149%" y="463.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="34.9649%" y="437" width="0.0108%" height="15" fill="rgb(244,5,17)" fg:x="3236" fg:w="1"/><text x="35.2149%" y="447.50"></text></g><g><title>_int_free_merge_chunk (1 samples, 0.01%)</title><rect x="34.9649%" y="421" width="0.0108%" height="15" fill="rgb(252,159,33)" fg:x="3236" fg:w="1"/><text x="35.2149%" y="431.50"></text></g><g><title>_int_free_create_chunk (1 samples, 0.01%)</title><rect x="34.9649%" y="405" width="0.0108%" height="15" fill="rgb(206,71,0)" fg:x="3236" fg:w="1"/><text x="35.2149%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;sdl2::render::Texture&gt; (8 samples, 0.09%)</title><rect x="34.9001%" y="501" width="0.0864%" height="15" fill="rgb(233,118,54)" fg:x="3230" fg:w="8"/><text x="35.1501%" y="511.50"></text></g><g><title>SDL_free_REAL (1 samples, 0.01%)</title><rect x="34.9757%" y="485" width="0.0108%" height="15" fill="rgb(234,83,48)" fg:x="3237" fg:w="1"/><text x="35.2257%" y="495.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="34.9757%" y="469" width="0.0108%" height="15" fill="rgb(228,3,54)" fg:x="3237" fg:w="1"/><text x="35.2257%" y="479.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="39.3409%" y="469" width="0.0108%" height="15" fill="rgb(226,155,13)" fg:x="3641" fg:w="1"/><text x="39.5909%" y="479.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::truncate (1 samples, 0.01%)</title><rect x="39.3409%" y="453" width="0.0108%" height="15" fill="rgb(241,28,37)" fg:x="3641" fg:w="1"/><text x="39.5909%" y="463.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::copy_slice (7 samples, 0.08%)</title><rect x="39.4922%" y="421" width="0.0756%" height="15" fill="rgb(233,93,10)" fg:x="3655" fg:w="7"/><text x="39.7422%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.08%)</title><rect x="39.4922%" y="405" width="0.0756%" height="15" fill="rgb(225,113,19)" fg:x="3655" fg:w="7"/><text x="39.7422%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.06%)</title><rect x="39.5030%" y="389" width="0.0648%" height="15" fill="rgb(241,2,18)" fg:x="3656" fg:w="6"/><text x="39.7530%" y="399.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="39.5678%" y="421" width="0.0108%" height="15" fill="rgb(228,207,21)" fg:x="3662" fg:w="1"/><text x="39.8178%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="39.5678%" y="405" width="0.0108%" height="15" fill="rgb(213,211,35)" fg:x="3662" fg:w="1"/><text x="39.8178%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="39.5678%" y="389" width="0.0108%" height="15" fill="rgb(209,83,10)" fg:x="3662" fg:w="1"/><text x="39.8178%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="39.5678%" y="373" width="0.0108%" height="15" fill="rgb(209,164,1)" fg:x="3662" fg:w="1"/><text x="39.8178%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="39.5678%" y="357" width="0.0108%" height="15" fill="rgb(213,184,43)" fg:x="3662" fg:w="1"/><text x="39.8178%" y="367.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (13 samples, 0.14%)</title><rect x="39.4489%" y="453" width="0.1405%" height="15" fill="rgb(231,61,34)" fg:x="3651" fg:w="13"/><text x="39.6989%" y="463.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.14%)</title><rect x="39.4489%" y="437" width="0.1405%" height="15" fill="rgb(235,75,3)" fg:x="3651" fg:w="13"/><text x="39.6989%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (1 samples, 0.01%)</title><rect x="39.5786%" y="421" width="0.0108%" height="15" fill="rgb(220,106,47)" fg:x="3663" fg:w="1"/><text x="39.8286%" y="431.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (1 samples, 0.01%)</title><rect x="39.5786%" y="405" width="0.0108%" height="15" fill="rgb(210,196,33)" fg:x="3663" fg:w="1"/><text x="39.8286%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.01%)</title><rect x="39.5786%" y="389" width="0.0108%" height="15" fill="rgb(229,154,42)" fg:x="3663" fg:w="1"/><text x="39.8286%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.01%)</title><rect x="39.5786%" y="373" width="0.0108%" height="15" fill="rgb(228,114,26)" fg:x="3663" fg:w="1"/><text x="39.8286%" y="383.50"></text></g><g><title>__memcpy_avx_unaligned_erms (50 samples, 0.54%)</title><rect x="41.3506%" y="437" width="0.5402%" height="15" fill="rgb(208,144,1)" fg:x="3827" fg:w="50"/><text x="41.6006%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="41.8909%" y="437" width="0.0108%" height="15" fill="rgb(239,112,37)" fg:x="3877" fg:w="1"/><text x="42.1409%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="41.8909%" y="421" width="0.0108%" height="15" fill="rgb(210,96,50)" fg:x="3877" fg:w="1"/><text x="42.1409%" y="431.50"></text></g><g><title>gb_rs::graphics::Tile::fetch_tile (217 samples, 2.34%)</title><rect x="39.5894%" y="453" width="2.3447%" height="15" fill="rgb(222,178,2)" fg:x="3664" fg:w="217"/><text x="39.8394%" y="463.50">g..</text></g><g><title>gb_rs::memory::Memory::read_byte (3 samples, 0.03%)</title><rect x="41.9017%" y="437" width="0.0324%" height="15" fill="rgb(226,74,18)" fg:x="3878" fg:w="3"/><text x="42.1517%" y="447.50"></text></g><g><title>&lt;gb_rs::graphics::BgFIFO as gb_rs::graphics::FIFO&gt;::next_line (246 samples, 2.66%)</title><rect x="39.3085%" y="485" width="2.6580%" height="15" fill="rgb(225,67,54)" fg:x="3638" fg:w="246"/><text x="39.5585%" y="495.50">&lt;g..</text></g><g><title>gb_rs::graphics::BgFIFO::fetch (242 samples, 2.61%)</title><rect x="39.3517%" y="469" width="2.6148%" height="15" fill="rgb(251,92,32)" fg:x="3642" fg:w="242"/><text x="39.6017%" y="479.50">gb..</text></g><g><title>gb_rs::memory::Memory::read_byte (3 samples, 0.03%)</title><rect x="41.9341%" y="453" width="0.0324%" height="15" fill="rgb(228,149,22)" fg:x="3881" fg:w="3"/><text x="42.1841%" y="463.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::ptr (13 samples, 0.14%)</title><rect x="43.9438%" y="437" width="0.1405%" height="15" fill="rgb(243,54,13)" fg:x="4067" fg:w="13"/><text x="44.1938%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (13 samples, 0.14%)</title><rect x="43.9438%" y="421" width="0.1405%" height="15" fill="rgb(243,180,28)" fg:x="4067" fg:w="13"/><text x="44.1938%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (9 samples, 0.10%)</title><rect x="44.0843%" y="437" width="0.0972%" height="15" fill="rgb(208,167,24)" fg:x="4080" fg:w="9"/><text x="44.3343%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (42 samples, 0.45%)</title><rect x="43.9438%" y="453" width="0.4538%" height="15" fill="rgb(245,73,45)" fg:x="4067" fg:w="42"/><text x="44.1938%" y="463.50"></text></g><g><title>core::ptr::read (20 samples, 0.22%)</title><rect x="44.1815%" y="437" width="0.2161%" height="15" fill="rgb(237,203,48)" fg:x="4089" fg:w="20"/><text x="44.4315%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (10 samples, 0.11%)</title><rect x="44.3976%" y="453" width="0.1080%" height="15" fill="rgb(211,197,16)" fg:x="4109" fg:w="10"/><text x="44.6476%" y="463.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (47 samples, 0.51%)</title><rect x="44.5057%" y="421" width="0.5078%" height="15" fill="rgb(243,99,51)" fg:x="4119" fg:w="47"/><text x="44.7557%" y="431.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (156 samples, 1.69%)</title><rect x="43.3928%" y="469" width="1.6856%" height="15" fill="rgb(215,123,29)" fg:x="4016" fg:w="156"/><text x="43.6428%" y="479.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (53 samples, 0.57%)</title><rect x="44.5057%" y="453" width="0.5727%" height="15" fill="rgb(239,186,37)" fg:x="4119" fg:w="53"/><text x="44.7557%" y="463.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (53 samples, 0.57%)</title><rect x="44.5057%" y="437" width="0.5727%" height="15" fill="rgb(252,136,39)" fg:x="4119" fg:w="53"/><text x="44.7557%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (6 samples, 0.06%)</title><rect x="45.0135%" y="421" width="0.0648%" height="15" fill="rgb(223,213,32)" fg:x="4166" fg:w="6"/><text x="45.2635%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (58 samples, 0.63%)</title><rect x="45.0783%" y="469" width="0.6267%" height="15" fill="rgb(233,115,5)" fg:x="4172" fg:w="58"/><text x="45.3283%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (104 samples, 1.12%)</title><rect x="46.8612%" y="405" width="1.1237%" height="15" fill="rgb(207,226,44)" fg:x="4337" fg:w="104"/><text x="47.1112%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (96 samples, 1.04%)</title><rect x="46.9476%" y="389" width="1.0373%" height="15" fill="rgb(208,126,0)" fg:x="4345" fg:w="96"/><text x="47.1976%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (9 samples, 0.10%)</title><rect x="47.9849%" y="405" width="0.0972%" height="15" fill="rgb(244,66,21)" fg:x="4441" fg:w="9"/><text x="48.2349%" y="415.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::copy_slice (125 samples, 1.35%)</title><rect x="46.8395%" y="421" width="1.3506%" height="15" fill="rgb(222,97,12)" fg:x="4335" fg:w="125"/><text x="47.0895%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (10 samples, 0.11%)</title><rect x="48.0821%" y="405" width="0.1080%" height="15" fill="rgb(219,213,19)" fg:x="4450" fg:w="10"/><text x="48.3321%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (10 samples, 0.11%)</title><rect x="48.0821%" y="389" width="0.1080%" height="15" fill="rgb(252,169,30)" fg:x="4450" fg:w="10"/><text x="48.3321%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (10 samples, 0.11%)</title><rect x="48.0821%" y="373" width="0.1080%" height="15" fill="rgb(206,32,51)" fg:x="4450" fg:w="10"/><text x="48.3321%" y="383.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::reserve (5 samples, 0.05%)</title><rect x="48.1902%" y="421" width="0.0540%" height="15" fill="rgb(250,172,42)" fg:x="4460" fg:w="5"/><text x="48.4402%" y="431.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::capacity (3 samples, 0.03%)</title><rect x="48.2118%" y="405" width="0.0324%" height="15" fill="rgb(209,34,43)" fg:x="4462" fg:w="3"/><text x="48.4618%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3 samples, 0.03%)</title><rect x="48.2118%" y="389" width="0.0324%" height="15" fill="rgb(223,11,35)" fg:x="4462" fg:w="3"/><text x="48.4618%" y="399.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (3 samples, 0.03%)</title><rect x="48.2442%" y="421" width="0.0324%" height="15" fill="rgb(251,219,26)" fg:x="4465" fg:w="3"/><text x="48.4942%" y="431.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (3 samples, 0.03%)</title><rect x="48.2442%" y="405" width="0.0324%" height="15" fill="rgb(231,119,3)" fg:x="4465" fg:w="3"/><text x="48.4942%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="48.2442%" y="389" width="0.0324%" height="15" fill="rgb(216,97,11)" fg:x="4465" fg:w="3"/><text x="48.4942%" y="399.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (160 samples, 1.73%)</title><rect x="46.6343%" y="437" width="1.7288%" height="15" fill="rgb(223,59,9)" fg:x="4316" fg:w="160"/><text x="46.8843%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (8 samples, 0.09%)</title><rect x="48.2766%" y="421" width="0.0864%" height="15" fill="rgb(233,93,31)" fg:x="4468" fg:w="8"/><text x="48.5266%" y="431.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (8 samples, 0.09%)</title><rect x="48.2766%" y="405" width="0.0864%" height="15" fill="rgb(239,81,33)" fg:x="4468" fg:w="8"/><text x="48.5266%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (8 samples, 0.09%)</title><rect x="48.2766%" y="389" width="0.0864%" height="15" fill="rgb(213,120,34)" fg:x="4468" fg:w="8"/><text x="48.5266%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (8 samples, 0.09%)</title><rect x="48.2766%" y="373" width="0.0864%" height="15" fill="rgb(243,49,53)" fg:x="4468" fg:w="8"/><text x="48.5266%" y="383.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (162 samples, 1.75%)</title><rect x="46.6343%" y="453" width="1.7504%" height="15" fill="rgb(247,216,33)" fg:x="4316" fg:w="162"/><text x="46.8843%" y="463.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (2 samples, 0.02%)</title><rect x="48.3630%" y="437" width="0.0216%" height="15" fill="rgb(226,26,14)" fg:x="4476" fg:w="2"/><text x="48.6130%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.02%)</title><rect x="48.3630%" y="421" width="0.0216%" height="15" fill="rgb(215,49,53)" fg:x="4476" fg:w="2"/><text x="48.6130%" y="431.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="48.3630%" y="405" width="0.0216%" height="15" fill="rgb(245,162,40)" fg:x="4476" fg:w="2"/><text x="48.6130%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.02%)</title><rect x="48.3630%" y="389" width="0.0216%" height="15" fill="rgb(229,68,17)" fg:x="4476" fg:w="2"/><text x="48.6130%" y="399.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::len (14 samples, 0.15%)</title><rect x="48.3847%" y="453" width="0.1513%" height="15" fill="rgb(213,182,10)" fg:x="4478" fg:w="14"/><text x="48.6347%" y="463.50"></text></g><g><title>gb_rs::graphics::PixelPos::to_tile (3 samples, 0.03%)</title><rect x="48.5359%" y="453" width="0.0324%" height="15" fill="rgb(245,125,30)" fg:x="4492" fg:w="3"/><text x="48.7859%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned_erms (285 samples, 3.08%)</title><rect x="66.4938%" y="437" width="3.0794%" height="15" fill="rgb(232,202,2)" fg:x="6154" fg:w="285"/><text x="66.7438%" y="447.50">__m..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.05%)</title><rect x="69.5732%" y="437" width="0.0540%" height="15" fill="rgb(237,140,51)" fg:x="6439" fg:w="5"/><text x="69.8232%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.05%)</title><rect x="69.5732%" y="421" width="0.0540%" height="15" fill="rgb(236,157,25)" fg:x="6439" fg:w="5"/><text x="69.8232%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.04%)</title><rect x="69.5840%" y="405" width="0.0432%" height="15" fill="rgb(219,209,0)" fg:x="6440" fg:w="4"/><text x="69.8340%" y="415.50"></text></g><g><title>gb_rs::graphics::Tile::fetch_tile (2,000 samples, 21.61%)</title><rect x="48.5683%" y="453" width="21.6099%" height="15" fill="rgb(240,116,54)" fg:x="4495" fg:w="2000"/><text x="48.8183%" y="463.50">gb_rs::graphics::Tile::fetch_tile</text></g><g><title>gb_rs::memory::Memory::read_byte (51 samples, 0.55%)</title><rect x="69.6272%" y="437" width="0.5511%" height="15" fill="rgb(216,10,36)" fg:x="6444" fg:w="51"/><text x="69.8772%" y="447.50"></text></g><g><title>gb_rs::graphics::Tile::get_range (4 samples, 0.04%)</title><rect x="70.1783%" y="453" width="0.0432%" height="15" fill="rgb(222,72,44)" fg:x="6495" fg:w="4"/><text x="70.4283%" y="463.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (1 samples, 0.01%)</title><rect x="70.2107%" y="437" width="0.0108%" height="15" fill="rgb(232,159,9)" fg:x="6498" fg:w="1"/><text x="70.4607%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="70.2107%" y="421" width="0.0108%" height="15" fill="rgb(210,39,32)" fg:x="6498" fg:w="1"/><text x="70.4607%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="70.2107%" y="405" width="0.0108%" height="15" fill="rgb(216,194,45)" fg:x="6498" fg:w="1"/><text x="70.4607%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="70.2107%" y="389" width="0.0108%" height="15" fill="rgb(218,18,35)" fg:x="6498" fg:w="1"/><text x="70.4607%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="70.2107%" y="373" width="0.0108%" height="15" fill="rgb(207,83,51)" fg:x="6498" fg:w="1"/><text x="70.4607%" y="383.50"></text></g><g><title>gb_rs::graphics::BgFIFO::fetch (2,330 samples, 25.18%)</title><rect x="45.7050%" y="469" width="25.1756%" height="15" fill="rgb(225,63,43)" fg:x="4230" fg:w="2330"/><text x="45.9550%" y="479.50">gb_rs::graphics::BgFIFO::fetch</text></g><g><title>gb_rs::memory::Memory::read_byte (61 samples, 0.66%)</title><rect x="70.2215%" y="453" width="0.6591%" height="15" fill="rgb(207,57,36)" fg:x="6499" fg:w="61"/><text x="70.4715%" y="463.50"></text></g><g><title>&lt;gb_rs::graphics::BgFIFO as gb_rs::graphics::FIFO&gt;::pop (2,693 samples, 29.10%)</title><rect x="41.9665%" y="485" width="29.0978%" height="15" fill="rgb(216,99,33)" fg:x="3884" fg:w="2693"/><text x="42.2165%" y="495.50">&lt;gb_rs::graphics::BgFIFO as gb_rs::graphics::FI..</text></g><g><title>gb_rs::graphics::BgFIFO::in_window (17 samples, 0.18%)</title><rect x="70.8806%" y="469" width="0.1837%" height="15" fill="rgb(225,42,16)" fg:x="6560" fg:w="17"/><text x="71.1306%" y="479.50"></text></g><g><title>gb_rs::graphics::BgFIFO::get_viewport (17 samples, 0.18%)</title><rect x="70.8806%" y="453" width="0.1837%" height="15" fill="rgb(220,201,45)" fg:x="6560" fg:w="17"/><text x="71.1306%" y="463.50"></text></g><g><title>gb_rs::memory::Memory::read_byte (17 samples, 0.18%)</title><rect x="70.8806%" y="437" width="0.1837%" height="15" fill="rgb(225,33,4)" fg:x="6560" fg:w="17"/><text x="71.1306%" y="447.50"></text></g><g><title>__memcpy_avx_unaligned_erms (51 samples, 0.55%)</title><rect x="72.5230%" y="437" width="0.5511%" height="15" fill="rgb(224,33,50)" fg:x="6712" fg:w="51"/><text x="72.7730%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="73.0740%" y="437" width="0.0108%" height="15" fill="rgb(246,198,51)" fg:x="6763" fg:w="1"/><text x="73.3240%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="73.0740%" y="421" width="0.0108%" height="15" fill="rgb(205,22,4)" fg:x="6763" fg:w="1"/><text x="73.3240%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="73.0740%" y="405" width="0.0108%" height="15" fill="rgb(206,3,8)" fg:x="6763" fg:w="1"/><text x="73.3240%" y="415.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (91 samples, 0.98%)</title><rect x="72.5230%" y="469" width="0.9833%" height="15" fill="rgb(251,23,15)" fg:x="6712" fg:w="91"/><text x="72.7730%" y="479.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (91 samples, 0.98%)</title><rect x="72.5230%" y="453" width="0.9833%" height="15" fill="rgb(252,88,28)" fg:x="6712" fg:w="91"/><text x="72.7730%" y="463.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter_wrapping (39 samples, 0.42%)</title><rect x="73.0848%" y="437" width="0.4214%" height="15" fill="rgb(212,127,14)" fg:x="6764" fg:w="39"/><text x="73.3348%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter (37 samples, 0.40%)</title><rect x="73.1064%" y="421" width="0.3998%" height="15" fill="rgb(247,145,37)" fg:x="6766" fg:w="37"/><text x="73.3564%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (37 samples, 0.40%)</title><rect x="73.1064%" y="405" width="0.3998%" height="15" fill="rgb(209,117,53)" fg:x="6766" fg:w="37"/><text x="73.3564%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.40%)</title><rect x="73.1064%" y="389" width="0.3998%" height="15" fill="rgb(212,90,42)" fg:x="6766" fg:w="37"/><text x="73.3564%" y="399.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.40%)</title><rect x="73.1064%" y="373" width="0.3998%" height="15" fill="rgb(218,164,37)" fg:x="6766" fg:w="37"/><text x="73.3564%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.40%)</title><rect x="73.1064%" y="357" width="0.3998%" height="15" fill="rgb(246,65,34)" fg:x="6766" fg:w="37"/><text x="73.3564%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (37 samples, 0.40%)</title><rect x="73.1064%" y="341" width="0.3998%" height="15" fill="rgb(231,100,33)" fg:x="6766" fg:w="37"/><text x="73.3564%" y="351.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::{{closure}} (37 samples, 0.40%)</title><rect x="73.1064%" y="325" width="0.3998%" height="15" fill="rgb(228,126,14)" fg:x="6766" fg:w="37"/><text x="73.3564%" y="335.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (37 samples, 0.40%)</title><rect x="73.1064%" y="309" width="0.3998%" height="15" fill="rgb(215,173,21)" fg:x="6766" fg:w="37"/><text x="73.3564%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (37 samples, 0.40%)</title><rect x="73.1064%" y="293" width="0.3998%" height="15" fill="rgb(210,6,40)" fg:x="6766" fg:w="37"/><text x="73.3564%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (37 samples, 0.40%)</title><rect x="73.1064%" y="277" width="0.3998%" height="15" fill="rgb(212,48,18)" fg:x="6766" fg:w="37"/><text x="73.3564%" y="287.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter::{{closure}} (37 samples, 0.40%)</title><rect x="73.1064%" y="261" width="0.3998%" height="15" fill="rgb(230,214,11)" fg:x="6766" fg:w="37"/><text x="73.3564%" y="271.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (37 samples, 0.40%)</title><rect x="73.1064%" y="245" width="0.3998%" height="15" fill="rgb(254,105,39)" fg:x="6766" fg:w="37"/><text x="73.3564%" y="255.50"></text></g><g><title>core::ptr::write (37 samples, 0.40%)</title><rect x="73.1064%" y="229" width="0.3998%" height="15" fill="rgb(245,158,5)" fg:x="6766" fg:w="37"/><text x="73.3564%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (37 samples, 0.40%)</title><rect x="73.1064%" y="213" width="0.3998%" height="15" fill="rgb(249,208,11)" fg:x="6766" fg:w="37"/><text x="73.3564%" y="223.50"></text></g><g><title>__memcpy_avx_unaligned_erms (36 samples, 0.39%)</title><rect x="73.5062%" y="469" width="0.3890%" height="15" fill="rgb(210,39,28)" fg:x="6803" fg:w="36"/><text x="73.7562%" y="479.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="73.8952%" y="469" width="0.0108%" height="15" fill="rgb(211,56,53)" fg:x="6839" fg:w="1"/><text x="74.1452%" y="479.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::truncate (1 samples, 0.01%)</title><rect x="73.8952%" y="453" width="0.0108%" height="15" fill="rgb(226,201,30)" fg:x="6839" fg:w="1"/><text x="74.1452%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="73.9060%" y="469" width="0.0108%" height="15" fill="rgb(239,101,34)" fg:x="6840" fg:w="1"/><text x="74.1560%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="73.9060%" y="453" width="0.0108%" height="15" fill="rgb(226,209,5)" fg:x="6840" fg:w="1"/><text x="74.1560%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned_erms (10 samples, 0.11%)</title><rect x="74.6948%" y="453" width="0.1080%" height="15" fill="rgb(250,105,47)" fg:x="6913" fg:w="10"/><text x="74.9448%" y="463.50"></text></g><g><title>gb_rs::graphics::Tile::fetch_tile (85 samples, 0.92%)</title><rect x="73.9168%" y="469" width="0.9184%" height="15" fill="rgb(230,72,3)" fg:x="6841" fg:w="85"/><text x="74.1668%" y="479.50"></text></g><g><title>gb_rs::memory::Memory::read_byte (3 samples, 0.03%)</title><rect x="74.8028%" y="453" width="0.0324%" height="15" fill="rgb(232,218,39)" fg:x="6923" fg:w="3"/><text x="75.0528%" y="463.50"></text></g><g><title>gb_rs::graphics::Tile::flip_x (3 samples, 0.03%)</title><rect x="74.8352%" y="469" width="0.0324%" height="15" fill="rgb(248,166,6)" fg:x="6926" fg:w="3"/><text x="75.0852%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (3 samples, 0.03%)</title><rect x="74.8352%" y="453" width="0.0324%" height="15" fill="rgb(247,89,20)" fg:x="6926" fg:w="3"/><text x="75.0852%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse::revswap (3 samples, 0.03%)</title><rect x="74.8352%" y="437" width="0.0324%" height="15" fill="rgb(248,130,54)" fg:x="6926" fg:w="3"/><text x="75.0852%" y="447.50"></text></g><g><title>core::mem::swap (3 samples, 0.03%)</title><rect x="74.8352%" y="421" width="0.0324%" height="15" fill="rgb(234,196,4)" fg:x="6926" fg:w="3"/><text x="75.0852%" y="431.50"></text></g><g><title>core::mem::swap_simple (3 samples, 0.03%)</title><rect x="74.8352%" y="405" width="0.0324%" height="15" fill="rgb(250,143,31)" fg:x="6926" fg:w="3"/><text x="75.0852%" y="415.50"></text></g><g><title>core::ptr::read (3 samples, 0.03%)</title><rect x="74.8352%" y="389" width="0.0324%" height="15" fill="rgb(211,110,34)" fg:x="6926" fg:w="3"/><text x="75.0852%" y="399.50"></text></g><g><title>gb_rs::memory::Memory::read_byte (15 samples, 0.16%)</title><rect x="74.8676%" y="469" width="0.1621%" height="15" fill="rgb(215,124,48)" fg:x="6929" fg:w="15"/><text x="75.1176%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (2 samples, 0.02%)</title><rect x="75.0297%" y="469" width="0.0216%" height="15" fill="rgb(216,46,13)" fg:x="6944" fg:w="2"/><text x="75.2797%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (2 samples, 0.02%)</title><rect x="75.0297%" y="453" width="0.0216%" height="15" fill="rgb(205,184,25)" fg:x="6944" fg:w="2"/><text x="75.2797%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="75.0405%" y="437" width="0.0108%" height="15" fill="rgb(228,1,10)" fg:x="6945" fg:w="1"/><text x="75.2905%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(usize,gb_rs::graphics::Object)&gt;,hashbrown::raw::RawTable&lt;(usize,gb_rs::graphics::Object)&gt;::clear::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="75.0405%" y="421" width="0.0108%" height="15" fill="rgb(213,116,27)" fg:x="6945" fg:w="1"/><text x="75.2905%" y="431.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="75.0405%" y="405" width="0.0108%" height="15" fill="rgb(241,95,50)" fg:x="6945" fg:w="1"/><text x="75.2905%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (1 samples, 0.01%)</title><rect x="75.0405%" y="389" width="0.0108%" height="15" fill="rgb(238,48,32)" fg:x="6945" fg:w="1"/><text x="75.2905%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (1 samples, 0.01%)</title><rect x="75.0405%" y="373" width="0.0108%" height="15" fill="rgb(235,113,49)" fg:x="6945" fg:w="1"/><text x="75.2905%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::clear_no_drop (1 samples, 0.01%)</title><rect x="75.0405%" y="357" width="0.0108%" height="15" fill="rgb(205,127,43)" fg:x="6945" fg:w="1"/><text x="75.2905%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.01%)</title><rect x="75.0405%" y="341" width="0.0108%" height="15" fill="rgb(250,162,2)" fg:x="6945" fg:w="1"/><text x="75.2905%" y="351.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.01%)</title><rect x="75.0405%" y="325" width="0.0108%" height="15" fill="rgb(220,13,41)" fg:x="6945" fg:w="1"/><text x="75.2905%" y="335.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="75.0405%" y="309" width="0.0108%" height="15" fill="rgb(249,221,25)" fg:x="6945" fg:w="1"/><text x="75.2905%" y="319.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="75.0621%" y="405" width="0.0108%" height="15" fill="rgb(215,208,19)" fg:x="6947" fg:w="1"/><text x="75.3121%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="75.0621%" y="389" width="0.0108%" height="15" fill="rgb(236,175,2)" fg:x="6947" fg:w="1"/><text x="75.3121%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="75.0621%" y="373" width="0.0108%" height="15" fill="rgb(241,52,2)" fg:x="6947" fg:w="1"/><text x="75.3121%" y="383.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.03%)</title><rect x="75.0729%" y="405" width="0.0324%" height="15" fill="rgb(248,140,14)" fg:x="6948" fg:w="3"/><text x="75.3229%" y="415.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="75.0945%" y="389" width="0.0108%" height="15" fill="rgb(253,22,42)" fg:x="6950" fg:w="1"/><text x="75.3445%" y="399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="75.0945%" y="373" width="0.0108%" height="15" fill="rgb(234,61,47)" fg:x="6950" fg:w="1"/><text x="75.3445%" y="383.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="75.0945%" y="357" width="0.0108%" height="15" fill="rgb(208,226,15)" fg:x="6950" fg:w="1"/><text x="75.3445%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.05%)</title><rect x="75.0621%" y="437" width="0.0540%" height="15" fill="rgb(217,221,4)" fg:x="6947" fg:w="5"/><text x="75.3121%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.05%)</title><rect x="75.0621%" y="421" width="0.0540%" height="15" fill="rgb(212,174,34)" fg:x="6947" fg:w="5"/><text x="75.3121%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="75.1053%" y="405" width="0.0108%" height="15" fill="rgb(253,83,4)" fg:x="6951" fg:w="1"/><text x="75.3553%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="75.1053%" y="389" width="0.0108%" height="15" fill="rgb(250,195,49)" fg:x="6951" fg:w="1"/><text x="75.3553%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="75.1053%" y="373" width="0.0108%" height="15" fill="rgb(241,192,25)" fg:x="6951" fg:w="1"/><text x="75.3553%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (1 samples, 0.01%)</title><rect x="75.1053%" y="357" width="0.0108%" height="15" fill="rgb(208,124,10)" fg:x="6951" fg:w="1"/><text x="75.3553%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (1 samples, 0.01%)</title><rect x="75.1270%" y="357" width="0.0108%" height="15" fill="rgb(222,33,0)" fg:x="6953" fg:w="1"/><text x="75.3770%" y="367.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.01%)</title><rect x="75.1270%" y="341" width="0.0108%" height="15" fill="rgb(234,209,28)" fg:x="6953" fg:w="1"/><text x="75.3770%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="75.1270%" y="325" width="0.0108%" height="15" fill="rgb(224,11,23)" fg:x="6953" fg:w="1"/><text x="75.3770%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="75.1270%" y="309" width="0.0108%" height="15" fill="rgb(232,99,1)" fg:x="6953" fg:w="1"/><text x="75.3770%" y="319.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="75.1270%" y="293" width="0.0108%" height="15" fill="rgb(237,95,45)" fg:x="6953" fg:w="1"/><text x="75.3770%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="75.1270%" y="277" width="0.0108%" height="15" fill="rgb(208,109,11)" fg:x="6953" fg:w="1"/><text x="75.3770%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="75.1270%" y="261" width="0.0108%" height="15" fill="rgb(216,190,48)" fg:x="6953" fg:w="1"/><text x="75.3770%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="75.1270%" y="245" width="0.0108%" height="15" fill="rgb(251,171,36)" fg:x="6953" fg:w="1"/><text x="75.3770%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="75.1270%" y="229" width="0.0108%" height="15" fill="rgb(230,62,22)" fg:x="6953" fg:w="1"/><text x="75.3770%" y="239.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="75.1378%" y="245" width="0.0108%" height="15" fill="rgb(225,114,35)" fg:x="6954" fg:w="1"/><text x="75.3878%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.05%)</title><rect x="75.1162%" y="421" width="0.0540%" height="15" fill="rgb(215,118,42)" fg:x="6952" fg:w="5"/><text x="75.3662%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.04%)</title><rect x="75.1270%" y="405" width="0.0432%" height="15" fill="rgb(243,119,21)" fg:x="6953" fg:w="4"/><text x="75.3770%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (4 samples, 0.04%)</title><rect x="75.1270%" y="389" width="0.0432%" height="15" fill="rgb(252,177,53)" fg:x="6953" fg:w="4"/><text x="75.3770%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (4 samples, 0.04%)</title><rect x="75.1270%" y="373" width="0.0432%" height="15" fill="rgb(237,209,29)" fg:x="6953" fg:w="4"/><text x="75.3770%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (3 samples, 0.03%)</title><rect x="75.1378%" y="357" width="0.0324%" height="15" fill="rgb(212,65,23)" fg:x="6954" fg:w="3"/><text x="75.3878%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (3 samples, 0.03%)</title><rect x="75.1378%" y="341" width="0.0324%" height="15" fill="rgb(230,222,46)" fg:x="6954" fg:w="3"/><text x="75.3878%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3 samples, 0.03%)</title><rect x="75.1378%" y="325" width="0.0324%" height="15" fill="rgb(215,135,32)" fg:x="6954" fg:w="3"/><text x="75.3878%" y="335.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.03%)</title><rect x="75.1378%" y="309" width="0.0324%" height="15" fill="rgb(246,101,22)" fg:x="6954" fg:w="3"/><text x="75.3878%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="75.1378%" y="293" width="0.0324%" height="15" fill="rgb(206,107,13)" fg:x="6954" fg:w="3"/><text x="75.3878%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="75.1378%" y="277" width="0.0324%" height="15" fill="rgb(250,100,44)" fg:x="6954" fg:w="3"/><text x="75.3878%" y="287.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="75.1378%" y="261" width="0.0324%" height="15" fill="rgb(231,147,38)" fg:x="6954" fg:w="3"/><text x="75.3878%" y="271.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="75.1486%" y="245" width="0.0216%" height="15" fill="rgb(229,8,40)" fg:x="6955" fg:w="2"/><text x="75.3986%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="75.1594%" y="229" width="0.0108%" height="15" fill="rgb(221,135,30)" fg:x="6956" fg:w="1"/><text x="75.4094%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.01%)</title><rect x="75.1810%" y="405" width="0.0108%" height="15" fill="rgb(249,193,18)" fg:x="6958" fg:w="1"/><text x="75.4310%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (4 samples, 0.04%)</title><rect x="75.1918%" y="405" width="0.0432%" height="15" fill="rgb(209,133,39)" fg:x="6959" fg:w="4"/><text x="75.4418%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (4 samples, 0.04%)</title><rect x="75.1918%" y="389" width="0.0432%" height="15" fill="rgb(232,100,14)" fg:x="6959" fg:w="4"/><text x="75.4418%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (13 samples, 0.14%)</title><rect x="75.1162%" y="437" width="0.1405%" height="15" fill="rgb(224,185,1)" fg:x="6952" fg:w="13"/><text x="75.3662%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (8 samples, 0.09%)</title><rect x="75.1702%" y="421" width="0.0864%" height="15" fill="rgb(223,139,8)" fg:x="6957" fg:w="8"/><text x="75.4202%" y="431.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.02%)</title><rect x="75.2350%" y="405" width="0.0216%" height="15" fill="rgb(232,213,38)" fg:x="6963" fg:w="2"/><text x="75.4850%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.01%)</title><rect x="75.2566%" y="421" width="0.0108%" height="15" fill="rgb(207,94,22)" fg:x="6965" fg:w="1"/><text x="75.5066%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="75.2566%" y="405" width="0.0108%" height="15" fill="rgb(219,183,54)" fg:x="6965" fg:w="1"/><text x="75.5066%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="75.2566%" y="389" width="0.0108%" height="15" fill="rgb(216,185,54)" fg:x="6965" fg:w="1"/><text x="75.5066%" y="399.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;bool&gt; for usize&gt;::from (1 samples, 0.01%)</title><rect x="75.2782%" y="405" width="0.0108%" height="15" fill="rgb(254,217,39)" fg:x="6967" fg:w="1"/><text x="75.5282%" y="415.50"></text></g><g><title>&lt;gb_rs::graphics::ObjFIFO as gb_rs::graphics::FIFO&gt;::next_line (392 samples, 4.24%)</title><rect x="71.0643%" y="485" width="4.2355%" height="15" fill="rgb(240,178,23)" fg:x="6577" fg:w="392"/><text x="71.3143%" y="495.50">&lt;gb_r..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (23 samples, 0.25%)</title><rect x="75.0513%" y="469" width="0.2485%" height="15" fill="rgb(218,11,47)" fg:x="6946" fg:w="23"/><text x="75.3013%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.24%)</title><rect x="75.0621%" y="453" width="0.2377%" height="15" fill="rgb(218,51,51)" fg:x="6947" fg:w="22"/><text x="75.3121%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (4 samples, 0.04%)</title><rect x="75.2566%" y="437" width="0.0432%" height="15" fill="rgb(238,126,27)" fg:x="6965" fg:w="4"/><text x="75.5066%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (3 samples, 0.03%)</title><rect x="75.2674%" y="421" width="0.0324%" height="15" fill="rgb(249,202,22)" fg:x="6966" fg:w="3"/><text x="75.5174%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl_h2 (1 samples, 0.01%)</title><rect x="75.2890%" y="405" width="0.0108%" height="15" fill="rgb(254,195,49)" fg:x="6968" fg:w="1"/><text x="75.5390%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl (1 samples, 0.01%)</title><rect x="75.2890%" y="389" width="0.0108%" height="15" fill="rgb(208,123,14)" fg:x="6968" fg:w="1"/><text x="75.5390%" y="399.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::ptr (5 samples, 0.05%)</title><rect x="76.1210%" y="437" width="0.0540%" height="15" fill="rgb(224,200,8)" fg:x="7045" fg:w="5"/><text x="76.3710%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.05%)</title><rect x="76.1210%" y="421" width="0.0540%" height="15" fill="rgb(217,61,36)" fg:x="7045" fg:w="5"/><text x="76.3710%" y="431.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (20 samples, 0.22%)</title><rect x="76.1210%" y="453" width="0.2161%" height="15" fill="rgb(206,35,45)" fg:x="7045" fg:w="20"/><text x="76.3710%" y="463.50"></text></g><g><title>core::ptr::read (15 samples, 0.16%)</title><rect x="76.1750%" y="437" width="0.1621%" height="15" fill="rgb(217,65,33)" fg:x="7050" fg:w="15"/><text x="76.4250%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (29 samples, 0.31%)</title><rect x="76.3371%" y="453" width="0.3133%" height="15" fill="rgb(222,158,48)" fg:x="7065" fg:w="29"/><text x="76.5871%" y="463.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (83 samples, 0.90%)</title><rect x="76.6505%" y="421" width="0.8968%" height="15" fill="rgb(254,2,54)" fg:x="7094" fg:w="83"/><text x="76.9005%" y="431.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (215 samples, 2.32%)</title><rect x="75.2998%" y="469" width="2.3231%" height="15" fill="rgb(250,143,38)" fg:x="6969" fg:w="215"/><text x="75.5498%" y="479.50">a..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (90 samples, 0.97%)</title><rect x="76.6505%" y="453" width="0.9724%" height="15" fill="rgb(248,25,0)" fg:x="7094" fg:w="90"/><text x="76.9005%" y="463.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (90 samples, 0.97%)</title><rect x="76.6505%" y="437" width="0.9724%" height="15" fill="rgb(206,152,27)" fg:x="7094" fg:w="90"/><text x="76.9005%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (7 samples, 0.08%)</title><rect x="77.5473%" y="421" width="0.0756%" height="15" fill="rgb(240,77,30)" fg:x="7177" fg:w="7"/><text x="77.7973%" y="431.50"></text></g><g><title>&lt;gb_rs::graphics::ObjFIFO as gb_rs::graphics::FIFO&gt;::pop (220 samples, 2.38%)</title><rect x="75.2998%" y="485" width="2.3771%" height="15" fill="rgb(231,5,3)" fg:x="6969" fg:w="220"/><text x="75.5498%" y="495.50">&lt;g..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (5 samples, 0.05%)</title><rect x="77.6229%" y="469" width="0.0540%" height="15" fill="rgb(207,226,32)" fg:x="7184" fg:w="5"/><text x="77.8729%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.10%)</title><rect x="77.6769%" y="485" width="0.0972%" height="15" fill="rgb(222,207,47)" fg:x="7189" fg:w="9"/><text x="77.9269%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.10%)</title><rect x="77.6769%" y="469" width="0.0972%" height="15" fill="rgb(229,115,45)" fg:x="7189" fg:w="9"/><text x="77.9269%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="78.6278%" y="309" width="0.0216%" height="15" fill="rgb(224,191,6)" fg:x="7277" fg:w="2"/><text x="78.8778%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.05%)</title><rect x="78.6170%" y="325" width="0.0540%" height="15" fill="rgb(230,227,24)" fg:x="7276" fg:w="5"/><text x="78.8670%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="78.6494%" y="309" width="0.0216%" height="15" fill="rgb(228,80,19)" fg:x="7279" fg:w="2"/><text x="78.8994%" y="319.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.13%)</title><rect x="78.6062%" y="373" width="0.1297%" height="15" fill="rgb(247,229,0)" fg:x="7275" fg:w="12"/><text x="78.8562%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.13%)</title><rect x="78.6062%" y="357" width="0.1297%" height="15" fill="rgb(237,194,15)" fg:x="7275" fg:w="12"/><text x="78.8562%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.13%)</title><rect x="78.6062%" y="341" width="0.1297%" height="15" fill="rgb(219,203,20)" fg:x="7275" fg:w="12"/><text x="78.8562%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.06%)</title><rect x="78.6710%" y="325" width="0.0648%" height="15" fill="rgb(234,128,8)" fg:x="7281" fg:w="6"/><text x="78.9210%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.04%)</title><rect x="78.6926%" y="309" width="0.0432%" height="15" fill="rgb(248,202,8)" fg:x="7283" fg:w="4"/><text x="78.9426%" y="319.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="78.7358%" y="373" width="0.0108%" height="15" fill="rgb(206,104,37)" fg:x="7287" fg:w="1"/><text x="78.9858%" y="383.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="78.7358%" y="357" width="0.0108%" height="15" fill="rgb(223,8,27)" fg:x="7287" fg:w="1"/><text x="78.9858%" y="367.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="78.7358%" y="341" width="0.0108%" height="15" fill="rgb(216,217,28)" fg:x="7287" fg:w="1"/><text x="78.9858%" y="351.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="78.7358%" y="325" width="0.0108%" height="15" fill="rgb(249,199,1)" fg:x="7287" fg:w="1"/><text x="78.9858%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="78.8115%" y="277" width="0.0216%" height="15" fill="rgb(240,85,17)" fg:x="7294" fg:w="2"/><text x="79.0615%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="78.8115%" y="261" width="0.0216%" height="15" fill="rgb(206,108,45)" fg:x="7294" fg:w="2"/><text x="79.0615%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (26 samples, 0.28%)</title><rect x="78.5845%" y="405" width="0.2809%" height="15" fill="rgb(245,210,41)" fg:x="7273" fg:w="26"/><text x="78.8345%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (26 samples, 0.28%)</title><rect x="78.5845%" y="389" width="0.2809%" height="15" fill="rgb(206,13,37)" fg:x="7273" fg:w="26"/><text x="78.8345%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (11 samples, 0.12%)</title><rect x="78.7466%" y="373" width="0.1189%" height="15" fill="rgb(250,61,18)" fg:x="7288" fg:w="11"/><text x="78.9966%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (11 samples, 0.12%)</title><rect x="78.7466%" y="357" width="0.1189%" height="15" fill="rgb(235,172,48)" fg:x="7288" fg:w="11"/><text x="78.9966%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (11 samples, 0.12%)</title><rect x="78.7466%" y="341" width="0.1189%" height="15" fill="rgb(249,201,17)" fg:x="7288" fg:w="11"/><text x="78.9966%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.12%)</title><rect x="78.7466%" y="325" width="0.1189%" height="15" fill="rgb(219,208,6)" fg:x="7288" fg:w="11"/><text x="78.9966%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.12%)</title><rect x="78.7466%" y="309" width="0.1189%" height="15" fill="rgb(248,31,23)" fg:x="7288" fg:w="11"/><text x="78.9966%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.12%)</title><rect x="78.7466%" y="293" width="0.1189%" height="15" fill="rgb(245,15,42)" fg:x="7288" fg:w="11"/><text x="78.9966%" y="303.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.03%)</title><rect x="78.8331%" y="277" width="0.0324%" height="15" fill="rgb(222,217,39)" fg:x="7296" fg:w="3"/><text x="79.0831%" y="287.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.02%)</title><rect x="78.8763%" y="341" width="0.0216%" height="15" fill="rgb(210,219,27)" fg:x="7300" fg:w="2"/><text x="79.1263%" y="351.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.02%)</title><rect x="78.8763%" y="325" width="0.0216%" height="15" fill="rgb(252,166,36)" fg:x="7300" fg:w="2"/><text x="79.1263%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="78.8763%" y="309" width="0.0216%" height="15" fill="rgb(245,132,34)" fg:x="7300" fg:w="2"/><text x="79.1263%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (2 samples, 0.02%)</title><rect x="78.8763%" y="293" width="0.0216%" height="15" fill="rgb(236,54,3)" fg:x="7300" fg:w="2"/><text x="79.1263%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.03%)</title><rect x="78.8763%" y="357" width="0.0324%" height="15" fill="rgb(241,173,43)" fg:x="7300" fg:w="3"/><text x="79.1263%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.01%)</title><rect x="78.8979%" y="341" width="0.0108%" height="15" fill="rgb(215,190,9)" fg:x="7302" fg:w="1"/><text x="79.1479%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="78.8979%" y="325" width="0.0108%" height="15" fill="rgb(242,101,16)" fg:x="7302" fg:w="1"/><text x="79.1479%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="78.8979%" y="309" width="0.0108%" height="15" fill="rgb(223,190,21)" fg:x="7302" fg:w="1"/><text x="79.1479%" y="319.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.02%)</title><rect x="78.9087%" y="357" width="0.0216%" height="15" fill="rgb(215,228,25)" fg:x="7303" fg:w="2"/><text x="79.1587%" y="367.50"></text></g><g><title>gb_rs::graphics::Graphics::mix (108 samples, 1.17%)</title><rect x="77.7742%" y="485" width="1.1669%" height="15" fill="rgb(225,36,22)" fg:x="7198" fg:w="108"/><text x="78.0242%" y="495.50"></text></g><g><title>gb_rs::graphics::ObjFIFO::get_obj_attr (34 samples, 0.37%)</title><rect x="78.5737%" y="469" width="0.3674%" height="15" fill="rgb(251,106,46)" fg:x="7272" fg:w="34"/><text x="78.8237%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (34 samples, 0.37%)</title><rect x="78.5737%" y="453" width="0.3674%" height="15" fill="rgb(208,90,1)" fg:x="7272" fg:w="34"/><text x="78.8237%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (34 samples, 0.37%)</title><rect x="78.5737%" y="437" width="0.3674%" height="15" fill="rgb(243,10,4)" fg:x="7272" fg:w="34"/><text x="78.8237%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (34 samples, 0.37%)</title><rect x="78.5737%" y="421" width="0.3674%" height="15" fill="rgb(212,137,27)" fg:x="7272" fg:w="34"/><text x="78.8237%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 0.08%)</title><rect x="78.8655%" y="405" width="0.0756%" height="15" fill="rgb(231,220,49)" fg:x="7299" fg:w="7"/><text x="79.1155%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.08%)</title><rect x="78.8655%" y="389" width="0.0756%" height="15" fill="rgb(237,96,20)" fg:x="7299" fg:w="7"/><text x="79.1155%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (7 samples, 0.08%)</title><rect x="78.8655%" y="373" width="0.0756%" height="15" fill="rgb(239,229,30)" fg:x="7299" fg:w="7"/><text x="79.1155%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="78.9303%" y="357" width="0.0108%" height="15" fill="rgb(219,65,33)" fg:x="7305" fg:w="1"/><text x="79.1803%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="78.9303%" y="341" width="0.0108%" height="15" fill="rgb(243,134,7)" fg:x="7305" fg:w="1"/><text x="79.1803%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="78.9303%" y="325" width="0.0108%" height="15" fill="rgb(216,177,54)" fg:x="7305" fg:w="1"/><text x="79.1803%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="81.4911%" y="309" width="0.0216%" height="15" fill="rgb(211,160,20)" fg:x="7542" fg:w="2"/><text x="81.7411%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.05%)</title><rect x="81.4803%" y="325" width="0.0540%" height="15" fill="rgb(239,85,39)" fg:x="7541" fg:w="5"/><text x="81.7303%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="81.5127%" y="309" width="0.0216%" height="15" fill="rgb(232,125,22)" fg:x="7544" fg:w="2"/><text x="81.7627%" y="319.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.10%)</title><rect x="81.4803%" y="373" width="0.0972%" height="15" fill="rgb(244,57,34)" fg:x="7541" fg:w="9"/><text x="81.7303%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.10%)</title><rect x="81.4803%" y="357" width="0.0972%" height="15" fill="rgb(214,203,32)" fg:x="7541" fg:w="9"/><text x="81.7303%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.10%)</title><rect x="81.4803%" y="341" width="0.0972%" height="15" fill="rgb(207,58,43)" fg:x="7541" fg:w="9"/><text x="81.7303%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.04%)</title><rect x="81.5343%" y="325" width="0.0432%" height="15" fill="rgb(215,193,15)" fg:x="7546" fg:w="4"/><text x="81.7843%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="81.5559%" y="309" width="0.0216%" height="15" fill="rgb(232,15,44)" fg:x="7548" fg:w="2"/><text x="81.8059%" y="319.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="81.5775%" y="373" width="0.0108%" height="15" fill="rgb(212,3,48)" fg:x="7550" fg:w="1"/><text x="81.8275%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="81.6099%" y="261" width="0.0216%" height="15" fill="rgb(218,128,7)" fg:x="7553" fg:w="2"/><text x="81.8599%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.03%)</title><rect x="81.6099%" y="277" width="0.0324%" height="15" fill="rgb(226,216,39)" fg:x="7553" fg:w="3"/><text x="81.8599%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="81.6316%" y="261" width="0.0108%" height="15" fill="rgb(243,47,51)" fg:x="7555" fg:w="1"/><text x="81.8816%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 0.21%)</title><rect x="81.4587%" y="405" width="0.2053%" height="15" fill="rgb(241,183,40)" fg:x="7539" fg:w="19"/><text x="81.7087%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.18%)</title><rect x="81.4803%" y="389" width="0.1837%" height="15" fill="rgb(231,217,32)" fg:x="7541" fg:w="17"/><text x="81.7303%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7 samples, 0.08%)</title><rect x="81.5883%" y="373" width="0.0756%" height="15" fill="rgb(229,61,38)" fg:x="7551" fg:w="7"/><text x="81.8383%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (7 samples, 0.08%)</title><rect x="81.5883%" y="357" width="0.0756%" height="15" fill="rgb(225,210,5)" fg:x="7551" fg:w="7"/><text x="81.8383%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (7 samples, 0.08%)</title><rect x="81.5883%" y="341" width="0.0756%" height="15" fill="rgb(231,79,45)" fg:x="7551" fg:w="7"/><text x="81.8383%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="81.5883%" y="325" width="0.0756%" height="15" fill="rgb(224,100,7)" fg:x="7551" fg:w="7"/><text x="81.8383%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="81.5883%" y="309" width="0.0756%" height="15" fill="rgb(241,198,18)" fg:x="7551" fg:w="7"/><text x="81.8383%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="81.5883%" y="293" width="0.0756%" height="15" fill="rgb(252,97,53)" fg:x="7551" fg:w="7"/><text x="81.8383%" y="303.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="81.6424%" y="277" width="0.0216%" height="15" fill="rgb(220,88,7)" fg:x="7556" fg:w="2"/><text x="81.8924%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="81.6748%" y="357" width="0.0216%" height="15" fill="rgb(213,176,14)" fg:x="7559" fg:w="2"/><text x="81.9248%" y="367.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (2 samples, 0.02%)</title><rect x="81.6748%" y="341" width="0.0216%" height="15" fill="rgb(246,73,7)" fg:x="7559" fg:w="2"/><text x="81.9248%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.05%)</title><rect x="81.6964%" y="341" width="0.0540%" height="15" fill="rgb(245,64,36)" fg:x="7561" fg:w="5"/><text x="81.9464%" y="351.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (5 samples, 0.05%)</title><rect x="81.6964%" y="325" width="0.0540%" height="15" fill="rgb(245,80,10)" fg:x="7561" fg:w="5"/><text x="81.9464%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.05%)</title><rect x="81.6964%" y="309" width="0.0540%" height="15" fill="rgb(232,107,50)" fg:x="7561" fg:w="5"/><text x="81.9464%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (5 samples, 0.05%)</title><rect x="81.6964%" y="293" width="0.0540%" height="15" fill="rgb(253,3,0)" fg:x="7561" fg:w="5"/><text x="81.9464%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.06%)</title><rect x="81.6964%" y="357" width="0.0648%" height="15" fill="rgb(212,99,53)" fg:x="7561" fg:w="6"/><text x="81.9464%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.01%)</title><rect x="81.7504%" y="341" width="0.0108%" height="15" fill="rgb(249,111,54)" fg:x="7566" fg:w="1"/><text x="82.0004%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="81.7504%" y="325" width="0.0108%" height="15" fill="rgb(249,55,30)" fg:x="7566" fg:w="1"/><text x="82.0004%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="81.7504%" y="309" width="0.0108%" height="15" fill="rgb(237,47,42)" fg:x="7566" fg:w="1"/><text x="82.0004%" y="319.50"></text></g><g><title>hashbrown::raw::h2 (4 samples, 0.04%)</title><rect x="81.7612%" y="357" width="0.0432%" height="15" fill="rgb(211,20,18)" fg:x="7567" fg:w="4"/><text x="82.0112%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="81.8044%" y="357" width="0.0216%" height="15" fill="rgb(231,203,46)" fg:x="7571" fg:w="2"/><text x="82.0544%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="81.8044%" y="341" width="0.0216%" height="15" fill="rgb(237,142,3)" fg:x="7571" fg:w="2"/><text x="82.0544%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="81.8044%" y="325" width="0.0216%" height="15" fill="rgb(241,107,1)" fg:x="7571" fg:w="2"/><text x="82.0544%" y="335.50"></text></g><g><title>gb_rs::graphics::ObjFIFO::get_obj_attr (35 samples, 0.38%)</title><rect x="81.4587%" y="469" width="0.3782%" height="15" fill="rgb(229,83,13)" fg:x="7539" fg:w="35"/><text x="81.7087%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (35 samples, 0.38%)</title><rect x="81.4587%" y="453" width="0.3782%" height="15" fill="rgb(241,91,40)" fg:x="7539" fg:w="35"/><text x="81.7087%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (35 samples, 0.38%)</title><rect x="81.4587%" y="437" width="0.3782%" height="15" fill="rgb(225,3,45)" fg:x="7539" fg:w="35"/><text x="81.7087%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (35 samples, 0.38%)</title><rect x="81.4587%" y="421" width="0.3782%" height="15" fill="rgb(244,223,14)" fg:x="7539" fg:w="35"/><text x="81.7087%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (16 samples, 0.17%)</title><rect x="81.6640%" y="405" width="0.1729%" height="15" fill="rgb(224,124,37)" fg:x="7558" fg:w="16"/><text x="81.9140%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.17%)</title><rect x="81.6640%" y="389" width="0.1729%" height="15" fill="rgb(251,171,30)" fg:x="7558" fg:w="16"/><text x="81.9140%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (16 samples, 0.17%)</title><rect x="81.6640%" y="373" width="0.1729%" height="15" fill="rgb(236,46,54)" fg:x="7558" fg:w="16"/><text x="81.9140%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="81.8260%" y="357" width="0.0108%" height="15" fill="rgb(245,213,5)" fg:x="7573" fg:w="1"/><text x="82.0760%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="81.8260%" y="341" width="0.0108%" height="15" fill="rgb(230,144,27)" fg:x="7573" fg:w="1"/><text x="82.0760%" y="351.50"></text></g><g><title>gb_rs::graphics::Graphics::draw_scanline (4,337 samples, 46.86%)</title><rect x="34.9865%" y="501" width="46.8612%" height="15" fill="rgb(220,86,6)" fg:x="3238" fg:w="4337"/><text x="35.2365%" y="511.50">gb_rs::graphics::Graphics::draw_scanline</text></g><g><title>gb_rs::graphics::Graphics::pixel_to_color (269 samples, 2.91%)</title><rect x="78.9411%" y="485" width="2.9065%" height="15" fill="rgb(240,20,13)" fg:x="7306" fg:w="269"/><text x="79.1911%" y="495.50">gb..</text></g><g><title>gb_rs::memory::Memory::read_byte (1 samples, 0.01%)</title><rect x="81.8368%" y="469" width="0.0108%" height="15" fill="rgb(217,89,34)" fg:x="7574" fg:w="1"/><text x="82.0868%" y="479.50"></text></g><g><title>gb_rs::graphics::Graphics::get_mode (56 samples, 0.61%)</title><rect x="81.8476%" y="501" width="0.6051%" height="15" fill="rgb(229,13,5)" fg:x="7575" fg:w="56"/><text x="82.0976%" y="511.50"></text></g><g><title>gb_rs::graphics::Graphics::set_lyc (1 samples, 0.01%)</title><rect x="82.4527%" y="501" width="0.0108%" height="15" fill="rgb(244,67,35)" fg:x="7631" fg:w="1"/><text x="82.7027%" y="511.50"></text></g><g><title>gb_rs::memory::Memory::write_byte (1 samples, 0.01%)</title><rect x="82.4527%" y="485" width="0.0108%" height="15" fill="rgb(221,40,2)" fg:x="7631" fg:w="1"/><text x="82.7027%" y="495.50"></text></g><g><title>gb_rs::memory::Memory::read_byte (1 samples, 0.01%)</title><rect x="82.4635%" y="485" width="0.0108%" height="15" fill="rgb(237,157,21)" fg:x="7632" fg:w="1"/><text x="82.7135%" y="495.50"></text></g><g><title>gb_rs::graphics::Graphics::set_ppu (3 samples, 0.03%)</title><rect x="82.4635%" y="501" width="0.0324%" height="15" fill="rgb(222,94,11)" fg:x="7632" fg:w="3"/><text x="82.7135%" y="511.50"></text></g><g><title>gb_rs::memory::Memory::write_byte (2 samples, 0.02%)</title><rect x="82.4743%" y="485" width="0.0216%" height="15" fill="rgb(249,113,6)" fg:x="7633" fg:w="2"/><text x="82.7243%" y="495.50"></text></g><g><title>GL_QueueGeometry (2 samples, 0.02%)</title><rect x="82.5068%" y="469" width="0.0216%" height="15" fill="rgb(238,137,36)" fg:x="7636" fg:w="2"/><text x="82.7568%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="82.5392%" y="437" width="0.0108%" height="15" fill="rgb(210,102,26)" fg:x="7639" fg:w="1"/><text x="82.7892%" y="447.50"></text></g><g><title>sdl2::render::Canvas&lt;T&gt;::copy (6 samples, 0.06%)</title><rect x="82.4959%" y="501" width="0.0648%" height="15" fill="rgb(218,30,30)" fg:x="7635" fg:w="6"/><text x="82.7459%" y="511.50"></text></g><g><title>SDL_RenderCopy_REAL (6 samples, 0.06%)</title><rect x="82.4959%" y="485" width="0.0648%" height="15" fill="rgb(214,67,26)" fg:x="7635" fg:w="6"/><text x="82.7459%" y="495.50"></text></g><g><title>PrepQueueCmdDraw (3 samples, 0.03%)</title><rect x="82.5284%" y="469" width="0.0324%" height="15" fill="rgb(251,9,53)" fg:x="7638" fg:w="3"/><text x="82.7784%" y="479.50"></text></g><g><title>QueueCmdSetViewport (2 samples, 0.02%)</title><rect x="82.5392%" y="453" width="0.0216%" height="15" fill="rgb(228,204,25)" fg:x="7639" fg:w="2"/><text x="82.7892%" y="463.50"></text></g><g><title>memcpy@plt (1 samples, 0.01%)</title><rect x="82.5500%" y="437" width="0.0108%" height="15" fill="rgb(207,153,8)" fg:x="7640" fg:w="1"/><text x="82.8000%" y="447.50"></text></g><g><title>SDL_GL_GetDrawableSize_REAL (1 samples, 0.01%)</title><rect x="82.5932%" y="453" width="0.0108%" height="15" fill="rgb(242,9,16)" fg:x="7644" fg:w="1"/><text x="82.8432%" y="463.50"></text></g><g><title>SetDrawState (2 samples, 0.02%)</title><rect x="82.6040%" y="453" width="0.0216%" height="15" fill="rgb(217,211,10)" fg:x="7645" fg:w="2"/><text x="82.8540%" y="463.50"></text></g><g><title>_mesa_Color4ub (3 samples, 0.03%)</title><rect x="82.6256%" y="453" width="0.0324%" height="15" fill="rgb(219,228,52)" fg:x="7647" fg:w="3"/><text x="82.8756%" y="463.50"></text></g><g><title>vbo_exec_wrap_upgrade_vertex (2 samples, 0.02%)</title><rect x="82.6364%" y="437" width="0.0216%" height="15" fill="rgb(231,92,29)" fg:x="7648" fg:w="2"/><text x="82.8864%" y="447.50"></text></g><g><title>_mesa_reference_texobj_ (3 samples, 0.03%)</title><rect x="82.6796%" y="389" width="0.0324%" height="15" fill="rgb(232,8,23)" fg:x="7652" fg:w="3"/><text x="82.9296%" y="399.50"></text></g><g><title>_mesa_delete_texture_object (3 samples, 0.03%)</title><rect x="82.6796%" y="373" width="0.0324%" height="15" fill="rgb(216,211,34)" fg:x="7652" fg:w="3"/><text x="82.9296%" y="383.50"></text></g><g><title>_mesa_delete_texture_image (1 samples, 0.01%)</title><rect x="82.7012%" y="357" width="0.0108%" height="15" fill="rgb(236,151,0)" fg:x="7654" fg:w="1"/><text x="82.9512%" y="367.50"></text></g><g><title>st_FreeTextureImageBuffer (1 samples, 0.01%)</title><rect x="82.7012%" y="341" width="0.0108%" height="15" fill="rgb(209,168,3)" fg:x="7654" fg:w="1"/><text x="82.9512%" y="351.50"></text></g><g><title>_mesa_update_state (6 samples, 0.06%)</title><rect x="82.6580%" y="437" width="0.0648%" height="15" fill="rgb(208,129,28)" fg:x="7650" fg:w="6"/><text x="82.9080%" y="447.50"></text></g><g><title>_mesa_update_state_locked (6 samples, 0.06%)</title><rect x="82.6580%" y="421" width="0.0648%" height="15" fill="rgb(229,78,22)" fg:x="7650" fg:w="6"/><text x="82.9080%" y="431.50"></text></g><g><title>_mesa_update_texture_state (6 samples, 0.06%)</title><rect x="82.6580%" y="405" width="0.0648%" height="15" fill="rgb(228,187,13)" fg:x="7650" fg:w="6"/><text x="82.9080%" y="415.50"></text></g><g><title>update_single_program_texture (1 samples, 0.01%)</title><rect x="82.7120%" y="389" width="0.0108%" height="15" fill="rgb(240,119,24)" fg:x="7655" fg:w="1"/><text x="82.9620%" y="399.50"></text></g><g><title>_mesa_test_texobj_completeness (1 samples, 0.01%)</title><rect x="82.7120%" y="373" width="0.0108%" height="15" fill="rgb(209,194,42)" fg:x="7655" fg:w="1"/><text x="82.9620%" y="383.50"></text></g><g><title>_mesa_max_texture_levels (1 samples, 0.01%)</title><rect x="82.7120%" y="357" width="0.0108%" height="15" fill="rgb(247,200,46)" fg:x="7655" fg:w="1"/><text x="82.9620%" y="367.50"></text></g><g><title>_mesa_DrawArrays (7 samples, 0.08%)</title><rect x="82.6580%" y="453" width="0.0756%" height="15" fill="rgb(218,76,16)" fg:x="7650" fg:w="7"/><text x="82.9080%" y="463.50"></text></g><g><title>vbo_exec_FlushVertices (1 samples, 0.01%)</title><rect x="82.7229%" y="437" width="0.0108%" height="15" fill="rgb(225,21,48)" fg:x="7656" fg:w="1"/><text x="82.9729%" y="447.50"></text></g><g><title>_mesa_bind_vertex_buffer (1 samples, 0.01%)</title><rect x="82.7337%" y="437" width="0.0108%" height="15" fill="rgb(239,223,50)" fg:x="7657" fg:w="1"/><text x="82.9837%" y="447.50"></text></g><g><title>_mesa_VertexPointer (2 samples, 0.02%)</title><rect x="82.7337%" y="453" width="0.0216%" height="15" fill="rgb(244,45,21)" fg:x="7657" fg:w="2"/><text x="82.9837%" y="463.50"></text></g><g><title>validate_array_format.constprop.0 (1 samples, 0.01%)</title><rect x="82.7445%" y="437" width="0.0108%" height="15" fill="rgb(232,33,43)" fg:x="7658" fg:w="1"/><text x="82.9945%" y="447.50"></text></g><g><title>st_update_array_with_popcnt (5 samples, 0.05%)</title><rect x="82.7661%" y="405" width="0.0540%" height="15" fill="rgb(209,8,3)" fg:x="7660" fg:w="5"/><text x="83.0161%" y="415.50"></text></g><g><title>u_vbuf_set_vertex_elements (3 samples, 0.03%)</title><rect x="82.7877%" y="389" width="0.0324%" height="15" fill="rgb(214,25,53)" fg:x="7662" fg:w="3"/><text x="83.0377%" y="399.50"></text></g><g><title>u_vbuf_set_vertex_elements_internal (3 samples, 0.03%)</title><rect x="82.7877%" y="373" width="0.0324%" height="15" fill="rgb(254,186,54)" fg:x="7662" fg:w="3"/><text x="83.0377%" y="383.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="82.8093%" y="357" width="0.0108%" height="15" fill="rgb(208,174,49)" fg:x="7664" fg:w="1"/><text x="83.0593%" y="367.50"></text></g><g><title>st_update_fragment_samplers (1 samples, 0.01%)</title><rect x="82.8201%" y="405" width="0.0108%" height="15" fill="rgb(233,191,51)" fg:x="7665" fg:w="1"/><text x="83.0701%" y="415.50"></text></g><g><title>st_update_fragment_textures (1 samples, 0.01%)</title><rect x="82.8309%" y="405" width="0.0108%" height="15" fill="rgb(222,134,10)" fg:x="7666" fg:w="1"/><text x="83.0809%" y="415.50"></text></g><g><title>_mesa_update_renderbuffer_surface (2 samples, 0.02%)</title><rect x="82.8525%" y="389" width="0.0216%" height="15" fill="rgb(230,226,20)" fg:x="7668" fg:w="2"/><text x="83.1025%" y="399.50"></text></g><g><title>cso_set_framebuffer (1 samples, 0.01%)</title><rect x="82.8741%" y="389" width="0.0108%" height="15" fill="rgb(251,111,25)" fg:x="7670" fg:w="1"/><text x="83.1241%" y="399.50"></text></g><g><title>memcmp@plt (1 samples, 0.01%)</title><rect x="82.8741%" y="373" width="0.0108%" height="15" fill="rgb(224,40,46)" fg:x="7670" fg:w="1"/><text x="83.1241%" y="383.50"></text></g><g><title>_mesa_get_incomplete_framebuffer (1 samples, 0.01%)</title><rect x="82.8957%" y="373" width="0.0108%" height="15" fill="rgb(236,108,47)" fg:x="7672" fg:w="1"/><text x="83.1457%" y="383.50"></text></g><g><title>st_manager_validate_framebuffers (3 samples, 0.03%)</title><rect x="82.8849%" y="389" width="0.0324%" height="15" fill="rgb(234,93,0)" fg:x="7671" fg:w="3"/><text x="83.1349%" y="399.50"></text></g><g><title>st_framebuffer_validate (1 samples, 0.01%)</title><rect x="82.9065%" y="373" width="0.0108%" height="15" fill="rgb(224,213,32)" fg:x="7673" fg:w="1"/><text x="83.1565%" y="383.50"></text></g><g><title>st_update_framebuffer_state (8 samples, 0.09%)</title><rect x="82.8417%" y="405" width="0.0864%" height="15" fill="rgb(251,11,48)" fg:x="7667" fg:w="8"/><text x="83.0917%" y="415.50"></text></g><g><title>util_framebuffer_get_num_layers (1 samples, 0.01%)</title><rect x="82.9173%" y="389" width="0.0108%" height="15" fill="rgb(236,173,5)" fg:x="7674" fg:w="1"/><text x="83.1673%" y="399.50"></text></g><g><title>update_shader_samplers (3 samples, 0.03%)</title><rect x="82.9281%" y="405" width="0.0324%" height="15" fill="rgb(230,95,12)" fg:x="7675" fg:w="3"/><text x="83.1781%" y="415.50"></text></g><g><title>st_convert_sampler_from_unit (2 samples, 0.02%)</title><rect x="82.9390%" y="389" width="0.0216%" height="15" fill="rgb(232,209,1)" fg:x="7676" fg:w="2"/><text x="83.1890%" y="399.50"></text></g><g><title>st_convert_sampler (1 samples, 0.01%)</title><rect x="82.9498%" y="373" width="0.0108%" height="15" fill="rgb(232,6,1)" fg:x="7677" fg:w="1"/><text x="83.1998%" y="383.50"></text></g><g><title>st_texture_set_sampler_view (1 samples, 0.01%)</title><rect x="82.9714%" y="357" width="0.0108%" height="15" fill="rgb(210,224,50)" fg:x="7679" fg:w="1"/><text x="83.2214%" y="367.50"></text></g><g><title>__calloc (2 samples, 0.02%)</title><rect x="83.0254%" y="325" width="0.0216%" height="15" fill="rgb(228,127,35)" fg:x="7684" fg:w="2"/><text x="83.2754%" y="335.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="83.0254%" y="309" width="0.0216%" height="15" fill="rgb(245,102,45)" fg:x="7684" fg:w="2"/><text x="83.2754%" y="319.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="83.0362%" y="293" width="0.0108%" height="15" fill="rgb(214,1,49)" fg:x="7685" fg:w="1"/><text x="83.2862%" y="303.50"></text></g><g><title>__popcountdi2 (1 samples, 0.01%)</title><rect x="83.0470%" y="325" width="0.0108%" height="15" fill="rgb(226,163,40)" fg:x="7686" fg:w="1"/><text x="83.2970%" y="335.50"></text></g><g><title>__popcountdi2@plt (1 samples, 0.01%)</title><rect x="83.0578%" y="325" width="0.0108%" height="15" fill="rgb(239,212,28)" fg:x="7687" fg:w="1"/><text x="83.3078%" y="335.50"></text></g><g><title>st_draw_gallium (31 samples, 0.33%)</title><rect x="82.7553%" y="437" width="0.3350%" height="15" fill="rgb(220,20,13)" fg:x="7659" fg:w="31"/><text x="83.0053%" y="447.50"></text></g><g><title>prepare_draw.constprop.0 (31 samples, 0.33%)</title><rect x="82.7553%" y="421" width="0.3350%" height="15" fill="rgb(210,164,35)" fg:x="7659" fg:w="31"/><text x="83.0053%" y="431.50"></text></g><g><title>update_textures (12 samples, 0.13%)</title><rect x="82.9606%" y="405" width="0.1297%" height="15" fill="rgb(248,109,41)" fg:x="7678" fg:w="12"/><text x="83.2106%" y="415.50"></text></g><g><title>st_get_sampler_views (12 samples, 0.13%)</title><rect x="82.9606%" y="389" width="0.1297%" height="15" fill="rgb(238,23,50)" fg:x="7678" fg:w="12"/><text x="83.2106%" y="399.50"></text></g><g><title>st_get_texture_sampler_view_from_stobj (12 samples, 0.13%)</title><rect x="82.9606%" y="373" width="0.1297%" height="15" fill="rgb(211,48,49)" fg:x="7678" fg:w="12"/><text x="83.2106%" y="383.50"></text></g><g><title>tc_create_sampler_view (10 samples, 0.11%)</title><rect x="82.9822%" y="357" width="0.1080%" height="15" fill="rgb(223,36,21)" fg:x="7680" fg:w="10"/><text x="83.2322%" y="367.50"></text></g><g><title>iris_create_sampler_view (10 samples, 0.11%)</title><rect x="82.9822%" y="341" width="0.1080%" height="15" fill="rgb(207,123,46)" fg:x="7680" fg:w="10"/><text x="83.2322%" y="351.50"></text></g><g><title>fill_surface_states.isra.0 (2 samples, 0.02%)</title><rect x="83.0686%" y="325" width="0.0216%" height="15" fill="rgb(240,218,32)" fg:x="7688" fg:w="2"/><text x="83.3186%" y="335.50"></text></g><g><title>isl_gfx9_surf_fill_state_s (2 samples, 0.02%)</title><rect x="83.0686%" y="309" width="0.0216%" height="15" fill="rgb(252,5,43)" fg:x="7688" fg:w="2"/><text x="83.3186%" y="319.50"></text></g><g><title>isl_surf_get_tile_info (1 samples, 0.01%)</title><rect x="83.0794%" y="293" width="0.0108%" height="15" fill="rgb(252,84,19)" fg:x="7689" fg:w="1"/><text x="83.3294%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="83.1334%" y="421" width="0.0108%" height="15" fill="rgb(243,152,39)" fg:x="7694" fg:w="1"/><text x="83.3834%" y="431.50"></text></g><g><title>tc_add_all_gfx_bindings_to_buffer_list (3 samples, 0.03%)</title><rect x="83.1442%" y="421" width="0.0324%" height="15" fill="rgb(234,160,15)" fg:x="7695" fg:w="3"/><text x="83.3942%" y="431.50"></text></g><g><title>tc_add_shader_bindings_to_buffer_list (2 samples, 0.02%)</title><rect x="83.1551%" y="405" width="0.0216%" height="15" fill="rgb(237,34,20)" fg:x="7696" fg:w="2"/><text x="83.4051%" y="415.50"></text></g><g><title>_mesa_draw_arrays.part.0 (40 samples, 0.43%)</title><rect x="82.7553%" y="453" width="0.4322%" height="15" fill="rgb(229,97,13)" fg:x="7659" fg:w="40"/><text x="83.0053%" y="463.50"></text></g><g><title>u_vbuf_draw_vbo (9 samples, 0.10%)</title><rect x="83.0902%" y="437" width="0.0972%" height="15" fill="rgb(234,71,50)" fg:x="7690" fg:w="9"/><text x="83.3402%" y="447.50"></text></g><g><title>u_vbuf_set_driver_vertex_buffers (1 samples, 0.01%)</title><rect x="83.1767%" y="421" width="0.0108%" height="15" fill="rgb(253,155,4)" fg:x="7698" fg:w="1"/><text x="83.4267%" y="431.50"></text></g><g><title>tc_set_vertex_buffers (1 samples, 0.01%)</title><rect x="83.1767%" y="405" width="0.0108%" height="15" fill="rgb(222,185,37)" fg:x="7698" fg:w="1"/><text x="83.4267%" y="415.50"></text></g><g><title>GL_RunCommandQueue (59 samples, 0.64%)</title><rect x="82.5608%" y="469" width="0.6375%" height="15" fill="rgb(251,177,13)" fg:x="7641" fg:w="59"/><text x="82.8108%" y="479.50"></text></g><g><title>bind_texture_object (1 samples, 0.01%)</title><rect x="83.1875%" y="453" width="0.0108%" height="15" fill="rgb(250,179,40)" fg:x="7699" fg:w="1"/><text x="83.4375%" y="463.50"></text></g><g><title>SDL_GL_SwapWindowWithResult (1 samples, 0.01%)</title><rect x="83.1983%" y="469" width="0.0108%" height="15" fill="rgb(242,44,2)" fg:x="7700" fg:w="1"/><text x="83.4483%" y="479.50"></text></g><g><title>CheckFork (1 samples, 0.01%)</title><rect x="83.2091%" y="437" width="0.0108%" height="15" fill="rgb(216,177,13)" fg:x="7701" fg:w="1"/><text x="83.4591%" y="447.50"></text></g><g><title>getpid@plt (1 samples, 0.01%)</title><rect x="83.2091%" y="421" width="0.0108%" height="15" fill="rgb(216,106,43)" fg:x="7701" fg:w="1"/><text x="83.4591%" y="431.50"></text></g><g><title>___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="83.2199%" y="421" width="0.0108%" height="15" fill="rgb(216,183,2)" fg:x="7702" fg:w="1"/><text x="83.4699%" y="431.50"></text></g><g><title>_glapi_get_current@plt (2 samples, 0.02%)</title><rect x="83.2307%" y="421" width="0.0216%" height="15" fill="rgb(249,75,3)" fg:x="7703" fg:w="2"/><text x="83.4807%" y="431.50"></text></g><g><title>__glDispatchCheckMultithreaded (6 samples, 0.06%)</title><rect x="83.2199%" y="437" width="0.0648%" height="15" fill="rgb(219,67,39)" fg:x="7702" fg:w="6"/><text x="83.4699%" y="447.50"></text></g><g><title>mt_equal (3 samples, 0.03%)</title><rect x="83.2523%" y="421" width="0.0324%" height="15" fill="rgb(253,228,2)" fg:x="7705" fg:w="3"/><text x="83.5023%" y="431.50"></text></g><g><title>__pthread_equal (3 samples, 0.03%)</title><rect x="83.2523%" y="405" width="0.0324%" height="15" fill="rgb(235,138,27)" fg:x="7705" fg:w="3"/><text x="83.5023%" y="415.50"></text></g><g><title>_XLockMutex (3 samples, 0.03%)</title><rect x="83.2955%" y="421" width="0.0324%" height="15" fill="rgb(236,97,51)" fg:x="7709" fg:w="3"/><text x="83.5455%" y="431.50"></text></g><g><title>___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="83.3279%" y="421" width="0.0108%" height="15" fill="rgb(240,80,30)" fg:x="7712" fg:w="1"/><text x="83.5779%" y="431.50"></text></g><g><title>__glXInitialize (6 samples, 0.06%)</title><rect x="83.2847%" y="437" width="0.0648%" height="15" fill="rgb(230,178,19)" fg:x="7708" fg:w="6"/><text x="83.5347%" y="447.50"></text></g><g><title>pthread_mutex_lock@plt (1 samples, 0.01%)</title><rect x="83.3387%" y="421" width="0.0108%" height="15" fill="rgb(210,190,27)" fg:x="7713" fg:w="1"/><text x="83.5887%" y="431.50"></text></g><g><title>__glXVendorFromDrawable (2 samples, 0.02%)</title><rect x="83.3495%" y="437" width="0.0216%" height="15" fill="rgb(222,107,31)" fg:x="7714" fg:w="2"/><text x="83.5995%" y="447.50"></text></g><g><title>__glXLookupDisplay (2 samples, 0.02%)</title><rect x="83.3495%" y="421" width="0.0216%" height="15" fill="rgb(216,127,34)" fg:x="7714" fg:w="2"/><text x="83.5995%" y="431.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.01%)</title><rect x="83.3603%" y="405" width="0.0108%" height="15" fill="rgb(234,116,52)" fg:x="7715" fg:w="1"/><text x="83.6103%" y="415.50"></text></g><g><title>__glxHashLookup (2 samples, 0.02%)</title><rect x="83.3712%" y="437" width="0.0216%" height="15" fill="rgb(222,124,15)" fg:x="7716" fg:w="2"/><text x="83.6212%" y="447.50"></text></g><g><title>HashFind (1 samples, 0.01%)</title><rect x="83.3820%" y="421" width="0.0108%" height="15" fill="rgb(231,179,28)" fg:x="7717" fg:w="1"/><text x="83.6320%" y="431.50"></text></g><g><title>HashHash (1 samples, 0.01%)</title><rect x="83.3820%" y="405" width="0.0108%" height="15" fill="rgb(226,93,45)" fg:x="7717" fg:w="1"/><text x="83.6320%" y="415.50"></text></g><g><title>XGetXCBConnection (3 samples, 0.03%)</title><rect x="83.3928%" y="421" width="0.0324%" height="15" fill="rgb(215,8,51)" fg:x="7718" fg:w="3"/><text x="83.6428%" y="431.50"></text></g><g><title>poll_for_next_event.part.0 (2 samples, 0.02%)</title><rect x="83.4252%" y="341" width="0.0216%" height="15" fill="rgb(223,106,5)" fg:x="7721" fg:w="2"/><text x="83.6752%" y="351.50"></text></g><g><title>_xcb_in_read (1 samples, 0.01%)</title><rect x="83.4360%" y="325" width="0.0108%" height="15" fill="rgb(250,191,5)" fg:x="7722" fg:w="1"/><text x="83.6860%" y="335.50"></text></g><g><title>__GI___errno_location (1 samples, 0.01%)</title><rect x="83.4360%" y="309" width="0.0108%" height="15" fill="rgb(242,132,44)" fg:x="7722" fg:w="1"/><text x="83.6860%" y="319.50"></text></g><g><title>poll_for_event (3 samples, 0.03%)</title><rect x="83.4252%" y="357" width="0.0324%" height="15" fill="rgb(251,152,29)" fg:x="7721" fg:w="3"/><text x="83.6752%" y="367.50"></text></g><g><title>xcb_poll_for_event@plt (1 samples, 0.01%)</title><rect x="83.4468%" y="341" width="0.0108%" height="15" fill="rgb(218,179,5)" fg:x="7723" fg:w="1"/><text x="83.6968%" y="351.50"></text></g><g><title>poll_for_response (4 samples, 0.04%)</title><rect x="83.4252%" y="373" width="0.0432%" height="15" fill="rgb(227,67,19)" fg:x="7721" fg:w="4"/><text x="83.6752%" y="383.50"></text></g><g><title>xcb_poll_for_reply64 (1 samples, 0.01%)</title><rect x="83.4576%" y="357" width="0.0108%" height="15" fill="rgb(233,119,31)" fg:x="7724" fg:w="1"/><text x="83.7076%" y="367.50"></text></g><g><title>_xcb_in_read (1 samples, 0.01%)</title><rect x="83.4576%" y="341" width="0.0108%" height="15" fill="rgb(241,120,22)" fg:x="7724" fg:w="1"/><text x="83.7076%" y="351.50"></text></g><g><title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="83.4576%" y="325" width="0.0108%" height="15" fill="rgb(224,102,30)" fg:x="7724" fg:w="1"/><text x="83.7076%" y="335.50"></text></g><g><title>_XEventsQueued (5 samples, 0.05%)</title><rect x="83.4252%" y="389" width="0.0540%" height="15" fill="rgb(210,164,37)" fg:x="7721" fg:w="5"/><text x="83.6752%" y="399.50"></text></g><g><title>xcb_connection_has_error@plt (1 samples, 0.01%)</title><rect x="83.4684%" y="373" width="0.0108%" height="15" fill="rgb(226,191,16)" fg:x="7725" fg:w="1"/><text x="83.7184%" y="383.50"></text></g><g><title>_XEventsQueued@plt (2 samples, 0.02%)</title><rect x="83.4792%" y="389" width="0.0216%" height="15" fill="rgb(214,40,45)" fg:x="7726" fg:w="2"/><text x="83.7292%" y="399.50"></text></g><g><title>_XGetRequest (8 samples, 0.09%)</title><rect x="83.4252%" y="405" width="0.0864%" height="15" fill="rgb(244,29,26)" fg:x="7721" fg:w="8"/><text x="83.6752%" y="415.50"></text></g><g><title>_XFlush (1 samples, 0.01%)</title><rect x="83.5008%" y="389" width="0.0108%" height="15" fill="rgb(216,16,5)" fg:x="7728" fg:w="1"/><text x="83.7508%" y="399.50"></text></g><g><title>xcb_take_socket (1 samples, 0.01%)</title><rect x="83.5008%" y="373" width="0.0108%" height="15" fill="rgb(249,76,35)" fg:x="7728" fg:w="1"/><text x="83.7508%" y="383.50"></text></g><g><title>_xcb_out_flush_to (1 samples, 0.01%)</title><rect x="83.5008%" y="357" width="0.0108%" height="15" fill="rgb(207,11,44)" fg:x="7728" fg:w="1"/><text x="83.7508%" y="367.50"></text></g><g><title>___pthread_cond_broadcast (1 samples, 0.01%)</title><rect x="83.5008%" y="341" width="0.0108%" height="15" fill="rgb(228,190,49)" fg:x="7728" fg:w="1"/><text x="83.7508%" y="351.50"></text></g><g><title>_XInternalLockDisplay (1 samples, 0.01%)</title><rect x="83.5440%" y="389" width="0.0108%" height="15" fill="rgb(214,173,12)" fg:x="7732" fg:w="1"/><text x="83.7940%" y="399.50"></text></g><g><title>___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="83.5440%" y="373" width="0.0108%" height="15" fill="rgb(218,26,35)" fg:x="7732" fg:w="1"/><text x="83.7940%" y="383.50"></text></g><g><title>_XSend (1 samples, 0.01%)</title><rect x="83.5548%" y="389" width="0.0108%" height="15" fill="rgb(220,200,19)" fg:x="7733" fg:w="1"/><text x="83.8048%" y="399.50"></text></g><g><title>xcb_writev (1 samples, 0.01%)</title><rect x="83.5548%" y="373" width="0.0108%" height="15" fill="rgb(239,95,49)" fg:x="7733" fg:w="1"/><text x="83.8048%" y="383.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="83.5656%" y="389" width="0.0108%" height="15" fill="rgb(235,85,53)" fg:x="7734" fg:w="1"/><text x="83.8156%" y="399.50"></text></g><g><title>DRI2FindDisplay (1 samples, 0.01%)</title><rect x="83.5764%" y="341" width="0.0108%" height="15" fill="rgb(233,133,31)" fg:x="7735" fg:w="1"/><text x="83.8264%" y="351.50"></text></g><g><title>__glXInitialize (1 samples, 0.01%)</title><rect x="83.5873%" y="325" width="0.0108%" height="15" fill="rgb(218,25,20)" fg:x="7736" fg:w="1"/><text x="83.8373%" y="335.50"></text></g><g><title>handle_response (3 samples, 0.03%)</title><rect x="83.5764%" y="389" width="0.0324%" height="15" fill="rgb(252,210,38)" fg:x="7735" fg:w="3"/><text x="83.8264%" y="399.50"></text></g><g><title>_XEnq (3 samples, 0.03%)</title><rect x="83.5764%" y="373" width="0.0324%" height="15" fill="rgb(242,134,21)" fg:x="7735" fg:w="3"/><text x="83.8264%" y="383.50"></text></g><g><title>DRI2WireToEvent (3 samples, 0.03%)</title><rect x="83.5764%" y="357" width="0.0324%" height="15" fill="rgb(213,28,48)" fg:x="7735" fg:w="3"/><text x="83.8264%" y="367.50"></text></g><g><title>dri2GetGlxDrawableFromXDrawableId (2 samples, 0.02%)</title><rect x="83.5873%" y="341" width="0.0216%" height="15" fill="rgb(250,196,2)" fg:x="7736" fg:w="2"/><text x="83.8373%" y="351.50"></text></g><g><title>__glxHashLookup (1 samples, 0.01%)</title><rect x="83.5981%" y="325" width="0.0108%" height="15" fill="rgb(227,5,17)" fg:x="7737" fg:w="1"/><text x="83.8481%" y="335.50"></text></g><g><title>HashFind (1 samples, 0.01%)</title><rect x="83.5981%" y="309" width="0.0108%" height="15" fill="rgb(221,226,24)" fg:x="7737" fg:w="1"/><text x="83.8481%" y="319.50"></text></g><g><title>HashHash (1 samples, 0.01%)</title><rect x="83.5981%" y="293" width="0.0108%" height="15" fill="rgb(211,5,48)" fg:x="7737" fg:w="1"/><text x="83.8481%" y="303.50"></text></g><g><title>poll_for_response (1 samples, 0.01%)</title><rect x="83.6089%" y="389" width="0.0108%" height="15" fill="rgb(219,150,6)" fg:x="7738" fg:w="1"/><text x="83.8589%" y="399.50"></text></g><g><title>poll_for_event (1 samples, 0.01%)</title><rect x="83.6089%" y="373" width="0.0108%" height="15" fill="rgb(251,46,16)" fg:x="7738" fg:w="1"/><text x="83.8589%" y="383.50"></text></g><g><title>poll_for_next_event.part.0 (1 samples, 0.01%)</title><rect x="83.6089%" y="357" width="0.0108%" height="15" fill="rgb(220,204,40)" fg:x="7738" fg:w="1"/><text x="83.8589%" y="367.50"></text></g><g><title>pthread_cond_broadcast@plt (1 samples, 0.01%)</title><rect x="83.6197%" y="389" width="0.0108%" height="15" fill="rgb(211,85,2)" fg:x="7739" fg:w="1"/><text x="83.8697%" y="399.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.05%)</title><rect x="83.6305%" y="325" width="0.0540%" height="15" fill="rgb(229,17,7)" fg:x="7740" fg:w="5"/><text x="83.8805%" y="335.50"></text></g><g><title>_XReply (17 samples, 0.18%)</title><rect x="83.5116%" y="405" width="0.1837%" height="15" fill="rgb(239,72,28)" fg:x="7729" fg:w="17"/><text x="83.7616%" y="415.50"></text></g><g><title>xcb_wait_for_reply64 (6 samples, 0.06%)</title><rect x="83.6305%" y="389" width="0.0648%" height="15" fill="rgb(230,47,54)" fg:x="7740" fg:w="6"/><text x="83.8805%" y="399.50"></text></g><g><title>wait_for_reply (6 samples, 0.06%)</title><rect x="83.6305%" y="373" width="0.0648%" height="15" fill="rgb(214,50,8)" fg:x="7740" fg:w="6"/><text x="83.8805%" y="383.50"></text></g><g><title>_xcb_conn_wait (6 samples, 0.06%)</title><rect x="83.6305%" y="357" width="0.0648%" height="15" fill="rgb(216,198,43)" fg:x="7740" fg:w="6"/><text x="83.8805%" y="367.50"></text></g><g><title>_xcb_in_read (6 samples, 0.06%)</title><rect x="83.6305%" y="341" width="0.0648%" height="15" fill="rgb(234,20,35)" fg:x="7740" fg:w="6"/><text x="83.8805%" y="351.50"></text></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="83.6845%" y="325" width="0.0108%" height="15" fill="rgb(254,45,19)" fg:x="7745" fg:w="1"/><text x="83.9345%" y="335.50"></text></g><g><title>XSync (27 samples, 0.29%)</title><rect x="83.4252%" y="421" width="0.2917%" height="15" fill="rgb(219,14,44)" fg:x="7721" fg:w="27"/><text x="83.6752%" y="431.50"></text></g><g><title>_XReply@plt (2 samples, 0.02%)</title><rect x="83.6953%" y="405" width="0.0216%" height="15" fill="rgb(217,220,26)" fg:x="7746" fg:w="2"/><text x="83.9453%" y="415.50"></text></g><g><title>tc_call_bind_sampler_states (1 samples, 0.01%)</title><rect x="83.7601%" y="341" width="0.0108%" height="15" fill="rgb(213,158,28)" fg:x="7752" fg:w="1"/><text x="84.0101%" y="351.50"></text></g><g><title>iris_bind_sampler_states (1 samples, 0.01%)</title><rect x="83.7601%" y="325" width="0.0108%" height="15" fill="rgb(252,51,52)" fg:x="7752" fg:w="1"/><text x="84.0101%" y="335.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="83.7709%" y="325" width="0.0108%" height="15" fill="rgb(246,89,16)" fg:x="7753" fg:w="1"/><text x="84.0209%" y="335.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="83.7709%" y="309" width="0.0108%" height="15" fill="rgb(216,158,49)" fg:x="7753" fg:w="1"/><text x="84.0209%" y="319.50"></text></g><g><title>_int_free_merge_chunk (1 samples, 0.01%)</title><rect x="83.7709%" y="293" width="0.0108%" height="15" fill="rgb(236,107,19)" fg:x="7753" fg:w="1"/><text x="84.0209%" y="303.50"></text></g><g><title>_int_free_create_chunk (1 samples, 0.01%)</title><rect x="83.7709%" y="277" width="0.0108%" height="15" fill="rgb(228,185,30)" fg:x="7753" fg:w="1"/><text x="84.0209%" y="287.50"></text></g><g><title>blorp_batch_init (1 samples, 0.01%)</title><rect x="83.8033%" y="309" width="0.0108%" height="15" fill="rgb(246,134,8)" fg:x="7756" fg:w="1"/><text x="84.0533%" y="319.50"></text></g><g><title>blorp_params_init (1 samples, 0.01%)</title><rect x="83.8250%" y="293" width="0.0108%" height="15" fill="rgb(214,143,50)" fg:x="7758" fg:w="1"/><text x="84.0750%" y="303.50"></text></g><g><title>blorp_compile_fs (1 samples, 0.01%)</title><rect x="83.8790%" y="277" width="0.0108%" height="15" fill="rgb(228,75,8)" fg:x="7763" fg:w="1"/><text x="84.1290%" y="287.50"></text></g><g><title>brw_compile_fs (1 samples, 0.01%)</title><rect x="83.8790%" y="261" width="0.0108%" height="15" fill="rgb(207,175,4)" fg:x="7763" fg:w="1"/><text x="84.1290%" y="271.50"></text></g><g><title>fs_visitor::run_fs (1 samples, 0.01%)</title><rect x="83.8790%" y="245" width="0.0108%" height="15" fill="rgb(205,108,24)" fg:x="7763" fg:w="1"/><text x="84.1290%" y="255.50"></text></g><g><title>fs_visitor::emit_interpolation_setup_gfx6 (1 samples, 0.01%)</title><rect x="83.8790%" y="229" width="0.0108%" height="15" fill="rgb(244,120,49)" fg:x="7763" fg:w="1"/><text x="84.1290%" y="239.50"></text></g><g><title>fs_inst::fs_inst (1 samples, 0.01%)</title><rect x="83.8790%" y="213" width="0.0108%" height="15" fill="rgb(223,47,38)" fg:x="7763" fg:w="1"/><text x="84.1290%" y="223.50"></text></g><g><title>operator new (1 samples, 0.01%)</title><rect x="83.8790%" y="197" width="0.0108%" height="15" fill="rgb(229,179,11)" fg:x="7763" fg:w="1"/><text x="84.1290%" y="207.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="83.8790%" y="181" width="0.0108%" height="15" fill="rgb(231,122,1)" fg:x="7763" fg:w="1"/><text x="84.1290%" y="191.50"></text></g><g><title>__memset_chk@plt (1 samples, 0.01%)</title><rect x="83.9762%" y="245" width="0.0108%" height="15" fill="rgb(245,119,9)" fg:x="7772" fg:w="1"/><text x="84.2262%" y="255.50"></text></g><g><title>blorp_alloc_vertex_buffer.isra.0 (1 samples, 0.01%)</title><rect x="83.9870%" y="245" width="0.0108%" height="15" fill="rgb(241,163,25)" fg:x="7773" fg:w="1"/><text x="84.2370%" y="255.50"></text></g><g><title>stream_state (1 samples, 0.01%)</title><rect x="83.9870%" y="229" width="0.0108%" height="15" fill="rgb(217,214,3)" fg:x="7773" fg:w="1"/><text x="84.2370%" y="239.50"></text></g><g><title>u_upload_alloc (1 samples, 0.01%)</title><rect x="83.9870%" y="213" width="0.0108%" height="15" fill="rgb(240,86,28)" fg:x="7773" fg:w="1"/><text x="84.2370%" y="223.50"></text></g><g><title>iris_resource_create_for_buffer (1 samples, 0.01%)</title><rect x="83.9870%" y="197" width="0.0108%" height="15" fill="rgb(215,47,9)" fg:x="7773" fg:w="1"/><text x="84.2370%" y="207.50"></text></g><g><title>iris_alloc_resource (1 samples, 0.01%)</title><rect x="83.9870%" y="181" width="0.0108%" height="15" fill="rgb(252,25,45)" fg:x="7773" fg:w="1"/><text x="84.2370%" y="191.50"></text></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="83.9870%" y="165" width="0.0108%" height="15" fill="rgb(251,164,9)" fg:x="7773" fg:w="1"/><text x="84.2370%" y="175.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="83.9870%" y="149" width="0.0108%" height="15" fill="rgb(233,194,0)" fg:x="7773" fg:w="1"/><text x="84.2370%" y="159.50"></text></g><g><title>blorp_emit_depth_stencil_config (2 samples, 0.02%)</title><rect x="83.9978%" y="245" width="0.0216%" height="15" fill="rgb(249,111,24)" fg:x="7774" fg:w="2"/><text x="84.2478%" y="255.50"></text></g><g><title>isl_gfx9_emit_depth_stencil_hiz_s (2 samples, 0.02%)</title><rect x="83.9978%" y="229" width="0.0216%" height="15" fill="rgb(250,223,3)" fg:x="7774" fg:w="2"/><text x="84.2478%" y="239.50"></text></g><g><title>blorp_emit_cc_viewport.isra.0 (1 samples, 0.01%)</title><rect x="84.0627%" y="229" width="0.0108%" height="15" fill="rgb(236,178,37)" fg:x="7780" fg:w="1"/><text x="84.3127%" y="239.50"></text></g><g><title>blorp_emit_pipeline (9 samples, 0.10%)</title><rect x="84.0194%" y="245" width="0.0972%" height="15" fill="rgb(241,158,50)" fg:x="7776" fg:w="9"/><text x="84.2694%" y="255.50"></text></g><g><title>intel_get_urb_config (4 samples, 0.04%)</title><rect x="84.0735%" y="229" width="0.0432%" height="15" fill="rgb(213,121,41)" fg:x="7781" fg:w="4"/><text x="84.3235%" y="239.50"></text></g><g><title>intel_get_l3_config_urb_size (2 samples, 0.02%)</title><rect x="84.0951%" y="213" width="0.0216%" height="15" fill="rgb(240,92,3)" fg:x="7783" fg:w="2"/><text x="84.3451%" y="223.50"></text></g><g><title>add_bo_to_batch (1 samples, 0.01%)</title><rect x="84.1383%" y="213" width="0.0108%" height="15" fill="rgb(205,123,3)" fg:x="7787" fg:w="1"/><text x="84.3883%" y="223.50"></text></g><g><title>blorp_emit_surface_state.constprop.0 (6 samples, 0.06%)</title><rect x="84.1167%" y="229" width="0.0648%" height="15" fill="rgb(205,97,47)" fg:x="7785" fg:w="6"/><text x="84.3667%" y="239.50"></text></g><g><title>isl_gfx9_surf_fill_state_s (3 samples, 0.03%)</title><rect x="84.1491%" y="213" width="0.0324%" height="15" fill="rgb(247,152,14)" fg:x="7788" fg:w="3"/><text x="84.3991%" y="223.50"></text></g><g><title>isl_tiling_get_info (1 samples, 0.01%)</title><rect x="84.1707%" y="197" width="0.0108%" height="15" fill="rgb(248,195,53)" fg:x="7790" fg:w="1"/><text x="84.4207%" y="207.50"></text></g><g><title>iris_update_binder_address (1 samples, 0.01%)</title><rect x="84.1815%" y="229" width="0.0108%" height="15" fill="rgb(226,201,16)" fg:x="7791" fg:w="1"/><text x="84.4315%" y="239.50"></text></g><g><title>iris_blorp_exec (29 samples, 0.31%)</title><rect x="83.8898%" y="277" width="0.3133%" height="15" fill="rgb(205,98,0)" fg:x="7764" fg:w="29"/><text x="84.1398%" y="287.50"></text></g><g><title>blorp_exec (25 samples, 0.27%)</title><rect x="83.9330%" y="261" width="0.2701%" height="15" fill="rgb(214,191,48)" fg:x="7768" fg:w="25"/><text x="84.1830%" y="271.50"></text></g><g><title>blorp_setup_binding_table (8 samples, 0.09%)</title><rect x="84.1167%" y="245" width="0.0864%" height="15" fill="rgb(237,112,39)" fg:x="7785" fg:w="8"/><text x="84.3667%" y="255.50"></text></g><g><title>iris_use_pinned_bo (1 samples, 0.01%)</title><rect x="84.1923%" y="229" width="0.0108%" height="15" fill="rgb(247,203,27)" fg:x="7792" fg:w="1"/><text x="84.4423%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="84.2031%" y="245" width="0.0108%" height="15" fill="rgb(235,124,28)" fg:x="7793" fg:w="1"/><text x="84.4531%" y="255.50"></text></g><g><title>_mesa_hash_table_search (2 samples, 0.02%)</title><rect x="84.2139%" y="245" width="0.0216%" height="15" fill="rgb(208,207,46)" fg:x="7794" fg:w="2"/><text x="84.4639%" y="255.50"></text></g><g><title>_mesa_hash_data (2 samples, 0.02%)</title><rect x="84.2139%" y="229" width="0.0216%" height="15" fill="rgb(234,176,4)" fg:x="7794" fg:w="2"/><text x="84.4639%" y="239.50"></text></g><g><title>blorp_blit (41 samples, 0.44%)</title><rect x="83.8142%" y="309" width="0.4430%" height="15" fill="rgb(230,133,28)" fg:x="7757" fg:w="41"/><text x="84.0642%" y="319.50"></text></g><g><title>do_blorp_blit (39 samples, 0.42%)</title><rect x="83.8358%" y="293" width="0.4214%" height="15" fill="rgb(211,137,40)" fg:x="7759" fg:w="39"/><text x="84.0858%" y="303.50"></text></g><g><title>iris_blorp_lookup_shader (5 samples, 0.05%)</title><rect x="84.2031%" y="277" width="0.0540%" height="15" fill="rgb(254,35,13)" fg:x="7793" fg:w="5"/><text x="84.4531%" y="287.50"></text></g><g><title>iris_find_cached_shader (5 samples, 0.05%)</title><rect x="84.2031%" y="261" width="0.0540%" height="15" fill="rgb(225,49,51)" fg:x="7793" fg:w="5"/><text x="84.4531%" y="271.50"></text></g><g><title>hash_table_search (2 samples, 0.02%)</title><rect x="84.2355%" y="245" width="0.0216%" height="15" fill="rgb(251,10,15)" fg:x="7796" fg:w="2"/><text x="84.4855%" y="255.50"></text></g><g><title>keybox_equals (2 samples, 0.02%)</title><rect x="84.2355%" y="229" width="0.0216%" height="15" fill="rgb(228,207,15)" fg:x="7796" fg:w="2"/><text x="84.4855%" y="239.50"></text></g><g><title>iris_blorp_surf_for_resource (2 samples, 0.02%)</title><rect x="84.2572%" y="309" width="0.0216%" height="15" fill="rgb(241,99,19)" fg:x="7798" fg:w="2"/><text x="84.5072%" y="319.50"></text></g><g><title>iris_emit_buffer_barrier_for (1 samples, 0.01%)</title><rect x="84.2788%" y="309" width="0.0108%" height="15" fill="rgb(207,104,49)" fg:x="7800" fg:w="1"/><text x="84.5288%" y="319.50"></text></g><g><title>hash_table_search (1 samples, 0.01%)</title><rect x="84.3004%" y="277" width="0.0108%" height="15" fill="rgb(234,99,18)" fg:x="7802" fg:w="1"/><text x="84.5504%" y="287.50"></text></g><g><title>iris_blit (51 samples, 0.55%)</title><rect x="83.7817%" y="325" width="0.5511%" height="15" fill="rgb(213,191,49)" fg:x="7754" fg:w="51"/><text x="84.0317%" y="335.50"></text></g><g><title>iris_resource_prepare_render (4 samples, 0.04%)</title><rect x="84.2896%" y="309" width="0.0432%" height="15" fill="rgb(210,226,19)" fg:x="7801" fg:w="4"/><text x="84.5396%" y="319.50"></text></g><g><title>iris_resource_prepare_access.part.0 (4 samples, 0.04%)</title><rect x="84.2896%" y="293" width="0.0432%" height="15" fill="rgb(229,97,18)" fg:x="7801" fg:w="4"/><text x="84.5396%" y="303.50"></text></g><g><title>isl_aux_prepare_access (2 samples, 0.02%)</title><rect x="84.3112%" y="277" width="0.0216%" height="15" fill="rgb(211,167,15)" fg:x="7803" fg:w="2"/><text x="84.5612%" y="287.50"></text></g><g><title>tc_call_blit (54 samples, 0.58%)</title><rect x="83.7709%" y="341" width="0.5835%" height="15" fill="rgb(210,169,34)" fg:x="7753" fg:w="54"/><text x="84.0209%" y="351.50"></text></g><g><title>iris_resource_destroy (2 samples, 0.02%)</title><rect x="84.3328%" y="325" width="0.0216%" height="15" fill="rgb(241,121,31)" fg:x="7805" fg:w="2"/><text x="84.5828%" y="335.50"></text></g><g><title>iris_bo_unreference.part.0 (1 samples, 0.01%)</title><rect x="84.3436%" y="309" width="0.0108%" height="15" fill="rgb(232,40,11)" fg:x="7806" fg:w="1"/><text x="84.5936%" y="319.50"></text></g><g><title>iris_predraw_flush_buffers (3 samples, 0.03%)</title><rect x="84.3652%" y="309" width="0.0324%" height="15" fill="rgb(205,86,26)" fg:x="7808" fg:w="3"/><text x="84.6152%" y="319.50"></text></g><g><title>iris_get_depth_stencil_resources (1 samples, 0.01%)</title><rect x="84.3976%" y="293" width="0.0108%" height="15" fill="rgb(231,126,28)" fg:x="7811" fg:w="1"/><text x="84.6476%" y="303.50"></text></g><g><title>iris_predraw_resolve_framebuffer (2 samples, 0.02%)</title><rect x="84.3976%" y="309" width="0.0216%" height="15" fill="rgb(219,221,18)" fg:x="7811" fg:w="2"/><text x="84.6476%" y="319.50"></text></g><g><title>iris_resource_prepare_access.part.0 (1 samples, 0.01%)</title><rect x="84.4084%" y="293" width="0.0108%" height="15" fill="rgb(211,40,0)" fg:x="7812" fg:w="1"/><text x="84.6584%" y="303.50"></text></g><g><title>hash_table_search (1 samples, 0.01%)</title><rect x="84.4084%" y="277" width="0.0108%" height="15" fill="rgb(239,85,43)" fg:x="7812" fg:w="1"/><text x="84.6584%" y="287.50"></text></g><g><title>iris_predraw_resolve_inputs (4 samples, 0.04%)</title><rect x="84.4192%" y="309" width="0.0432%" height="15" fill="rgb(231,55,21)" fg:x="7813" fg:w="4"/><text x="84.6692%" y="319.50"></text></g><g><title>iris_emit_buffer_barrier_for (3 samples, 0.03%)</title><rect x="84.4300%" y="293" width="0.0324%" height="15" fill="rgb(225,184,43)" fg:x="7814" fg:w="3"/><text x="84.6800%" y="303.50"></text></g><g><title>iris_emit_raw_pipe_control (3 samples, 0.03%)</title><rect x="84.4300%" y="277" width="0.0324%" height="15" fill="rgb(251,158,41)" fg:x="7814" fg:w="3"/><text x="84.6800%" y="287.50"></text></g><g><title>iris_update_compiled_shaders (2 samples, 0.02%)</title><rect x="84.4625%" y="309" width="0.0216%" height="15" fill="rgb(234,159,37)" fg:x="7817" fg:w="2"/><text x="84.7125%" y="319.50"></text></g><g><title>iris_update_pull_constant_descriptors (1 samples, 0.01%)</title><rect x="84.4733%" y="293" width="0.0108%" height="15" fill="rgb(216,204,22)" fg:x="7818" fg:w="1"/><text x="84.7233%" y="303.50"></text></g><g><title>add_bo_to_batch (2 samples, 0.02%)</title><rect x="84.7110%" y="293" width="0.0216%" height="15" fill="rgb(214,17,3)" fg:x="7840" fg:w="2"/><text x="84.9610%" y="303.50"></text></g><g><title>iris_emit_buffer_barrier_for (2 samples, 0.02%)</title><rect x="84.7326%" y="293" width="0.0216%" height="15" fill="rgb(212,111,17)" fg:x="7842" fg:w="2"/><text x="84.9826%" y="303.50"></text></g><g><title>iris_emit_sbe (5 samples, 0.05%)</title><rect x="84.7542%" y="293" width="0.0540%" height="15" fill="rgb(221,157,24)" fg:x="7844" fg:w="5"/><text x="85.0042%" y="303.50"></text></g><g><title>iris_use_pinned_bo (3 samples, 0.03%)</title><rect x="84.8082%" y="293" width="0.0324%" height="15" fill="rgb(252,16,13)" fg:x="7849" fg:w="3"/><text x="85.0582%" y="303.50"></text></g><g><title>tc_call_draw_single (47 samples, 0.51%)</title><rect x="84.3544%" y="341" width="0.5078%" height="15" fill="rgb(221,62,2)" fg:x="7807" fg:w="47"/><text x="84.6044%" y="351.50"></text></g><g><title>iris_draw_vbo (46 samples, 0.50%)</title><rect x="84.3652%" y="325" width="0.4970%" height="15" fill="rgb(247,87,22)" fg:x="7808" fg:w="46"/><text x="84.6152%" y="335.50"></text></g><g><title>iris_upload_render_state (35 samples, 0.38%)</title><rect x="84.4841%" y="309" width="0.3782%" height="15" fill="rgb(215,73,9)" fg:x="7819" fg:w="35"/><text x="84.7341%" y="319.50"></text></g><g><title>stream_state (2 samples, 0.02%)</title><rect x="84.8406%" y="293" width="0.0216%" height="15" fill="rgb(207,175,33)" fg:x="7852" fg:w="2"/><text x="85.0906%" y="303.50"></text></g><g><title>u_upload_alloc (1 samples, 0.01%)</title><rect x="84.8514%" y="277" width="0.0108%" height="15" fill="rgb(243,129,54)" fg:x="7853" fg:w="1"/><text x="85.1014%" y="287.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="84.8730%" y="293" width="0.0108%" height="15" fill="rgb(227,119,45)" fg:x="7855" fg:w="1"/><text x="85.1230%" y="303.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="84.8838%" y="277" width="0.0108%" height="15" fill="rgb(205,109,36)" fg:x="7856" fg:w="1"/><text x="85.1338%" y="287.50"></text></g><g><title>tc_call_set_sampler_views (4 samples, 0.04%)</title><rect x="84.8622%" y="341" width="0.0432%" height="15" fill="rgb(205,6,39)" fg:x="7854" fg:w="4"/><text x="85.1122%" y="351.50"></text></g><g><title>iris_set_sampler_views (4 samples, 0.04%)</title><rect x="84.8622%" y="325" width="0.0432%" height="15" fill="rgb(221,32,16)" fg:x="7854" fg:w="4"/><text x="85.1122%" y="335.50"></text></g><g><title>iris_sampler_view_destroy (3 samples, 0.03%)</title><rect x="84.8730%" y="309" width="0.0324%" height="15" fill="rgb(228,144,50)" fg:x="7855" fg:w="3"/><text x="85.1230%" y="319.50"></text></g><g><title>iris_resource_destroy (2 samples, 0.02%)</title><rect x="84.8838%" y="293" width="0.0216%" height="15" fill="rgb(229,201,53)" fg:x="7856" fg:w="2"/><text x="85.1338%" y="303.50"></text></g><g><title>iris_bo_unreference.part.0 (1 samples, 0.01%)</title><rect x="84.8947%" y="277" width="0.0108%" height="15" fill="rgb(249,153,27)" fg:x="7857" fg:w="1"/><text x="85.1447%" y="287.50"></text></g><g><title>pb_slab_free (1 samples, 0.01%)</title><rect x="84.8947%" y="261" width="0.0108%" height="15" fill="rgb(227,106,25)" fg:x="7857" fg:w="1"/><text x="85.1447%" y="271.50"></text></g><g><title>tc_batch_execute (109 samples, 1.18%)</title><rect x="83.7601%" y="357" width="1.1777%" height="15" fill="rgb(230,65,29)" fg:x="7752" fg:w="109"/><text x="84.0101%" y="367.50"></text></g><g><title>tc_call_texture_unmap (3 samples, 0.03%)</title><rect x="84.9055%" y="341" width="0.0324%" height="15" fill="rgb(221,57,46)" fg:x="7858" fg:w="3"/><text x="85.1555%" y="351.50"></text></g><g><title>iris_transfer_unmap (3 samples, 0.03%)</title><rect x="84.9055%" y="325" width="0.0324%" height="15" fill="rgb(229,161,17)" fg:x="7858" fg:w="3"/><text x="85.1555%" y="335.50"></text></g><g><title>iris_dirty_for_history (2 samples, 0.02%)</title><rect x="84.9163%" y="309" width="0.0216%" height="15" fill="rgb(222,213,11)" fg:x="7859" fg:w="2"/><text x="85.1663%" y="319.50"></text></g><g><title>_tc_sync.constprop.0 (114 samples, 1.23%)</title><rect x="83.7385%" y="373" width="1.2318%" height="15" fill="rgb(235,35,13)" fg:x="7750" fg:w="114"/><text x="83.9885%" y="383.50"></text></g><g><title>tc_begin_next_buffer_list (3 samples, 0.03%)</title><rect x="84.9379%" y="357" width="0.0324%" height="15" fill="rgb(233,158,34)" fg:x="7861" fg:w="3"/><text x="85.1879%" y="367.50"></text></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="84.9919%" y="357" width="0.0108%" height="15" fill="rgb(215,151,48)" fg:x="7866" fg:w="1"/><text x="85.2419%" y="367.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="84.9919%" y="341" width="0.0108%" height="15" fill="rgb(229,84,14)" fg:x="7866" fg:w="1"/><text x="85.2419%" y="351.50"></text></g><g><title>iris_batch_update_syncobjs (4 samples, 0.04%)</title><rect x="85.0459%" y="325" width="0.0432%" height="15" fill="rgb(229,68,14)" fg:x="7871" fg:w="4"/><text x="85.2959%" y="335.50"></text></g><g><title>i915_batch_submit (9 samples, 0.10%)</title><rect x="85.0027%" y="341" width="0.0972%" height="15" fill="rgb(243,106,26)" fg:x="7867" fg:w="9"/><text x="85.2527%" y="351.50"></text></g><g><title>iris_bo_unreference.part.0 (1 samples, 0.01%)</title><rect x="85.0891%" y="325" width="0.0108%" height="15" fill="rgb(206,45,38)" fg:x="7875" fg:w="1"/><text x="85.3391%" y="335.50"></text></g><g><title>i915_bo_madvise (1 samples, 0.01%)</title><rect x="85.0891%" y="309" width="0.0108%" height="15" fill="rgb(226,6,15)" fg:x="7875" fg:w="1"/><text x="85.3391%" y="319.50"></text></g><g><title>__GI___ioctl (1 samples, 0.01%)</title><rect x="85.0891%" y="293" width="0.0108%" height="15" fill="rgb(232,22,54)" fg:x="7875" fg:w="1"/><text x="85.3391%" y="303.50"></text></g><g><title>tc_flush (131 samples, 1.42%)</title><rect x="83.7169%" y="389" width="1.4155%" height="15" fill="rgb(229,222,32)" fg:x="7748" fg:w="131"/><text x="83.9669%" y="399.50"></text></g><g><title>iris_fence_flush (15 samples, 0.16%)</title><rect x="84.9703%" y="373" width="0.1621%" height="15" fill="rgb(228,62,29)" fg:x="7864" fg:w="15"/><text x="85.2203%" y="383.50"></text></g><g><title>_iris_batch_flush (12 samples, 0.13%)</title><rect x="85.0027%" y="357" width="0.1297%" height="15" fill="rgb(251,103,34)" fg:x="7867" fg:w="12"/><text x="85.2527%" y="367.50"></text></g><g><title>iris_fine_fence_new (3 samples, 0.03%)</title><rect x="85.0999%" y="341" width="0.0324%" height="15" fill="rgb(233,12,30)" fg:x="7876" fg:w="3"/><text x="85.3499%" y="351.50"></text></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="85.1216%" y="325" width="0.0108%" height="15" fill="rgb(238,52,0)" fg:x="7878" fg:w="1"/><text x="85.3716%" y="335.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.1216%" y="309" width="0.0108%" height="15" fill="rgb(223,98,5)" fg:x="7878" fg:w="1"/><text x="85.3716%" y="319.50"></text></g><g><title>dri_flush (132 samples, 1.43%)</title><rect x="83.7169%" y="421" width="1.4263%" height="15" fill="rgb(228,75,37)" fg:x="7748" fg:w="132"/><text x="83.9669%" y="431.50"></text></g><g><title>st_context_flush (132 samples, 1.43%)</title><rect x="83.7169%" y="405" width="1.4263%" height="15" fill="rgb(205,115,49)" fg:x="7748" fg:w="132"/><text x="83.9669%" y="415.50"></text></g><g><title>vbo_exec_FlushVertices (1 samples, 0.01%)</title><rect x="85.1324%" y="389" width="0.0108%" height="15" fill="rgb(250,154,43)" fg:x="7879" fg:w="1"/><text x="85.3824%" y="399.50"></text></g><g><title>vbo_exec_copy_to_current (1 samples, 0.01%)</title><rect x="85.1324%" y="373" width="0.0108%" height="15" fill="rgb(226,43,29)" fg:x="7879" fg:w="1"/><text x="85.3824%" y="383.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="85.1324%" y="357" width="0.0108%" height="15" fill="rgb(249,228,39)" fg:x="7879" fg:w="1"/><text x="85.3824%" y="367.50"></text></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="85.1432%" y="421" width="0.0108%" height="15" fill="rgb(216,79,43)" fg:x="7880" fg:w="1"/><text x="85.3932%" y="431.50"></text></g><g><title>xcb_dri2_swap_buffers_reply (1 samples, 0.01%)</title><rect x="85.1540%" y="421" width="0.0108%" height="15" fill="rgb(228,95,12)" fg:x="7881" fg:w="1"/><text x="85.4040%" y="431.50"></text></g><g><title>xcb_send_request64@plt (3 samples, 0.03%)</title><rect x="85.1648%" y="389" width="0.0324%" height="15" fill="rgb(249,221,15)" fg:x="7882" fg:w="3"/><text x="85.4148%" y="399.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="85.2080%" y="357" width="0.0108%" height="15" fill="rgb(233,34,13)" fg:x="7886" fg:w="1"/><text x="85.4580%" y="367.50"></text></g><g><title>pthread_cond_broadcast@plt (1 samples, 0.01%)</title><rect x="85.2188%" y="357" width="0.0108%" height="15" fill="rgb(214,103,39)" fg:x="7887" fg:w="1"/><text x="85.4688%" y="367.50"></text></g><g><title>get_socket_back (3 samples, 0.03%)</title><rect x="85.2080%" y="373" width="0.0324%" height="15" fill="rgb(251,126,39)" fg:x="7886" fg:w="3"/><text x="85.4580%" y="383.50"></text></g><g><title>return_socket (1 samples, 0.01%)</title><rect x="85.2296%" y="357" width="0.0108%" height="15" fill="rgb(214,216,36)" fg:x="7888" fg:w="1"/><text x="85.4796%" y="367.50"></text></g><g><title>_XSend (1 samples, 0.01%)</title><rect x="85.2296%" y="341" width="0.0108%" height="15" fill="rgb(220,221,8)" fg:x="7888" fg:w="1"/><text x="85.4796%" y="351.50"></text></g><g><title>xcb_get_extension_data (2 samples, 0.02%)</title><rect x="85.2404%" y="373" width="0.0216%" height="15" fill="rgb(240,216,3)" fg:x="7889" fg:w="2"/><text x="85.4904%" y="383.50"></text></g><g><title>___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="85.2512%" y="357" width="0.0108%" height="15" fill="rgb(232,218,17)" fg:x="7890" fg:w="1"/><text x="85.5012%" y="367.50"></text></g><g><title>sdl2::render::Canvas&lt;T&gt;::present (252 samples, 2.72%)</title><rect x="82.5608%" y="501" width="2.7229%" height="15" fill="rgb(229,163,45)" fg:x="7641" fg:w="252"/><text x="82.8108%" y="511.50">sd..</text></g><g><title>SDL_RenderPresent_REAL (252 samples, 2.72%)</title><rect x="82.5608%" y="485" width="2.7229%" height="15" fill="rgb(231,110,42)" fg:x="7641" fg:w="252"/><text x="82.8108%" y="495.50">SD..</text></g><g><title>X11_GL_SwapWindow (192 samples, 2.07%)</title><rect x="83.2091%" y="469" width="2.0746%" height="15" fill="rgb(208,170,48)" fg:x="7701" fg:w="192"/><text x="83.4591%" y="479.50">X..</text></g><g><title>glXSwapBuffers (192 samples, 2.07%)</title><rect x="83.2091%" y="453" width="2.0746%" height="15" fill="rgb(239,116,25)" fg:x="7701" fg:w="192"/><text x="83.4591%" y="463.50">g..</text></g><g><title>dri2SwapBuffers (175 samples, 1.89%)</title><rect x="83.3928%" y="437" width="1.8909%" height="15" fill="rgb(219,200,50)" fg:x="7718" fg:w="175"/><text x="83.6428%" y="447.50">d..</text></g><g><title>xcb_dri2_swap_buffers_unchecked (11 samples, 0.12%)</title><rect x="85.1648%" y="421" width="0.1189%" height="15" fill="rgb(245,200,0)" fg:x="7882" fg:w="11"/><text x="85.4148%" y="431.50"></text></g><g><title>xcb_send_request (11 samples, 0.12%)</title><rect x="85.1648%" y="405" width="0.1189%" height="15" fill="rgb(245,119,33)" fg:x="7882" fg:w="11"/><text x="85.4148%" y="415.50"></text></g><g><title>xcb_send_request_with_fds64 (8 samples, 0.09%)</title><rect x="85.1972%" y="389" width="0.0864%" height="15" fill="rgb(231,125,12)" fg:x="7885" fg:w="8"/><text x="85.4472%" y="399.50"></text></g><g><title>xcb_get_extension_data@plt (2 samples, 0.02%)</title><rect x="85.2620%" y="373" width="0.0216%" height="15" fill="rgb(216,96,41)" fg:x="7891" fg:w="2"/><text x="85.5120%" y="383.50"></text></g><g><title>SDL_CalculateBlit (2 samples, 0.02%)</title><rect x="85.3160%" y="437" width="0.0216%" height="15" fill="rgb(248,43,45)" fg:x="7896" fg:w="2"/><text x="85.5660%" y="447.50"></text></g><g><title>SDL_CalculateBlitN (2 samples, 0.02%)</title><rect x="85.3160%" y="421" width="0.0216%" height="15" fill="rgb(217,222,7)" fg:x="7896" fg:w="2"/><text x="85.5660%" y="431.50"></text></g><g><title>SDL_InitFormat (2 samples, 0.02%)</title><rect x="85.3377%" y="437" width="0.0216%" height="15" fill="rgb(233,28,6)" fg:x="7898" fg:w="2"/><text x="85.5877%" y="447.50"></text></g><g><title>SDL_InvalidateMap (1 samples, 0.01%)</title><rect x="85.3593%" y="437" width="0.0108%" height="15" fill="rgb(231,218,15)" fg:x="7900" fg:w="1"/><text x="85.6093%" y="447.50"></text></g><g><title>SDL_free_REAL (1 samples, 0.01%)</title><rect x="85.3593%" y="421" width="0.0108%" height="15" fill="rgb(226,171,48)" fg:x="7900" fg:w="1"/><text x="85.6093%" y="431.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="85.3593%" y="405" width="0.0108%" height="15" fill="rgb(235,201,9)" fg:x="7900" fg:w="1"/><text x="85.6093%" y="415.50"></text></g><g><title>SDL_ConvertPixels_REAL (88 samples, 0.95%)</title><rect x="85.2944%" y="453" width="0.9508%" height="15" fill="rgb(217,80,15)" fg:x="7894" fg:w="88"/><text x="85.5444%" y="463.50"></text></g><g><title>SDL_SoftBlit (81 samples, 0.88%)</title><rect x="85.3701%" y="437" width="0.8752%" height="15" fill="rgb(219,152,8)" fg:x="7901" fg:w="81"/><text x="85.6201%" y="447.50"></text></g><g><title>Blit_3or4_to_3or4__inversed_rgb (81 samples, 0.88%)</title><rect x="85.3701%" y="421" width="0.8752%" height="15" fill="rgb(243,107,38)" fg:x="7901" fg:w="81"/><text x="85.6201%" y="431.50"></text></g><g><title>GL_ActivateRenderer (1 samples, 0.01%)</title><rect x="86.2453%" y="421" width="0.0108%" height="15" fill="rgb(231,17,5)" fg:x="7982" fg:w="1"/><text x="86.4953%" y="431.50"></text></g><g><title>SDL_TLSGet_REAL (1 samples, 0.01%)</title><rect x="86.2453%" y="405" width="0.0108%" height="15" fill="rgb(209,25,54)" fg:x="7982" fg:w="1"/><text x="86.4953%" y="415.50"></text></g><g><title>___pthread_getspecific (1 samples, 0.01%)</title><rect x="86.2453%" y="389" width="0.0108%" height="15" fill="rgb(219,0,2)" fg:x="7982" fg:w="1"/><text x="86.4953%" y="399.50"></text></g><g><title>texsubimage_error_check (1 samples, 0.01%)</title><rect x="86.2561%" y="389" width="0.0108%" height="15" fill="rgb(246,9,5)" fg:x="7983" fg:w="1"/><text x="86.5061%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (21 samples, 0.23%)</title><rect x="86.2885%" y="357" width="0.2269%" height="15" fill="rgb(226,159,4)" fg:x="7986" fg:w="21"/><text x="86.5385%" y="367.50"></text></g><g><title>_mesa_image_address (10 samples, 0.11%)</title><rect x="86.5154%" y="357" width="0.1080%" height="15" fill="rgb(219,175,34)" fg:x="8007" fg:w="10"/><text x="86.7654%" y="367.50"></text></g><g><title>_mesa_image_offset (8 samples, 0.09%)</title><rect x="86.5370%" y="341" width="0.0864%" height="15" fill="rgb(236,10,46)" fg:x="8009" fg:w="8"/><text x="86.7870%" y="351.50"></text></g><g><title>_mesa_bytes_per_pixel (4 samples, 0.04%)</title><rect x="86.5802%" y="325" width="0.0432%" height="15" fill="rgb(240,211,16)" fg:x="8013" fg:w="4"/><text x="86.8302%" y="335.50"></text></g><g><title>_mesa_components_in_format (2 samples, 0.02%)</title><rect x="86.6018%" y="309" width="0.0216%" height="15" fill="rgb(205,3,43)" fg:x="8015" fg:w="2"/><text x="86.8518%" y="319.50"></text></g><g><title>iris_format_for_usage (1 samples, 0.01%)</title><rect x="86.6234%" y="325" width="0.0108%" height="15" fill="rgb(245,7,22)" fg:x="8017" fg:w="1"/><text x="86.8734%" y="335.50"></text></g><g><title>util_format_is_alpha (1 samples, 0.01%)</title><rect x="86.6234%" y="309" width="0.0108%" height="15" fill="rgb(239,132,32)" fg:x="8017" fg:w="1"/><text x="86.8734%" y="319.50"></text></g><g><title>util_format_description (1 samples, 0.01%)</title><rect x="86.6234%" y="293" width="0.0108%" height="15" fill="rgb(228,202,34)" fg:x="8017" fg:w="1"/><text x="86.8734%" y="303.50"></text></g><g><title>iris_resource_create_for_image.constprop.0 (3 samples, 0.03%)</title><rect x="86.6234%" y="357" width="0.0324%" height="15" fill="rgb(254,200,22)" fg:x="8017" fg:w="3"/><text x="86.8734%" y="367.50"></text></g><g><title>iris_resource_configure_main (3 samples, 0.03%)</title><rect x="86.6234%" y="341" width="0.0324%" height="15" fill="rgb(219,10,39)" fg:x="8017" fg:w="3"/><text x="86.8734%" y="351.50"></text></g><g><title>isl_surf_init_s (2 samples, 0.02%)</title><rect x="86.6343%" y="325" width="0.0216%" height="15" fill="rgb(226,210,39)" fg:x="8018" fg:w="2"/><text x="86.8843%" y="335.50"></text></g><g><title>get_image_offset_el (1 samples, 0.01%)</title><rect x="86.6559%" y="341" width="0.0108%" height="15" fill="rgb(208,219,16)" fg:x="8020" fg:w="1"/><text x="86.9059%" y="351.50"></text></g><g><title>isl_surf_get_image_offset_el (1 samples, 0.01%)</title><rect x="86.6559%" y="325" width="0.0108%" height="15" fill="rgb(216,158,51)" fg:x="8020" fg:w="1"/><text x="86.9059%" y="335.50"></text></g><g><title>isl_surf_get_image_offset_sa (1 samples, 0.01%)</title><rect x="86.6559%" y="309" width="0.0108%" height="15" fill="rgb(233,14,44)" fg:x="8020" fg:w="1"/><text x="86.9059%" y="319.50"></text></g><g><title>iris_transfer_map (4 samples, 0.04%)</title><rect x="86.6559%" y="357" width="0.0432%" height="15" fill="rgb(237,97,39)" fg:x="8020" fg:w="4"/><text x="86.9059%" y="367.50"></text></g><g><title>iris_batch_references (3 samples, 0.03%)</title><rect x="86.6667%" y="341" width="0.0324%" height="15" fill="rgb(218,198,43)" fg:x="8021" fg:w="3"/><text x="86.9167%" y="351.50"></text></g><g><title>tc_texture_map (2 samples, 0.02%)</title><rect x="86.6991%" y="357" width="0.0216%" height="15" fill="rgb(231,104,20)" fg:x="8024" fg:w="2"/><text x="86.9491%" y="367.50"></text></g><g><title>_tc_sync.constprop.0 (1 samples, 0.01%)</title><rect x="86.7099%" y="341" width="0.0108%" height="15" fill="rgb(254,36,13)" fg:x="8025" fg:w="1"/><text x="86.9599%" y="351.50"></text></g><g><title>SDL_UpdateTexture_REAL (45 samples, 0.49%)</title><rect x="86.2453%" y="453" width="0.4862%" height="15" fill="rgb(248,14,50)" fg:x="7982" fg:w="45"/><text x="86.4953%" y="463.50"></text></g><g><title>GL_UpdateTexture (45 samples, 0.49%)</title><rect x="86.2453%" y="437" width="0.4862%" height="15" fill="rgb(217,107,29)" fg:x="7982" fg:w="45"/><text x="86.4953%" y="447.50"></text></g><g><title>_mesa_TexSubImage2D (44 samples, 0.48%)</title><rect x="86.2561%" y="421" width="0.4754%" height="15" fill="rgb(251,169,33)" fg:x="7983" fg:w="44"/><text x="86.5061%" y="431.50"></text></g><g><title>texsubimage_err (44 samples, 0.48%)</title><rect x="86.2561%" y="405" width="0.4754%" height="15" fill="rgb(217,108,32)" fg:x="7983" fg:w="44"/><text x="86.5061%" y="415.50"></text></g><g><title>texture_sub_image (43 samples, 0.46%)</title><rect x="86.2669%" y="389" width="0.4646%" height="15" fill="rgb(219,66,42)" fg:x="7984" fg:w="43"/><text x="86.5169%" y="399.50"></text></g><g><title>st_TexSubImage (43 samples, 0.46%)</title><rect x="86.2669%" y="373" width="0.4646%" height="15" fill="rgb(206,180,7)" fg:x="7984" fg:w="43"/><text x="86.5169%" y="383.50"></text></g><g><title>tc_texture_unmap (1 samples, 0.01%)</title><rect x="86.7207%" y="357" width="0.0108%" height="15" fill="rgb(208,226,31)" fg:x="8026" fg:w="1"/><text x="86.9707%" y="367.50"></text></g><g><title>SDL_free_REAL (1 samples, 0.01%)</title><rect x="86.7315%" y="453" width="0.0108%" height="15" fill="rgb(218,26,49)" fg:x="8027" fg:w="1"/><text x="86.9815%" y="463.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="86.7315%" y="437" width="0.0108%" height="15" fill="rgb(233,197,48)" fg:x="8027" fg:w="1"/><text x="86.9815%" y="447.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="86.7315%" y="421" width="0.0108%" height="15" fill="rgb(252,181,51)" fg:x="8027" fg:w="1"/><text x="86.9815%" y="431.50"></text></g><g><title>SDL_UpdateTexture_REAL (136 samples, 1.47%)</title><rect x="85.2836%" y="469" width="1.4695%" height="15" fill="rgb(253,90,19)" fg:x="7893" fg:w="136"/><text x="85.5336%" y="479.50"></text></g><g><title>SDL_malloc_REAL (1 samples, 0.01%)</title><rect x="86.7423%" y="453" width="0.0108%" height="15" fill="rgb(215,171,30)" fg:x="8028" fg:w="1"/><text x="86.9923%" y="463.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="86.7423%" y="437" width="0.0108%" height="15" fill="rgb(214,222,9)" fg:x="8028" fg:w="1"/><text x="86.9923%" y="447.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="86.7423%" y="421" width="0.0108%" height="15" fill="rgb(223,3,22)" fg:x="8028" fg:w="1"/><text x="86.9923%" y="431.50"></text></g><g><title>SDL_QueryTexture (1 samples, 0.01%)</title><rect x="86.7531%" y="453" width="0.0108%" height="15" fill="rgb(225,196,46)" fg:x="8029" fg:w="1"/><text x="87.0031%" y="463.50"></text></g><g><title>sdl2::render::Texture::update (138 samples, 1.49%)</title><rect x="85.2836%" y="501" width="1.4911%" height="15" fill="rgb(209,110,37)" fg:x="7893" fg:w="138"/><text x="85.5336%" y="511.50"></text></g><g><title>sdl2::render::InternalTexture::update (138 samples, 1.49%)</title><rect x="85.2836%" y="485" width="1.4911%" height="15" fill="rgb(249,89,12)" fg:x="7893" fg:w="138"/><text x="85.5336%" y="495.50"></text></g><g><title>sdl2::render::InternalTexture::query (2 samples, 0.02%)</title><rect x="86.7531%" y="469" width="0.0216%" height="15" fill="rgb(226,27,33)" fg:x="8029" fg:w="2"/><text x="87.0031%" y="479.50"></text></g><g><title>SDL_QueryTexture_REAL (1 samples, 0.01%)</title><rect x="86.7639%" y="453" width="0.0108%" height="15" fill="rgb(213,82,22)" fg:x="8030" fg:w="1"/><text x="87.0139%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="86.7747%" y="469" width="0.0108%" height="15" fill="rgb(248,140,0)" fg:x="8031" fg:w="1"/><text x="87.0247%" y="479.50"></text></g><g><title>sdl2::render::RendererContext&lt;T&gt;::raw (1 samples, 0.01%)</title><rect x="86.7855%" y="469" width="0.0108%" height="15" fill="rgb(228,106,3)" fg:x="8032" fg:w="1"/><text x="87.0355%" y="479.50"></text></g><g><title>SDL_CreateTexture (2 samples, 0.02%)</title><rect x="86.7963%" y="453" width="0.0216%" height="15" fill="rgb(209,23,37)" fg:x="8033" fg:w="2"/><text x="87.0463%" y="463.50"></text></g><g><title>GL_ActivateRenderer (1 samples, 0.01%)</title><rect x="86.8395%" y="405" width="0.0108%" height="15" fill="rgb(241,93,50)" fg:x="8037" fg:w="1"/><text x="87.0895%" y="415.50"></text></g><g><title>SDL_GL_GetCurrentContext_REAL (1 samples, 0.01%)</title><rect x="86.8395%" y="389" width="0.0108%" height="15" fill="rgb(253,46,43)" fg:x="8037" fg:w="1"/><text x="87.0895%" y="399.50"></text></g><g><title>SDL_calloc_REAL (1 samples, 0.01%)</title><rect x="86.8504%" y="405" width="0.0108%" height="15" fill="rgb(226,206,43)" fg:x="8038" fg:w="1"/><text x="87.1004%" y="415.50"></text></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="86.8504%" y="389" width="0.0108%" height="15" fill="rgb(217,54,7)" fg:x="8038" fg:w="1"/><text x="87.1004%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="86.8504%" y="373" width="0.0108%" height="15" fill="rgb(223,5,52)" fg:x="8038" fg:w="1"/><text x="87.1004%" y="383.50"></text></g><g><title>_mesa_Enable (1 samples, 0.01%)</title><rect x="86.8612%" y="405" width="0.0108%" height="15" fill="rgb(206,52,46)" fg:x="8039" fg:w="1"/><text x="87.1112%" y="415.50"></text></g><g><title>_mesa_GenTextures (1 samples, 0.01%)</title><rect x="86.8720%" y="405" width="0.0108%" height="15" fill="rgb(253,136,11)" fg:x="8040" fg:w="1"/><text x="87.1220%" y="415.50"></text></g><g><title>_mesa_dirty_texobj (1 samples, 0.01%)</title><rect x="86.8936%" y="373" width="0.0108%" height="15" fill="rgb(208,106,33)" fg:x="8042" fg:w="1"/><text x="87.1436%" y="383.50"></text></g><g><title>_mesa_get_current_tex_object (1 samples, 0.01%)</title><rect x="86.9044%" y="373" width="0.0108%" height="15" fill="rgb(206,54,4)" fg:x="8043" fg:w="1"/><text x="87.1544%" y="383.50"></text></g><g><title>_mesa_get_tex_image (2 samples, 0.02%)</title><rect x="86.9152%" y="373" width="0.0216%" height="15" fill="rgb(213,3,15)" fg:x="8044" fg:w="2"/><text x="87.1652%" y="383.50"></text></g><g><title>__calloc (2 samples, 0.02%)</title><rect x="86.9152%" y="357" width="0.0216%" height="15" fill="rgb(252,211,39)" fg:x="8044" fg:w="2"/><text x="87.1652%" y="367.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="86.9260%" y="341" width="0.0108%" height="15" fill="rgb(223,6,36)" fg:x="8045" fg:w="1"/><text x="87.1760%" y="351.50"></text></g><g><title>_mesa_get_tex_max_num_levels (2 samples, 0.02%)</title><rect x="86.9368%" y="357" width="0.0216%" height="15" fill="rgb(252,169,45)" fg:x="8046" fg:w="2"/><text x="87.1868%" y="367.50"></text></g><g><title>_mesa_init_teximage_fields_ms (3 samples, 0.03%)</title><rect x="86.9368%" y="373" width="0.0324%" height="15" fill="rgb(212,48,26)" fg:x="8046" fg:w="3"/><text x="87.1868%" y="383.50"></text></g><g><title>_mesa_update_teximage_format_swizzle (1 samples, 0.01%)</title><rect x="86.9584%" y="357" width="0.0108%" height="15" fill="rgb(251,102,48)" fg:x="8048" fg:w="1"/><text x="87.2084%" y="367.50"></text></g><g><title>_mesa_test_proxy_teximage (1 samples, 0.01%)</title><rect x="86.9692%" y="373" width="0.0108%" height="15" fill="rgb(243,208,16)" fg:x="8049" fg:w="1"/><text x="87.2192%" y="383.50"></text></g><g><title>_mesa_format_image_size64 (1 samples, 0.01%)</title><rect x="86.9692%" y="357" width="0.0108%" height="15" fill="rgb(219,96,24)" fg:x="8049" fg:w="1"/><text x="87.2192%" y="367.50"></text></g><g><title>_mesa_update_pixel (1 samples, 0.01%)</title><rect x="86.9800%" y="373" width="0.0108%" height="15" fill="rgb(219,33,29)" fg:x="8050" fg:w="1"/><text x="87.2300%" y="383.50"></text></g><g><title>_mesa_get_format_name (1 samples, 0.01%)</title><rect x="86.9908%" y="357" width="0.0108%" height="15" fill="rgb(223,176,5)" fg:x="8051" fg:w="1"/><text x="87.2408%" y="367.50"></text></g><g><title>gl_target_to_pipe (2 samples, 0.02%)</title><rect x="87.0016%" y="357" width="0.0216%" height="15" fill="rgb(228,140,14)" fg:x="8052" fg:w="2"/><text x="87.2516%" y="367.50"></text></g><g><title>st_ChooseTextureFormat (5 samples, 0.05%)</title><rect x="86.9908%" y="373" width="0.0540%" height="15" fill="rgb(217,179,31)" fg:x="8051" fg:w="5"/><text x="87.2408%" y="383.50"></text></g><g><title>st_choose_format (2 samples, 0.02%)</title><rect x="87.0232%" y="357" width="0.0216%" height="15" fill="rgb(230,9,30)" fg:x="8054" fg:w="2"/><text x="87.2732%" y="367.50"></text></g><g><title>iris_is_format_supported (1 samples, 0.01%)</title><rect x="87.0340%" y="341" width="0.0108%" height="15" fill="rgb(230,136,20)" fg:x="8055" fg:w="1"/><text x="87.2840%" y="351.50"></text></g><g><title>isl_format_for_pipe_format (1 samples, 0.01%)</title><rect x="87.0340%" y="325" width="0.0108%" height="15" fill="rgb(215,210,22)" fg:x="8055" fg:w="1"/><text x="87.2840%" y="335.50"></text></g><g><title>iris_alloc_resource (2 samples, 0.02%)</title><rect x="87.0773%" y="293" width="0.0216%" height="15" fill="rgb(218,43,5)" fg:x="8059" fg:w="2"/><text x="87.3273%" y="303.50"></text></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="87.0881%" y="277" width="0.0108%" height="15" fill="rgb(216,11,5)" fg:x="8060" fg:w="1"/><text x="87.3381%" y="287.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="87.0881%" y="261" width="0.0108%" height="15" fill="rgb(209,82,29)" fg:x="8060" fg:w="1"/><text x="87.3381%" y="271.50"></text></g><g><title>bucket_for_size (1 samples, 0.01%)</title><rect x="87.1097%" y="277" width="0.0108%" height="15" fill="rgb(244,115,12)" fg:x="8062" fg:w="1"/><text x="87.3597%" y="287.50"></text></g><g><title>__GI___ioctl (1 samples, 0.01%)</title><rect x="87.1637%" y="213" width="0.0108%" height="15" fill="rgb(222,82,18)" fg:x="8067" fg:w="1"/><text x="87.4137%" y="223.50"></text></g><g><title>iris_syncobj_destroy (1 samples, 0.01%)</title><rect x="87.1745%" y="213" width="0.0108%" height="15" fill="rgb(249,227,8)" fg:x="8068" fg:w="1"/><text x="87.4245%" y="223.50"></text></g><g><title>iris_bufmgr_get_fd (1 samples, 0.01%)</title><rect x="87.1745%" y="197" width="0.0108%" height="15" fill="rgb(253,141,45)" fg:x="8068" fg:w="1"/><text x="87.4245%" y="207.50"></text></g><g><title>iris_bo_alloc (9 samples, 0.10%)</title><rect x="87.0989%" y="293" width="0.0972%" height="15" fill="rgb(234,184,4)" fg:x="8061" fg:w="9"/><text x="87.3489%" y="303.50"></text></g><g><title>pb_slab_alloc_reclaimed (7 samples, 0.08%)</title><rect x="87.1205%" y="277" width="0.0756%" height="15" fill="rgb(218,194,23)" fg:x="8063" fg:w="7"/><text x="87.3705%" y="287.50"></text></g><g><title>pb_slabs_reclaim_locked (7 samples, 0.08%)</title><rect x="87.1205%" y="261" width="0.0756%" height="15" fill="rgb(235,66,41)" fg:x="8063" fg:w="7"/><text x="87.3705%" y="271.50"></text></g><g><title>iris_can_reclaim_slab (7 samples, 0.08%)</title><rect x="87.1205%" y="245" width="0.0756%" height="15" fill="rgb(245,217,1)" fg:x="8063" fg:w="7"/><text x="87.3705%" y="255.50"></text></g><g><title>iris_bo_wait_syncobj (6 samples, 0.06%)</title><rect x="87.1313%" y="229" width="0.0648%" height="15" fill="rgb(229,91,1)" fg:x="8064" fg:w="6"/><text x="87.3813%" y="239.50"></text></g><g><title>os_time_get_absolute_timeout (1 samples, 0.01%)</title><rect x="87.1853%" y="213" width="0.0108%" height="15" fill="rgb(207,101,30)" fg:x="8069" fg:w="1"/><text x="87.4353%" y="223.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="87.1853%" y="197" width="0.0108%" height="15" fill="rgb(223,82,49)" fg:x="8069" fg:w="1"/><text x="87.4353%" y="207.50"></text></g><g><title>iris_bo_map (1 samples, 0.01%)</title><rect x="87.1961%" y="293" width="0.0108%" height="15" fill="rgb(218,167,17)" fg:x="8070" fg:w="1"/><text x="87.4461%" y="303.50"></text></g><g><title>iris_resource_configure_aux (3 samples, 0.03%)</title><rect x="87.2069%" y="293" width="0.0324%" height="15" fill="rgb(208,103,14)" fg:x="8071" fg:w="3"/><text x="87.4569%" y="303.50"></text></g><g><title>isl_surf_get_ccs_surf (2 samples, 0.02%)</title><rect x="87.2177%" y="277" width="0.0216%" height="15" fill="rgb(238,20,8)" fg:x="8072" fg:w="2"/><text x="87.4677%" y="287.50"></text></g><g><title>isl_surf_init_s (2 samples, 0.02%)</title><rect x="87.2177%" y="261" width="0.0216%" height="15" fill="rgb(218,80,54)" fg:x="8072" fg:w="2"/><text x="87.4677%" y="271.50"></text></g><g><title>isl_gfx9_choose_image_alignment_el (1 samples, 0.01%)</title><rect x="87.2285%" y="245" width="0.0108%" height="15" fill="rgb(240,144,17)" fg:x="8073" fg:w="1"/><text x="87.4785%" y="255.50"></text></g><g><title>iris_resource_configure_main (6 samples, 0.06%)</title><rect x="87.2393%" y="293" width="0.0648%" height="15" fill="rgb(245,27,50)" fg:x="8074" fg:w="6"/><text x="87.4893%" y="303.50"></text></g><g><title>isl_surf_init_s (5 samples, 0.05%)</title><rect x="87.2501%" y="277" width="0.0540%" height="15" fill="rgb(251,51,7)" fg:x="8075" fg:w="5"/><text x="87.5001%" y="287.50"></text></g><g><title>isl_tiling_get_info (2 samples, 0.02%)</title><rect x="87.2825%" y="261" width="0.0216%" height="15" fill="rgb(245,217,29)" fg:x="8078" fg:w="2"/><text x="87.5325%" y="271.50"></text></g><g><title>iris_resource_create_for_image.constprop.0 (22 samples, 0.24%)</title><rect x="87.0773%" y="309" width="0.2377%" height="15" fill="rgb(221,176,29)" fg:x="8059" fg:w="22"/><text x="87.3273%" y="319.50"></text></g><g><title>iris_resource_get_aux_state (1 samples, 0.01%)</title><rect x="87.3042%" y="293" width="0.0108%" height="15" fill="rgb(212,180,24)" fg:x="8080" fg:w="1"/><text x="87.5542%" y="303.50"></text></g><g><title>guess_and_alloc_texture (24 samples, 0.26%)</title><rect x="87.0665%" y="341" width="0.2593%" height="15" fill="rgb(254,24,2)" fg:x="8058" fg:w="24"/><text x="87.3165%" y="351.50"></text></g><g><title>st_texture_create (23 samples, 0.25%)</title><rect x="87.0773%" y="325" width="0.2485%" height="15" fill="rgb(230,100,2)" fg:x="8059" fg:w="23"/><text x="87.3273%" y="335.50"></text></g><g><title>u_transfer_helper_resource_create (1 samples, 0.01%)</title><rect x="87.3150%" y="309" width="0.0108%" height="15" fill="rgb(219,142,25)" fg:x="8081" fg:w="1"/><text x="87.5650%" y="319.50"></text></g><g><title>st_AllocTextureImageBuffer (26 samples, 0.28%)</title><rect x="87.0556%" y="357" width="0.2809%" height="15" fill="rgb(240,73,43)" fg:x="8057" fg:w="26"/><text x="87.3056%" y="367.50"></text></g><g><title>st_texture_match_image (1 samples, 0.01%)</title><rect x="87.3258%" y="341" width="0.0108%" height="15" fill="rgb(214,114,15)" fg:x="8082" fg:w="1"/><text x="87.5758%" y="351.50"></text></g><g><title>st_mesa_format_to_pipe_format (1 samples, 0.01%)</title><rect x="87.3258%" y="325" width="0.0108%" height="15" fill="rgb(207,130,4)" fg:x="8082" fg:w="1"/><text x="87.5758%" y="335.50"></text></g><g><title>_mesa_is_format_latc (1 samples, 0.01%)</title><rect x="87.3258%" y="309" width="0.0108%" height="15" fill="rgb(221,25,40)" fg:x="8082" fg:w="1"/><text x="87.5758%" y="319.50"></text></g><g><title>_mesa_format_matches_format_and_type (5 samples, 0.05%)</title><rect x="87.3690%" y="341" width="0.0540%" height="15" fill="rgb(241,184,7)" fg:x="8086" fg:w="5"/><text x="87.6190%" y="351.50"></text></g><g><title>_mesa_format_from_format_and_type (5 samples, 0.05%)</title><rect x="87.3690%" y="325" width="0.0540%" height="15" fill="rgb(235,159,4)" fg:x="8086" fg:w="5"/><text x="87.6190%" y="335.50"></text></g><g><title>_mesa_texstore_can_use_memcpy (2 samples, 0.02%)</title><rect x="87.4230%" y="341" width="0.0216%" height="15" fill="rgb(214,87,48)" fg:x="8091" fg:w="2"/><text x="87.6730%" y="351.50"></text></g><g><title>_mesa_format_matches_format_and_type (1 samples, 0.01%)</title><rect x="87.4338%" y="325" width="0.0108%" height="15" fill="rgb(246,198,24)" fg:x="8092" fg:w="1"/><text x="87.6838%" y="335.50"></text></g><g><title>iris_alloc_resource (1 samples, 0.01%)</title><rect x="87.4446%" y="325" width="0.0108%" height="15" fill="rgb(209,66,40)" fg:x="8093" fg:w="1"/><text x="87.6946%" y="335.50"></text></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="87.4446%" y="309" width="0.0108%" height="15" fill="rgb(233,147,39)" fg:x="8093" fg:w="1"/><text x="87.6946%" y="319.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="87.4446%" y="293" width="0.0108%" height="15" fill="rgb(231,145,52)" fg:x="8093" fg:w="1"/><text x="87.6946%" y="303.50"></text></g><g><title>iris_bo_alloc (1 samples, 0.01%)</title><rect x="87.4554%" y="325" width="0.0108%" height="15" fill="rgb(206,20,26)" fg:x="8094" fg:w="1"/><text x="87.7054%" y="335.50"></text></g><g><title>alloc_bo_from_cache (1 samples, 0.01%)</title><rect x="87.4554%" y="309" width="0.0108%" height="15" fill="rgb(238,220,4)" fg:x="8094" fg:w="1"/><text x="87.7054%" y="319.50"></text></g><g><title>iris_bo_busy (1 samples, 0.01%)</title><rect x="87.4554%" y="293" width="0.0108%" height="15" fill="rgb(252,195,42)" fg:x="8094" fg:w="1"/><text x="87.7054%" y="303.50"></text></g><g><title>iris_bo_wait_syncobj (1 samples, 0.01%)</title><rect x="87.4554%" y="277" width="0.0108%" height="15" fill="rgb(209,10,6)" fg:x="8094" fg:w="1"/><text x="87.7054%" y="287.50"></text></g><g><title>iris_resource_configure_aux (1 samples, 0.01%)</title><rect x="87.4662%" y="325" width="0.0108%" height="15" fill="rgb(229,3,52)" fg:x="8095" fg:w="1"/><text x="87.7162%" y="335.50"></text></g><g><title>iris_format_for_usage (1 samples, 0.01%)</title><rect x="87.4770%" y="309" width="0.0108%" height="15" fill="rgb(253,49,37)" fg:x="8096" fg:w="1"/><text x="87.7270%" y="319.50"></text></g><g><title>iris_resource_create_for_image.constprop.0 (6 samples, 0.06%)</title><rect x="87.4446%" y="341" width="0.0648%" height="15" fill="rgb(240,103,49)" fg:x="8093" fg:w="6"/><text x="87.6946%" y="351.50"></text></g><g><title>iris_resource_configure_main (3 samples, 0.03%)</title><rect x="87.4770%" y="325" width="0.0324%" height="15" fill="rgb(250,182,30)" fg:x="8096" fg:w="3"/><text x="87.7270%" y="335.50"></text></g><g><title>isl_surf_init_s (2 samples, 0.02%)</title><rect x="87.4878%" y="309" width="0.0216%" height="15" fill="rgb(248,8,30)" fg:x="8097" fg:w="2"/><text x="87.7378%" y="319.50"></text></g><g><title>__free (2 samples, 0.02%)</title><rect x="87.5095%" y="325" width="0.0216%" height="15" fill="rgb(237,120,30)" fg:x="8099" fg:w="2"/><text x="87.7595%" y="335.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="87.5095%" y="309" width="0.0216%" height="15" fill="rgb(221,146,34)" fg:x="8099" fg:w="2"/><text x="87.7595%" y="319.50"></text></g><g><title>_int_free_merge_chunk (1 samples, 0.01%)</title><rect x="87.5203%" y="293" width="0.0108%" height="15" fill="rgb(242,55,13)" fg:x="8100" fg:w="1"/><text x="87.7703%" y="303.50"></text></g><g><title>pipe_resource_reference (4 samples, 0.04%)</title><rect x="87.5095%" y="341" width="0.0432%" height="15" fill="rgb(242,112,31)" fg:x="8099" fg:w="4"/><text x="87.7595%" y="351.50"></text></g><g><title>u_transfer_helper_resource_destroy (2 samples, 0.02%)</title><rect x="87.5311%" y="325" width="0.0216%" height="15" fill="rgb(249,192,27)" fg:x="8101" fg:w="2"/><text x="87.7811%" y="335.50"></text></g><g><title>iris_resource_get_separate_stencil (1 samples, 0.01%)</title><rect x="87.5419%" y="309" width="0.0108%" height="15" fill="rgb(208,204,44)" fg:x="8102" fg:w="1"/><text x="87.7919%" y="319.50"></text></g><g><title>st_choose_matching_format (1 samples, 0.01%)</title><rect x="87.5527%" y="341" width="0.0108%" height="15" fill="rgb(208,93,54)" fg:x="8103" fg:w="1"/><text x="87.8027%" y="351.50"></text></g><g><title>st_choose_matching_format_noverify (1 samples, 0.01%)</title><rect x="87.5527%" y="325" width="0.0108%" height="15" fill="rgb(242,1,31)" fg:x="8103" fg:w="1"/><text x="87.8027%" y="335.50"></text></g><g><title>_mesa_format_from_format_and_type (1 samples, 0.01%)</title><rect x="87.5527%" y="309" width="0.0108%" height="15" fill="rgb(241,83,25)" fg:x="8103" fg:w="1"/><text x="87.8027%" y="319.50"></text></g><g><title>st_TexImage (49 samples, 0.53%)</title><rect x="87.0448%" y="373" width="0.5294%" height="15" fill="rgb(205,169,50)" fg:x="8056" fg:w="49"/><text x="87.2948%" y="383.50"></text></g><g><title>st_TexSubImage (22 samples, 0.24%)</title><rect x="87.3366%" y="357" width="0.2377%" height="15" fill="rgb(239,186,37)" fg:x="8083" fg:w="22"/><text x="87.5866%" y="367.50"></text></g><g><title>st_flush_bitmap_cache (1 samples, 0.01%)</title><rect x="87.5635%" y="341" width="0.0108%" height="15" fill="rgb(205,221,10)" fg:x="8104" fg:w="1"/><text x="87.8135%" y="351.50"></text></g><g><title>st_texture_release_all_sampler_views (2 samples, 0.02%)</title><rect x="87.5743%" y="373" width="0.0216%" height="15" fill="rgb(218,196,15)" fg:x="8105" fg:w="2"/><text x="87.8243%" y="383.50"></text></g><g><title>__printf_buffer_write (2 samples, 0.02%)</title><rect x="87.6067%" y="309" width="0.0216%" height="15" fill="rgb(218,196,35)" fg:x="8108" fg:w="2"/><text x="87.8567%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="87.6175%" y="293" width="0.0108%" height="15" fill="rgb(233,63,24)" fg:x="8109" fg:w="1"/><text x="87.8675%" y="303.50"></text></g><g><title>__strchrnul_avx2 (1 samples, 0.01%)</title><rect x="87.6283%" y="309" width="0.0108%" height="15" fill="rgb(225,8,4)" fg:x="8110" fg:w="1"/><text x="87.8783%" y="319.50"></text></g><g><title>__printf_buffer (6 samples, 0.06%)</title><rect x="87.6067%" y="325" width="0.0648%" height="15" fill="rgb(234,105,35)" fg:x="8108" fg:w="6"/><text x="87.8567%" y="335.50"></text></g><g><title>_itoa_word (3 samples, 0.03%)</title><rect x="87.6391%" y="309" width="0.0324%" height="15" fill="rgb(236,21,32)" fg:x="8111" fg:w="3"/><text x="87.8891%" y="319.50"></text></g><g><title>___snprintf_chk (7 samples, 0.08%)</title><rect x="87.6067%" y="357" width="0.0756%" height="15" fill="rgb(228,109,6)" fg:x="8108" fg:w="7"/><text x="87.8567%" y="367.50"></text></g><g><title>__vsnprintf_internal (7 samples, 0.08%)</title><rect x="87.6067%" y="341" width="0.0756%" height="15" fill="rgb(229,215,31)" fg:x="8108" fg:w="7"/><text x="87.8567%" y="351.50"></text></g><g><title>__printf_buffer_done (1 samples, 0.01%)</title><rect x="87.6715%" y="325" width="0.0108%" height="15" fill="rgb(221,52,54)" fg:x="8114" fg:w="1"/><text x="87.9215%" y="335.50"></text></g><g><title>_mesa_TexImage2D (76 samples, 0.82%)</title><rect x="86.8828%" y="405" width="0.8212%" height="15" fill="rgb(252,129,43)" fg:x="8041" fg:w="76"/><text x="87.1328%" y="415.50"></text></g><g><title>teximage_err (76 samples, 0.82%)</title><rect x="86.8828%" y="389" width="0.8212%" height="15" fill="rgb(248,183,27)" fg:x="8041" fg:w="76"/><text x="87.1328%" y="399.50"></text></g><g><title>texture_error_check (10 samples, 0.11%)</title><rect x="87.5959%" y="373" width="0.1080%" height="15" fill="rgb(250,0,22)" fg:x="8107" fg:w="10"/><text x="87.8459%" y="383.50"></text></g><g><title>_mesa_error_check_format_and_type (2 samples, 0.02%)</title><rect x="87.6823%" y="357" width="0.0216%" height="15" fill="rgb(213,166,10)" fg:x="8115" fg:w="2"/><text x="87.9323%" y="367.50"></text></g><g><title>_mesa_TexParameteri (1 samples, 0.01%)</title><rect x="87.7039%" y="405" width="0.0108%" height="15" fill="rgb(207,163,36)" fg:x="8117" fg:w="1"/><text x="87.9539%" y="415.50"></text></g><g><title>_mesa_get_texobj_by_target_and_texunit (1 samples, 0.01%)</title><rect x="87.7039%" y="389" width="0.0108%" height="15" fill="rgb(208,122,22)" fg:x="8117" fg:w="1"/><text x="87.9539%" y="399.50"></text></g><g><title>_mesa_is_proxy_texture (1 samples, 0.01%)</title><rect x="87.7039%" y="373" width="0.0108%" height="15" fill="rgb(207,104,49)" fg:x="8117" fg:w="1"/><text x="87.9539%" y="383.50"></text></g><g><title>_mesa_set_enable (2 samples, 0.02%)</title><rect x="87.7147%" y="405" width="0.0216%" height="15" fill="rgb(248,211,50)" fg:x="8118" fg:w="2"/><text x="87.9647%" y="415.50"></text></g><g><title>_mesa_texture_parameteri (2 samples, 0.02%)</title><rect x="87.7364%" y="405" width="0.0216%" height="15" fill="rgb(217,13,45)" fg:x="8120" fg:w="2"/><text x="87.9864%" y="415.50"></text></g><g><title>set_tex_parameteri (2 samples, 0.02%)</title><rect x="87.7364%" y="389" width="0.0216%" height="15" fill="rgb(211,216,49)" fg:x="8120" fg:w="2"/><text x="87.9864%" y="399.50"></text></g><g><title>validate_texture_wrap_mode (1 samples, 0.01%)</title><rect x="87.7472%" y="373" width="0.0108%" height="15" fill="rgb(221,58,53)" fg:x="8121" fg:w="1"/><text x="87.9972%" y="383.50"></text></g><g><title>bind_texture_object (3 samples, 0.03%)</title><rect x="87.7580%" y="405" width="0.0324%" height="15" fill="rgb(220,112,41)" fg:x="8122" fg:w="3"/><text x="88.0080%" y="415.50"></text></g><g><title>_mesa_HashInsertLocked (3 samples, 0.03%)</title><rect x="87.8120%" y="389" width="0.0324%" height="15" fill="rgb(236,38,28)" fg:x="8127" fg:w="3"/><text x="88.0620%" y="399.50"></text></g><g><title>_mesa_hash_table_search_pre_hashed (2 samples, 0.02%)</title><rect x="87.8228%" y="373" width="0.0216%" height="15" fill="rgb(227,195,22)" fg:x="8128" fg:w="2"/><text x="88.0728%" y="383.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="87.8768%" y="341" width="0.0108%" height="15" fill="rgb(214,55,33)" fg:x="8133" fg:w="1"/><text x="88.1268%" y="351.50"></text></g><g><title>__calloc (7 samples, 0.08%)</title><rect x="87.8444%" y="373" width="0.0756%" height="15" fill="rgb(248,80,13)" fg:x="8130" fg:w="7"/><text x="88.0944%" y="383.50"></text></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="87.8444%" y="357" width="0.0756%" height="15" fill="rgb(238,52,6)" fg:x="8130" fg:w="7"/><text x="88.0944%" y="367.50"></text></g><g><title>unlink_chunk.constprop.0 (3 samples, 0.03%)</title><rect x="87.8876%" y="341" width="0.0324%" height="15" fill="rgb(224,198,47)" fg:x="8134" fg:w="3"/><text x="88.1376%" y="351.50"></text></g><g><title>create_textures.part.0 (14 samples, 0.15%)</title><rect x="87.7904%" y="405" width="0.1513%" height="15" fill="rgb(233,171,20)" fg:x="8125" fg:w="14"/><text x="88.0404%" y="415.50"></text></g><g><title>_mesa_new_texture_object (9 samples, 0.10%)</title><rect x="87.8444%" y="389" width="0.0972%" height="15" fill="rgb(241,30,25)" fg:x="8130" fg:w="9"/><text x="88.0944%" y="399.50"></text></g><g><title>calloc@plt (2 samples, 0.02%)</title><rect x="87.9200%" y="373" width="0.0216%" height="15" fill="rgb(207,171,38)" fg:x="8137" fg:w="2"/><text x="88.1700%" y="383.50"></text></g><g><title>GL_CreateTexture (105 samples, 1.13%)</title><rect x="86.8179%" y="421" width="1.1345%" height="15" fill="rgb(234,70,1)" fg:x="8035" fg:w="105"/><text x="87.0679%" y="431.50"></text></g><g><title>enable_texture.isra.0 (1 samples, 0.01%)</title><rect x="87.9417%" y="405" width="0.0108%" height="15" fill="rgb(232,178,18)" fg:x="8139" fg:w="1"/><text x="88.1917%" y="415.50"></text></g><g><title>SDL_CreateTexture_REAL (107 samples, 1.16%)</title><rect x="86.8179%" y="437" width="1.1561%" height="15" fill="rgb(241,78,40)" fg:x="8035" fg:w="107"/><text x="87.0679%" y="447.50"></text></g><g><title>SDL_calloc_REAL (2 samples, 0.02%)</title><rect x="87.9525%" y="421" width="0.0216%" height="15" fill="rgb(222,35,25)" fg:x="8140" fg:w="2"/><text x="88.2025%" y="431.50"></text></g><g><title>__calloc (2 samples, 0.02%)</title><rect x="87.9525%" y="405" width="0.0216%" height="15" fill="rgb(207,92,16)" fg:x="8140" fg:w="2"/><text x="88.2025%" y="415.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="87.9525%" y="389" width="0.0216%" height="15" fill="rgb(216,59,51)" fg:x="8140" fg:w="2"/><text x="88.2025%" y="399.50"></text></g><g><title>__GI_getenv (7 samples, 0.08%)</title><rect x="87.9957%" y="421" width="0.0756%" height="15" fill="rgb(213,80,28)" fg:x="8144" fg:w="7"/><text x="88.2457%" y="431.50"></text></g><g><title>__strncmp_avx2 (1 samples, 0.01%)</title><rect x="88.0605%" y="405" width="0.0108%" height="15" fill="rgb(220,93,7)" fg:x="8150" fg:w="1"/><text x="88.3105%" y="415.50"></text></g><g><title>SDL_GetHint_REAL (11 samples, 0.12%)</title><rect x="87.9741%" y="437" width="0.1189%" height="15" fill="rgb(225,24,44)" fg:x="8142" fg:w="11"/><text x="88.2241%" y="447.50"></text></g><g><title>__strcmp_avx2 (2 samples, 0.02%)</title><rect x="88.0713%" y="421" width="0.0216%" height="15" fill="rgb(243,74,40)" fg:x="8151" fg:w="2"/><text x="88.3213%" y="431.50"></text></g><g><title>__calloc (2 samples, 0.02%)</title><rect x="88.0929%" y="421" width="0.0216%" height="15" fill="rgb(228,39,7)" fg:x="8153" fg:w="2"/><text x="88.3429%" y="431.50"></text></g><g><title>gb_rs::graphics::Graphics::render (5,214 samples, 56.34%)</title><rect x="31.7882%" y="517" width="56.3371%" height="15" fill="rgb(227,79,8)" fg:x="2942" fg:w="5214"/><text x="32.0382%" y="527.50">gb_rs::graphics::Graphics::render</text></g><g><title>sdl2::render::TextureCreator&lt;T&gt;::create_texture_target (125 samples, 1.35%)</title><rect x="86.7747%" y="501" width="1.3506%" height="15" fill="rgb(236,58,11)" fg:x="8031" fg:w="125"/><text x="87.0247%" y="511.50"></text></g><g><title>sdl2::render::TextureCreator&lt;T&gt;::create_texture (125 samples, 1.35%)</title><rect x="86.7747%" y="485" width="1.3506%" height="15" fill="rgb(249,63,35)" fg:x="8031" fg:w="125"/><text x="87.0247%" y="495.50"></text></g><g><title>sdl2::render::ll_create_texture (123 samples, 1.33%)</title><rect x="86.7963%" y="469" width="1.3290%" height="15" fill="rgb(252,114,16)" fg:x="8033" fg:w="123"/><text x="87.0463%" y="479.50"></text></g><g><title>SDL_CreateTexture_REAL (121 samples, 1.31%)</title><rect x="86.8179%" y="453" width="1.3074%" height="15" fill="rgb(254,151,24)" fg:x="8035" fg:w="121"/><text x="87.0679%" y="463.50"></text></g><g><title>SDL_calloc_REAL (3 samples, 0.03%)</title><rect x="88.0929%" y="437" width="0.0324%" height="15" fill="rgb(253,54,39)" fg:x="8153" fg:w="3"/><text x="88.3429%" y="447.50"></text></g><g><title>calloc@plt (1 samples, 0.01%)</title><rect x="88.1145%" y="421" width="0.0108%" height="15" fill="rgb(243,25,45)" fg:x="8155" fg:w="1"/><text x="88.3645%" y="431.50"></text></g><g><title>gb_rs::memory::Memory::read_byte (10 samples, 0.11%)</title><rect x="88.3955%" y="501" width="0.1080%" height="15" fill="rgb(234,134,9)" fg:x="8181" fg:w="10"/><text x="88.6455%" y="511.50"></text></g><g><title>gb_rs::memory::Memory::write_byte (4 samples, 0.04%)</title><rect x="88.5035%" y="501" width="0.0432%" height="15" fill="rgb(227,166,31)" fg:x="8191" fg:w="4"/><text x="88.7535%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.05%)</title><rect x="88.8061%" y="357" width="0.0540%" height="15" fill="rgb(245,143,41)" fg:x="8219" fg:w="5"/><text x="89.0561%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (18 samples, 0.19%)</title><rect x="88.7412%" y="373" width="0.1945%" height="15" fill="rgb(238,181,32)" fg:x="8213" fg:w="18"/><text x="88.9912%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.08%)</title><rect x="88.8601%" y="357" width="0.0756%" height="15" fill="rgb(224,113,18)" fg:x="8224" fg:w="7"/><text x="89.1101%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.18%)</title><rect x="89.0978%" y="357" width="0.1837%" height="15" fill="rgb(240,229,28)" fg:x="8246" fg:w="17"/><text x="89.3478%" y="367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (67 samples, 0.72%)</title><rect x="88.6440%" y="421" width="0.7239%" height="15" fill="rgb(250,185,3)" fg:x="8204" fg:w="67"/><text x="88.8940%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (67 samples, 0.72%)</title><rect x="88.6440%" y="405" width="0.7239%" height="15" fill="rgb(212,59,25)" fg:x="8204" fg:w="67"/><text x="88.8940%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (67 samples, 0.72%)</title><rect x="88.6440%" y="389" width="0.7239%" height="15" fill="rgb(221,87,20)" fg:x="8204" fg:w="67"/><text x="88.8940%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (40 samples, 0.43%)</title><rect x="88.9357%" y="373" width="0.4322%" height="15" fill="rgb(213,74,28)" fg:x="8231" fg:w="40"/><text x="89.1857%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.09%)</title><rect x="89.2815%" y="357" width="0.0864%" height="15" fill="rgb(224,132,34)" fg:x="8263" fg:w="8"/><text x="89.5315%" y="367.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (8 samples, 0.09%)</title><rect x="89.3679%" y="421" width="0.0864%" height="15" fill="rgb(222,101,24)" fg:x="8271" fg:w="8"/><text x="89.6179%" y="431.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.05%)</title><rect x="89.4003%" y="405" width="0.0540%" height="15" fill="rgb(254,142,4)" fg:x="8274" fg:w="5"/><text x="89.6503%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.05%)</title><rect x="89.4003%" y="389" width="0.0540%" height="15" fill="rgb(230,229,49)" fg:x="8274" fg:w="5"/><text x="89.6503%" y="399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.05%)</title><rect x="89.4003%" y="373" width="0.0540%" height="15" fill="rgb(238,70,47)" fg:x="8274" fg:w="5"/><text x="89.6503%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (116 samples, 1.25%)</title><rect x="88.6008%" y="453" width="1.2534%" height="15" fill="rgb(231,160,17)" fg:x="8200" fg:w="116"/><text x="88.8508%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (113 samples, 1.22%)</title><rect x="88.6332%" y="437" width="1.2210%" height="15" fill="rgb(218,68,53)" fg:x="8203" fg:w="113"/><text x="88.8832%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (37 samples, 0.40%)</title><rect x="89.4543%" y="421" width="0.3998%" height="15" fill="rgb(236,111,10)" fg:x="8279" fg:w="37"/><text x="89.7043%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (30 samples, 0.32%)</title><rect x="89.5300%" y="405" width="0.3241%" height="15" fill="rgb(224,34,41)" fg:x="8286" fg:w="30"/><text x="89.7800%" y="415.50"></text></g><g><title>core::hash::Hasher::write_u8 (30 samples, 0.32%)</title><rect x="89.5300%" y="389" width="0.3241%" height="15" fill="rgb(241,118,19)" fg:x="8286" fg:w="30"/><text x="89.7800%" y="399.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.29%)</title><rect x="89.5624%" y="373" width="0.2917%" height="15" fill="rgb(238,129,25)" fg:x="8289" fg:w="27"/><text x="89.8124%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (27 samples, 0.29%)</title><rect x="89.5624%" y="357" width="0.2917%" height="15" fill="rgb(238,22,31)" fg:x="8289" fg:w="27"/><text x="89.8124%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.29%)</title><rect x="89.5624%" y="341" width="0.2917%" height="15" fill="rgb(222,174,48)" fg:x="8289" fg:w="27"/><text x="89.8124%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (18 samples, 0.19%)</title><rect x="89.6596%" y="325" width="0.1945%" height="15" fill="rgb(206,152,40)" fg:x="8298" fg:w="18"/><text x="89.9096%" y="335.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="89.8974%" y="389" width="0.0216%" height="15" fill="rgb(218,99,54)" fg:x="8320" fg:w="2"/><text x="90.1474%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.11%)</title><rect x="89.8974%" y="405" width="0.1080%" height="15" fill="rgb(220,174,26)" fg:x="8320" fg:w="10"/><text x="90.1474%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (8 samples, 0.09%)</title><rect x="89.9190%" y="389" width="0.0864%" height="15" fill="rgb(245,116,9)" fg:x="8322" fg:w="8"/><text x="90.1690%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (21 samples, 0.23%)</title><rect x="90.0054%" y="405" width="0.2269%" height="15" fill="rgb(209,72,35)" fg:x="8330" fg:w="21"/><text x="90.2554%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (18 samples, 0.19%)</title><rect x="90.0378%" y="389" width="0.1945%" height="15" fill="rgb(226,126,21)" fg:x="8333" fg:w="18"/><text x="90.2878%" y="399.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (18 samples, 0.19%)</title><rect x="90.0378%" y="373" width="0.1945%" height="15" fill="rgb(227,192,1)" fg:x="8333" fg:w="18"/><text x="90.2878%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (18 samples, 0.19%)</title><rect x="90.0378%" y="357" width="0.1945%" height="15" fill="rgb(237,180,29)" fg:x="8333" fg:w="18"/><text x="90.2878%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u8&gt;::eq (18 samples, 0.19%)</title><rect x="90.0378%" y="341" width="0.1945%" height="15" fill="rgb(230,197,35)" fg:x="8333" fg:w="18"/><text x="90.2878%" y="351.50"></text></g><g><title>hashbrown::raw::h2 (18 samples, 0.19%)</title><rect x="90.2323%" y="405" width="0.1945%" height="15" fill="rgb(246,193,31)" fg:x="8351" fg:w="18"/><text x="90.4823%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (7 samples, 0.08%)</title><rect x="90.4268%" y="405" width="0.0756%" height="15" fill="rgb(241,36,4)" fg:x="8369" fg:w="7"/><text x="90.6768%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (7 samples, 0.08%)</title><rect x="90.4268%" y="389" width="0.0756%" height="15" fill="rgb(241,130,17)" fg:x="8369" fg:w="7"/><text x="90.6768%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.08%)</title><rect x="90.4268%" y="373" width="0.0756%" height="15" fill="rgb(206,137,32)" fg:x="8369" fg:w="7"/><text x="90.6768%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (194 samples, 2.10%)</title><rect x="88.5467%" y="501" width="2.0962%" height="15" fill="rgb(237,228,51)" fg:x="8195" fg:w="194"/><text x="88.7967%" y="511.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (194 samples, 2.10%)</title><rect x="88.5467%" y="485" width="2.0962%" height="15" fill="rgb(243,6,42)" fg:x="8195" fg:w="194"/><text x="88.7967%" y="495.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (194 samples, 2.10%)</title><rect x="88.5467%" y="469" width="2.0962%" height="15" fill="rgb(251,74,28)" fg:x="8195" fg:w="194"/><text x="88.7967%" y="479.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (73 samples, 0.79%)</title><rect x="89.8541%" y="453" width="0.7888%" height="15" fill="rgb(218,20,49)" fg:x="8316" fg:w="73"/><text x="90.1041%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (73 samples, 0.79%)</title><rect x="89.8541%" y="437" width="0.7888%" height="15" fill="rgb(238,28,14)" fg:x="8316" fg:w="73"/><text x="90.1041%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (73 samples, 0.79%)</title><rect x="89.8541%" y="421" width="0.7888%" height="15" fill="rgb(229,40,46)" fg:x="8316" fg:w="73"/><text x="90.1041%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (13 samples, 0.14%)</title><rect x="90.5024%" y="405" width="0.1405%" height="15" fill="rgb(244,195,20)" fg:x="8376" fg:w="13"/><text x="90.7524%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.14%)</title><rect x="90.5024%" y="389" width="0.1405%" height="15" fill="rgb(253,56,35)" fg:x="8376" fg:w="13"/><text x="90.7524%" y="399.50"></text></g><g><title>gb_rs::joypad::Joypad::update (234 samples, 2.53%)</title><rect x="88.1253%" y="517" width="2.5284%" height="15" fill="rgb(210,149,44)" fg:x="8156" fg:w="234"/><text x="88.3753%" y="527.50">gb..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.01%)</title><rect x="90.6429%" y="501" width="0.0108%" height="15" fill="rgb(240,135,12)" fg:x="8389" fg:w="1"/><text x="90.8929%" y="511.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.01%)</title><rect x="90.6429%" y="485" width="0.0108%" height="15" fill="rgb(251,24,50)" fg:x="8389" fg:w="1"/><text x="90.8929%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="90.6429%" y="469" width="0.0108%" height="15" fill="rgb(243,200,47)" fg:x="8389" fg:w="1"/><text x="90.8929%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="90.6429%" y="453" width="0.0108%" height="15" fill="rgb(224,166,26)" fg:x="8389" fg:w="1"/><text x="90.8929%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="90.6429%" y="437" width="0.0108%" height="15" fill="rgb(233,0,47)" fg:x="8389" fg:w="1"/><text x="90.8929%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="90.6429%" y="421" width="0.0108%" height="15" fill="rgb(253,80,5)" fg:x="8389" fg:w="1"/><text x="90.8929%" y="431.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="90.6429%" y="405" width="0.0108%" height="15" fill="rgb(214,133,25)" fg:x="8389" fg:w="1"/><text x="90.8929%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="90.6429%" y="389" width="0.0108%" height="15" fill="rgb(209,27,14)" fg:x="8389" fg:w="1"/><text x="90.8929%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="90.6429%" y="373" width="0.0108%" height="15" fill="rgb(219,102,51)" fg:x="8389" fg:w="1"/><text x="90.8929%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="90.6429%" y="357" width="0.0108%" height="15" fill="rgb(237,18,16)" fg:x="8389" fg:w="1"/><text x="90.8929%" y="367.50"></text></g><g><title>sdl2::timer::&lt;impl sdl2::sdl::TimerSubsystem&gt;::delay (2 samples, 0.02%)</title><rect x="90.6537%" y="517" width="0.0216%" height="15" fill="rgb(241,85,17)" fg:x="8390" fg:w="2"/><text x="90.9037%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (3 samples, 0.03%)</title><rect x="91.0427%" y="469" width="0.0324%" height="15" fill="rgb(236,90,42)" fg:x="8426" fg:w="3"/><text x="91.2927%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (12 samples, 0.13%)</title><rect x="91.0751%" y="437" width="0.1297%" height="15" fill="rgb(249,57,21)" fg:x="8429" fg:w="12"/><text x="91.3251%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::now (7 samples, 0.08%)</title><rect x="91.2048%" y="437" width="0.0756%" height="15" fill="rgb(243,12,36)" fg:x="8441" fg:w="7"/><text x="91.4548%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (7 samples, 0.08%)</title><rect x="91.2048%" y="421" width="0.0756%" height="15" fill="rgb(253,128,47)" fg:x="8441" fg:w="7"/><text x="91.4548%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (26 samples, 0.28%)</title><rect x="91.8963%" y="421" width="0.2809%" height="15" fill="rgb(207,33,20)" fg:x="8505" fg:w="26"/><text x="92.1463%" y="431.50"></text></g><g><title>core::cmp::PartialOrd::ge (26 samples, 0.28%)</title><rect x="91.8963%" y="405" width="0.2809%" height="15" fill="rgb(233,215,35)" fg:x="8505" fg:w="26"/><text x="92.1463%" y="415.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.02%)</title><rect x="92.1556%" y="389" width="0.0216%" height="15" fill="rgb(249,188,52)" fg:x="8529" fg:w="2"/><text x="92.4056%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="92.1664%" y="373" width="0.0108%" height="15" fill="rgb(225,12,32)" fg:x="8530" fg:w="1"/><text x="92.4164%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (1 samples, 0.01%)</title><rect x="92.1664%" y="357" width="0.0108%" height="15" fill="rgb(247,98,14)" fg:x="8530" fg:w="1"/><text x="92.4164%" y="367.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (147 samples, 1.59%)</title><rect x="91.0427%" y="501" width="1.5883%" height="15" fill="rgb(247,219,48)" fg:x="8426" fg:w="147"/><text x="91.2927%" y="511.50"></text></g><g><title>std::time::Instant::duration_since (147 samples, 1.59%)</title><rect x="91.0427%" y="485" width="1.5883%" height="15" fill="rgb(253,60,48)" fg:x="8426" fg:w="147"/><text x="91.2927%" y="495.50"></text></g><g><title>std::time::Instant::checked_duration_since (144 samples, 1.56%)</title><rect x="91.0751%" y="469" width="1.5559%" height="15" fill="rgb(245,15,52)" fg:x="8429" fg:w="144"/><text x="91.3251%" y="479.50"></text></g><g><title>std::sys::unix::time::Instant::checked_sub_instant (144 samples, 1.56%)</title><rect x="91.0751%" y="453" width="1.5559%" height="15" fill="rgb(220,133,28)" fg:x="8429" fg:w="144"/><text x="91.3251%" y="463.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (125 samples, 1.35%)</title><rect x="91.2804%" y="437" width="1.3506%" height="15" fill="rgb(217,180,4)" fg:x="8448" fg:w="125"/><text x="91.5304%" y="447.50"></text></g><g><title>core::time::Duration::new (42 samples, 0.45%)</title><rect x="92.1772%" y="421" width="0.4538%" height="15" fill="rgb(251,24,1)" fg:x="8531" fg:w="42"/><text x="92.4272%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_add (21 samples, 0.23%)</title><rect x="92.4041%" y="405" width="0.2269%" height="15" fill="rgb(212,185,49)" fg:x="8552" fg:w="21"/><text x="92.6541%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (21 samples, 0.23%)</title><rect x="92.4041%" y="389" width="0.2269%" height="15" fill="rgb(215,175,22)" fg:x="8552" fg:w="21"/><text x="92.6541%" y="399.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::convert::From&lt;libc::unix::timespec&gt;&gt;::from (3 samples, 0.03%)</title><rect x="92.8579%" y="453" width="0.0324%" height="15" fill="rgb(250,205,14)" fg:x="8594" fg:w="3"/><text x="93.1079%" y="463.50"></text></g><g><title>std::sys::unix::time::Timespec::new (3 samples, 0.03%)</title><rect x="92.8579%" y="437" width="0.0324%" height="15" fill="rgb(225,211,22)" fg:x="8594" fg:w="3"/><text x="93.1079%" y="447.50"></text></g><g><title>gb_rs::main (7,940 samples, 85.79%)</title><rect x="12.7175%" y="549" width="85.7915%" height="15" fill="rgb(251,179,42)" fg:x="1177" fg:w="7940"/><text x="12.9675%" y="559.50">gb_rs::main</text></g><g><title>gb_rs::gb::GameBoy::run (7,940 samples, 85.79%)</title><rect x="12.7175%" y="533" width="85.7915%" height="15" fill="rgb(208,216,51)" fg:x="1177" fg:w="7940"/><text x="12.9675%" y="543.50">gb_rs::gb::GameBoy::run</text></g><g><title>std::time::Instant::elapsed (725 samples, 7.83%)</title><rect x="90.6753%" y="517" width="7.8336%" height="15" fill="rgb(235,36,11)" fg:x="8392" fg:w="725"/><text x="90.9253%" y="527.50">std::time::..</text></g><g><title>std::time::Instant::now (544 samples, 5.88%)</title><rect x="92.6310%" y="501" width="5.8779%" height="15" fill="rgb(213,189,28)" fg:x="8573" fg:w="544"/><text x="92.8810%" y="511.50">std::ti..</text></g><g><title>std::sys::unix::time::Instant::now (544 samples, 5.88%)</title><rect x="92.6310%" y="485" width="5.8779%" height="15" fill="rgb(227,203,42)" fg:x="8573" fg:w="544"/><text x="92.8810%" y="495.50">std::sy..</text></g><g><title>std::sys::unix::time::Timespec::now (542 samples, 5.86%)</title><rect x="92.6526%" y="469" width="5.8563%" height="15" fill="rgb(244,72,36)" fg:x="8575" fg:w="542"/><text x="92.9026%" y="479.50">std::sy..</text></g><g><title>__clock_gettime_2 (520 samples, 5.62%)</title><rect x="92.8903%" y="453" width="5.6186%" height="15" fill="rgb(213,53,17)" fg:x="8597" fg:w="520"/><text x="93.1403%" y="463.50">__clock..</text></g><g><title>__vdso_clock_gettime (471 samples, 5.09%)</title><rect x="93.4198%" y="437" width="5.0891%" height="15" fill="rgb(207,167,3)" fg:x="8646" fg:w="471"/><text x="93.6698%" y="447.50">__vdso..</text></g><g><title>[[vdso]] (304 samples, 3.28%)</title><rect x="95.2242%" y="421" width="3.2847%" height="15" fill="rgb(216,98,30)" fg:x="8813" fg:w="304"/><text x="95.4742%" y="431.50">[[v..</text></g><g><title>gb_rs::memory::Memory::write_byte (12 samples, 0.13%)</title><rect x="98.5089%" y="549" width="0.1297%" height="15" fill="rgb(236,123,15)" fg:x="9117" fg:w="12"/><text x="98.7589%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="98.6386%" y="549" width="0.0216%" height="15" fill="rgb(248,81,50)" fg:x="9129" fg:w="2"/><text x="98.8886%" y="559.50"></text></g><g><title>impl_thrd_routine (1 samples, 0.01%)</title><rect x="98.6602%" y="549" width="0.0108%" height="15" fill="rgb(214,120,4)" fg:x="9131" fg:w="1"/><text x="98.9102%" y="559.50"></text></g><g><title>iris_blit (1 samples, 0.01%)</title><rect x="98.6710%" y="549" width="0.0108%" height="15" fill="rgb(208,179,34)" fg:x="9132" fg:w="1"/><text x="98.9210%" y="559.50"></text></g><g><title>iris_resource_create_for_image.constprop.0 (1 samples, 0.01%)</title><rect x="98.6818%" y="549" width="0.0108%" height="15" fill="rgb(227,140,7)" fg:x="9133" fg:w="1"/><text x="98.9318%" y="559.50"></text></g><g><title>iris_set_sampler_views (1 samples, 0.01%)</title><rect x="98.6926%" y="549" width="0.0108%" height="15" fill="rgb(214,22,6)" fg:x="9134" fg:w="1"/><text x="98.9426%" y="559.50"></text></g><g><title>iris_set_vertex_buffers (2 samples, 0.02%)</title><rect x="98.7034%" y="549" width="0.0216%" height="15" fill="rgb(207,137,27)" fg:x="9135" fg:w="2"/><text x="98.9534%" y="559.50"></text></g><g><title>iris_syncobj_destroy (1 samples, 0.01%)</title><rect x="98.7250%" y="549" width="0.0108%" height="15" fill="rgb(210,8,46)" fg:x="9137" fg:w="1"/><text x="98.9750%" y="559.50"></text></g><g><title>pb_slab_alloc_reclaimed (1 samples, 0.01%)</title><rect x="98.7358%" y="549" width="0.0108%" height="15" fill="rgb(240,16,54)" fg:x="9138" fg:w="1"/><text x="98.9858%" y="559.50"></text></g><g><title>st_ChooseTextureFormat (2 samples, 0.02%)</title><rect x="98.7466%" y="549" width="0.0216%" height="15" fill="rgb(211,209,29)" fg:x="9139" fg:w="2"/><text x="98.9966%" y="559.50"></text></g><g><title>st_TestProxyTexImage (1 samples, 0.01%)</title><rect x="98.7682%" y="549" width="0.0108%" height="15" fill="rgb(226,228,24)" fg:x="9141" fg:w="1"/><text x="99.0182%" y="559.50"></text></g><g><title>st_TexSubImage (1 samples, 0.01%)</title><rect x="98.7790%" y="549" width="0.0108%" height="15" fill="rgb(222,84,9)" fg:x="9142" fg:w="1"/><text x="99.0290%" y="559.50"></text></g><g><title>st_texture_release_all_sampler_views.part.0 (1 samples, 0.01%)</title><rect x="98.7898%" y="549" width="0.0108%" height="15" fill="rgb(234,203,30)" fg:x="9143" fg:w="1"/><text x="99.0398%" y="559.50"></text></g><g><title>st_update_array_with_popcnt (1 samples, 0.01%)</title><rect x="98.8006%" y="549" width="0.0108%" height="15" fill="rgb(238,109,14)" fg:x="9144" fg:w="1"/><text x="99.0506%" y="559.50"></text></g><g><title>std::sys::unix::time::Timespec::now (1 samples, 0.01%)</title><rect x="98.8115%" y="549" width="0.0108%" height="15" fill="rgb(233,206,34)" fg:x="9145" fg:w="1"/><text x="99.0615%" y="559.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (16 samples, 0.17%)</title><rect x="98.8223%" y="549" width="0.1729%" height="15" fill="rgb(220,167,47)" fg:x="9146" fg:w="16"/><text x="99.0723%" y="559.50"></text></g><g><title>std::time::Instant::elapsed (13 samples, 0.14%)</title><rect x="98.9951%" y="549" width="0.1405%" height="15" fill="rgb(238,105,10)" fg:x="9162" fg:w="13"/><text x="99.2451%" y="559.50"></text></g><g><title>tc_batch_execute (1 samples, 0.01%)</title><rect x="99.1356%" y="549" width="0.0108%" height="15" fill="rgb(213,227,17)" fg:x="9175" fg:w="1"/><text x="99.3856%" y="559.50"></text></g><g><title>tc_flush_resource (1 samples, 0.01%)</title><rect x="99.1464%" y="549" width="0.0108%" height="15" fill="rgb(217,132,38)" fg:x="9176" fg:w="1"/><text x="99.3964%" y="559.50"></text></g><g><title>texsubimage_error_check (1 samples, 0.01%)</title><rect x="99.1572%" y="549" width="0.0108%" height="15" fill="rgb(242,146,4)" fg:x="9177" fg:w="1"/><text x="99.4072%" y="559.50"></text></g><g><title>texture_error_check (1 samples, 0.01%)</title><rect x="99.1680%" y="549" width="0.0108%" height="15" fill="rgb(212,61,9)" fg:x="9178" fg:w="1"/><text x="99.4180%" y="559.50"></text></g><g><title>u_transfer_helper_resource_create (3 samples, 0.03%)</title><rect x="99.1788%" y="549" width="0.0324%" height="15" fill="rgb(247,126,22)" fg:x="9179" fg:w="3"/><text x="99.4288%" y="559.50"></text></g><g><title>[unknown] (8,581 samples, 92.72%)</title><rect x="6.5046%" y="565" width="92.7175%" height="15" fill="rgb(220,196,2)" fg:x="602" fg:w="8581"/><text x="6.7546%" y="575.50">[unknown]</text></g><g><title>util_format_is_luminance_alpha (1 samples, 0.01%)</title><rect x="99.2112%" y="549" width="0.0108%" height="15" fill="rgb(208,46,4)" fg:x="9182" fg:w="1"/><text x="99.4612%" y="559.50"></text></g><g><title>__clock_gettime_2 (4 samples, 0.04%)</title><rect x="99.2220%" y="565" width="0.0432%" height="15" fill="rgb(252,104,46)" fg:x="9183" fg:w="4"/><text x="99.4720%" y="575.50"></text></g><g><title>__GI___mmap64 (8 samples, 0.09%)</title><rect x="99.3625%" y="453" width="0.0864%" height="15" fill="rgb(237,152,48)" fg:x="9196" fg:w="8"/><text x="99.6125%" y="463.50"></text></g><g><title>__free (15 samples, 0.16%)</title><rect x="99.3409%" y="517" width="0.1621%" height="15" fill="rgb(221,59,37)" fg:x="9194" fg:w="15"/><text x="99.5909%" y="527.50"></text></g><g><title>tcache_init.part.0 (15 samples, 0.16%)</title><rect x="99.3409%" y="501" width="0.1621%" height="15" fill="rgb(209,202,51)" fg:x="9194" fg:w="15"/><text x="99.5909%" y="511.50"></text></g><g><title>arena_get2 (15 samples, 0.16%)</title><rect x="99.3409%" y="485" width="0.1621%" height="15" fill="rgb(228,81,30)" fg:x="9194" fg:w="15"/><text x="99.5909%" y="495.50"></text></g><g><title>alloc_new_heap (15 samples, 0.16%)</title><rect x="99.3409%" y="469" width="0.1621%" height="15" fill="rgb(227,42,39)" fg:x="9194" fg:w="15"/><text x="99.5909%" y="479.50"></text></g><g><title>__GI___mprotect (5 samples, 0.05%)</title><rect x="99.4489%" y="453" width="0.0540%" height="15" fill="rgb(221,26,2)" fg:x="9204" fg:w="5"/><text x="99.6989%" y="463.50"></text></g><g><title>___snprintf_chk (1 samples, 0.01%)</title><rect x="99.5030%" y="501" width="0.0108%" height="15" fill="rgb(254,61,31)" fg:x="9209" fg:w="1"/><text x="99.7530%" y="511.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.01%)</title><rect x="99.5030%" y="485" width="0.0108%" height="15" fill="rgb(222,173,38)" fg:x="9209" fg:w="1"/><text x="99.7530%" y="495.50"></text></g><g><title>__printf_buffer (1 samples, 0.01%)</title><rect x="99.5030%" y="469" width="0.0108%" height="15" fill="rgb(218,50,12)" fg:x="9209" fg:w="1"/><text x="99.7530%" y="479.50"></text></g><g><title>u_thread_setname (1 samples, 0.01%)</title><rect x="99.5138%" y="501" width="0.0108%" height="15" fill="rgb(223,88,40)" fg:x="9210" fg:w="1"/><text x="99.7638%" y="511.50"></text></g><g><title>__pthread_setname_np (1 samples, 0.01%)</title><rect x="99.5138%" y="485" width="0.0108%" height="15" fill="rgb(237,54,19)" fg:x="9210" fg:w="1"/><text x="99.7638%" y="495.50"></text></g><g><title>__prctl (1 samples, 0.01%)</title><rect x="99.5138%" y="469" width="0.0108%" height="15" fill="rgb(251,129,25)" fg:x="9210" fg:w="1"/><text x="99.7638%" y="479.50"></text></g><g><title>__clone3 (29 samples, 0.31%)</title><rect x="99.2653%" y="565" width="0.3133%" height="15" fill="rgb(238,97,19)" fg:x="9187" fg:w="29"/><text x="99.5153%" y="575.50"></text></g><g><title>start_thread (23 samples, 0.25%)</title><rect x="99.3301%" y="549" width="0.2485%" height="15" fill="rgb(240,169,18)" fg:x="9193" fg:w="23"/><text x="99.5801%" y="559.50"></text></g><g><title>impl_thrd_routine (22 samples, 0.24%)</title><rect x="99.3409%" y="533" width="0.2377%" height="15" fill="rgb(230,187,49)" fg:x="9194" fg:w="22"/><text x="99.5909%" y="543.50"></text></g><g><title>util_queue_thread_func (7 samples, 0.08%)</title><rect x="99.5030%" y="517" width="0.0756%" height="15" fill="rgb(209,44,26)" fg:x="9209" fg:w="7"/><text x="99.7530%" y="527.50"></text></g><g><title>util_set_thread_affinity (5 samples, 0.05%)</title><rect x="99.5246%" y="501" width="0.0540%" height="15" fill="rgb(244,0,6)" fg:x="9211" fg:w="5"/><text x="99.7746%" y="511.50"></text></g><g><title>__pthread_setaffinity_new (5 samples, 0.05%)</title><rect x="99.5246%" y="485" width="0.0540%" height="15" fill="rgb(248,18,21)" fg:x="9211" fg:w="5"/><text x="99.7746%" y="495.50"></text></g><g><title>__libc_start_main_alias_2 (1 samples, 0.01%)</title><rect x="99.6218%" y="549" width="0.0108%" height="15" fill="rgb(245,180,19)" fg:x="9220" fg:w="1"/><text x="99.8718%" y="559.50"></text></g><g><title>__libc_start_call_main (1 samples, 0.01%)</title><rect x="99.6218%" y="533" width="0.0108%" height="15" fill="rgb(252,118,36)" fg:x="9220" fg:w="1"/><text x="99.8718%" y="543.50"></text></g><g><title>__GI_exit (1 samples, 0.01%)</title><rect x="99.6218%" y="517" width="0.0108%" height="15" fill="rgb(210,224,19)" fg:x="9220" fg:w="1"/><text x="99.8718%" y="527.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.01%)</title><rect x="99.6218%" y="501" width="0.0108%" height="15" fill="rgb(218,30,24)" fg:x="9220" fg:w="1"/><text x="99.8718%" y="511.50"></text></g><g><title>llvm::cl::opt&lt;llvm::TPLoop::MemTransfer, false, llvm::cl::parser&lt;llvm::TPLoop::MemTransfer&gt; &gt;::~opt (1 samples, 0.01%)</title><rect x="99.6218%" y="485" width="0.0108%" height="15" fill="rgb(219,75,50)" fg:x="9220" fg:w="1"/><text x="99.8718%" y="495.50"></text></g><g><title>std::_Function_handler&lt;void (llvm::TPLoop::MemTransfer const&amp;), llvm::cl::opt&lt;llvm::TPLoop::MemTransfer, false, llvm::cl::parser&lt;llvm::TPLoop::MemTransfer&gt; &gt;::Callback::{lambda(llvm::TPLoop::MemTransfer const&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="99.6218%" y="469" width="0.0108%" height="15" fill="rgb(234,72,50)" fg:x="9220" fg:w="1"/><text x="99.8718%" y="479.50"></text></g><g><title>__GI___tunables_init (1 samples, 0.01%)</title><rect x="99.6326%" y="517" width="0.0108%" height="15" fill="rgb(219,100,48)" fg:x="9221" fg:w="1"/><text x="99.8826%" y="527.50"></text></g><g><title>_start (7 samples, 0.08%)</title><rect x="99.5786%" y="565" width="0.0756%" height="15" fill="rgb(253,5,41)" fg:x="9216" fg:w="7"/><text x="99.8286%" y="575.50"></text></g><g><title>_dl_start (2 samples, 0.02%)</title><rect x="99.6326%" y="549" width="0.0216%" height="15" fill="rgb(247,181,11)" fg:x="9221" fg:w="2"/><text x="99.8826%" y="559.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.02%)</title><rect x="99.6326%" y="533" width="0.0216%" height="15" fill="rgb(222,223,25)" fg:x="9221" fg:w="2"/><text x="99.8826%" y="543.50"></text></g><g><title>dl_main (1 samples, 0.01%)</title><rect x="99.6434%" y="517" width="0.0108%" height="15" fill="rgb(214,198,28)" fg:x="9222" fg:w="1"/><text x="99.8934%" y="527.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="99.6434%" y="501" width="0.0108%" height="15" fill="rgb(230,46,43)" fg:x="9222" fg:w="1"/><text x="99.8934%" y="511.50"></text></g><g><title>cso_set_vertex_buffers_and_elements (1 samples, 0.01%)</title><rect x="99.6542%" y="565" width="0.0108%" height="15" fill="rgb(233,65,53)" fg:x="9223" fg:w="1"/><text x="99.9042%" y="575.50"></text></g><g><title>free_zombie_shaders (1 samples, 0.01%)</title><rect x="99.6650%" y="565" width="0.0108%" height="15" fill="rgb(221,121,27)" fg:x="9224" fg:w="1"/><text x="99.9150%" y="575.50"></text></g><g><title>gb_rs::cpu::SizedInstruction::decode (3 samples, 0.03%)</title><rect x="99.6759%" y="565" width="0.0324%" height="15" fill="rgb(247,70,47)" fg:x="9225" fg:w="3"/><text x="99.9259%" y="575.50"></text></g><g><title>glActiveTextureARB (1 samples, 0.01%)</title><rect x="99.7083%" y="565" width="0.0108%" height="15" fill="rgb(228,85,35)" fg:x="9228" fg:w="1"/><text x="99.9583%" y="575.50"></text></g><g><title>glBindTexture (2 samples, 0.02%)</title><rect x="99.7191%" y="565" width="0.0216%" height="15" fill="rgb(209,50,18)" fg:x="9229" fg:w="2"/><text x="99.9691%" y="575.50"></text></g><g><title>glColorPointer (1 samples, 0.01%)</title><rect x="99.7407%" y="565" width="0.0108%" height="15" fill="rgb(250,19,35)" fg:x="9231" fg:w="1"/><text x="99.9907%" y="575.50"></text></g><g><title>glDeleteTextures (1 samples, 0.01%)</title><rect x="99.7515%" y="565" width="0.0108%" height="15" fill="rgb(253,107,29)" fg:x="9232" fg:w="1"/><text x="100.0015%" y="575.50"></text></g><g><title>glDrawArrays (2 samples, 0.02%)</title><rect x="99.7623%" y="565" width="0.0216%" height="15" fill="rgb(252,179,29)" fg:x="9233" fg:w="2"/><text x="100.0123%" y="575.50"></text></g><g><title>glEnableClientState (1 samples, 0.01%)</title><rect x="99.7839%" y="565" width="0.0108%" height="15" fill="rgb(238,194,6)" fg:x="9235" fg:w="1"/><text x="100.0339%" y="575.50"></text></g><g><title>glGenTextures (2 samples, 0.02%)</title><rect x="99.7947%" y="565" width="0.0216%" height="15" fill="rgb(238,164,29)" fg:x="9236" fg:w="2"/><text x="100.0447%" y="575.50"></text></g><g><title>glPixelStorei (1 samples, 0.01%)</title><rect x="99.8163%" y="565" width="0.0108%" height="15" fill="rgb(224,25,9)" fg:x="9238" fg:w="1"/><text x="100.0663%" y="575.50"></text></g><g><title>glTexCoordPointer (1 samples, 0.01%)</title><rect x="99.8271%" y="565" width="0.0108%" height="15" fill="rgb(244,153,23)" fg:x="9239" fg:w="1"/><text x="100.0771%" y="575.50"></text></g><g><title>glTexParameteri (1 samples, 0.01%)</title><rect x="99.8379%" y="565" width="0.0108%" height="15" fill="rgb(212,203,14)" fg:x="9240" fg:w="1"/><text x="100.0879%" y="575.50"></text></g><g><title>iris_predraw_flush_buffers (1 samples, 0.01%)</title><rect x="99.8487%" y="565" width="0.0108%" height="15" fill="rgb(220,164,20)" fg:x="9241" fg:w="1"/><text x="100.0987%" y="575.50"></text></g><g><title>shared_dispatch_stub_215 (3 samples, 0.03%)</title><rect x="99.8595%" y="565" width="0.0324%" height="15" fill="rgb(222,203,48)" fg:x="9242" fg:w="3"/><text x="100.1095%" y="575.50"></text></g><g><title>shared_dispatch_stub_250 (1 samples, 0.01%)</title><rect x="99.8920%" y="565" width="0.0108%" height="15" fill="rgb(215,159,22)" fg:x="9245" fg:w="1"/><text x="100.1420%" y="575.50"></text></g><g><title>shared_dispatch_stub_307 (2 samples, 0.02%)</title><rect x="99.9028%" y="565" width="0.0216%" height="15" fill="rgb(216,183,47)" fg:x="9246" fg:w="2"/><text x="100.1528%" y="575.50"></text></g><g><title>shared_dispatch_stub_320 (1 samples, 0.01%)</title><rect x="99.9244%" y="565" width="0.0108%" height="15" fill="rgb(229,195,25)" fg:x="9248" fg:w="1"/><text x="100.1744%" y="575.50"></text></g><g><title>shared_dispatch_stub_321 (1 samples, 0.01%)</title><rect x="99.9352%" y="565" width="0.0108%" height="15" fill="rgb(224,132,51)" fg:x="9249" fg:w="1"/><text x="100.1852%" y="575.50"></text></g><g><title>shared_dispatch_stub_327 (1 samples, 0.01%)</title><rect x="99.9460%" y="565" width="0.0108%" height="15" fill="rgb(240,63,7)" fg:x="9250" fg:w="1"/><text x="100.1960%" y="575.50"></text></g><g><title>shared_dispatch_stub_328 (1 samples, 0.01%)</title><rect x="99.9568%" y="565" width="0.0108%" height="15" fill="rgb(249,182,41)" fg:x="9251" fg:w="1"/><text x="100.2068%" y="575.50"></text></g><g><title>shared_dispatch_stub_35 (1 samples, 0.01%)</title><rect x="99.9676%" y="565" width="0.0108%" height="15" fill="rgb(243,47,26)" fg:x="9252" fg:w="1"/><text x="100.2176%" y="575.50"></text></g><g><title>st_context_validate (1 samples, 0.01%)</title><rect x="99.9784%" y="565" width="0.0108%" height="15" fill="rgb(233,48,2)" fg:x="9253" fg:w="1"/><text x="100.2284%" y="575.50"></text></g><g><title>all (9,255 samples, 100%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(244,165,34)" fg:x="0" fg:w="9255"/><text x="0.2500%" y="607.50"></text></g><g><title>gb-rs (9,241 samples, 99.85%)</title><rect x="0.1513%" y="581" width="99.8487%" height="15" fill="rgb(207,89,7)" fg:x="14" fg:w="9241"/><text x="0.4013%" y="591.50">gb-rs</text></g><g><title>vbo_exec_copy_to_current (1 samples, 0.01%)</title><rect x="99.9892%" y="565" width="0.0108%" height="15" fill="rgb(244,117,36)" fg:x="9254" fg:w="1"/><text x="100.2392%" y="575.50"></text></g></svg></svg>